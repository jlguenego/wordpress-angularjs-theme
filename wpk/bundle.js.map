{"version":3,"sources":["webpack:///bundle.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/common.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/predicates.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/hof.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/coreservices.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/strings.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/trace.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/targetState.js","webpack:///./node_modules/@uirouter/angularjs/lib/angular.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/interface.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/param.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/rejectFactory.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionHook.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/resolvable.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/utils.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/glob.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transition.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/pathFactory.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/resolveContext.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlMatcher.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/baseLocationService.js","webpack:///./node_modules/@uirouter/angularjs/lib/services.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateObject.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/queue.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/hookRegistry.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/pathNode.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/paramType.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionService.js","webpack:///./node_modules/@uirouter/angularjs/lib/statebuilders/views.js","webpack:///./node_modules/angular-sanitize/index.js","webpack:///./app/jlg-wordpress/jlg-wordpress.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/hookBuilder.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/interface.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/paramTypes.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/stateParams.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateBuilder.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateMatcher.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateQueueManager.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateRegistry.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateService.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/router.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlMatcherFactory.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlRouter.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlRule.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/view/view.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/globals.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlService.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/lazyLoad.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionEventType.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/q.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/injector.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/hashLocationService.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/memoryLocationService.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/pushStateLocationService.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/memoryLocationConfig.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/browserLocationConfig.js","webpack:///./node_modules/@uirouter/angularjs/lib/stateProvider.js","webpack:///./node_modules/@uirouter/angularjs/lib/urlRouterProvider.js","webpack:///./app/main.js","webpack:///./app/jlg-layout/jlg-layout.js","webpack:///./node_modules/angular-sanitize/angular-sanitize.js","webpack:///./app/jlg-wordpress/tmpl/jlg-post-excerpt.html","webpack:///./app/jlg-wordpress/tmpl/jlg-page.html","webpack:///./app/jlg-layout/tmpl/jlg-header.html","webpack:///./app/jlg-layout/tmpl/jlg-body.html","webpack:///./app/jlg-layout/tmpl/jlg-footer.html","webpack:///./app/jlg-route/jlg-route.js","webpack:///./node_modules/@uirouter/angularjs/lib/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/coreResolvables.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/redirectTo.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/resolve.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/views.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/updateGlobals.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/url.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/ignoredTransition.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/invalidTransition.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/view/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/index.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/plugins.js","webpack:///./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/interface.js","webpack:///./node_modules/@uirouter/angularjs/lib/templateFactory.js","webpack:///./node_modules/@uirouter/angularjs/lib/statebuilders/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/angularjs/lib/locationServices.js","webpack:///./node_modules/@uirouter/angularjs/lib/injectables.js","webpack:///./node_modules/@uirouter/angularjs/lib/directives/stateDirectives.js","webpack:///./node_modules/@uirouter/angularjs/lib/stateFilters.js","webpack:///./node_modules/@uirouter/angularjs/lib/directives/viewDirective.js","webpack:///./node_modules/@uirouter/angularjs/lib/viewScroll.js","webpack:///./app/jlg-route/tmpl/jlg-home.html","webpack:///./app/jlg-route/tmpl/jlg-products.html","webpack:///./app/jlg-route/tmpl/jlg-services.html","webpack:///./app/jlg-route/tmpl/jlg-contact.html","webpack:///./app/jlg-route/tmpl/jlg-post.html","webpack:///./app/config.js"],"names":["webpackJsonp","module","exports","__webpack_require__","identity","x","noop","createProxyFunctions","source","target","bind","fnNames","latebind","bindFunction","fnName","makeLateRebindFn","apply","arguments","Object","keys","reduce","acc","name","_inArray","array","obj","indexOf","_removeFrom","idx","splice","_pushTo","arr","val","push","defaults","opts","defaultsList","_i","length","_defaultsList","concat","reverse","defaultVals","extend","pick","ancestors","first","second","path","n","propNames","objCopy","prop_1","omit","filter","hof_1","not","inArray","key","pluck","collection","propName","map","prop","callback","predicates_1","isArray","result","accept","forEach","item","i","find","pushR","assertFn","predicateOrMap","errMsg","Error","isFunction","arrayTuples","args","maxArrayLen","min","Math","applyPairs","memo","keyValTuple","value","isString","tail","undefined","_copy","src","dest","_forEach","cb","_this","_extend","toObj","j","_equals","o1","o2","t1","tup","all","_arraysEq","isDate","getTime","isRegExp","toString","any","b","fn","a1","a2","t","defineProperty","coreservices_1","w","window","angular","fromJson","JSON","parse","toJson","stringify","copy","assign","equals","inherit","parent","extra","create","curry","removeFrom","pushTo","deregAll","functions","slice","mergeR","mapObj","values","allTrueR","elem","anyTrueR","unnestR","flattenR","uniqR","token","unnest","flatten","assertPredicate","assertMap","pairs","sortBy","propFn","checkFn","a","composeSort","sortFns","prev","silenceUncaughtInPromise","promise","catch","e","silentRejection","error","services","$q","reject","isInjectable","head","stateObject_1","toStr","prototype","tis","isUndefined","isDefined","isNull","o","isNullOrUndefined","or","isNumber","isObject","Array","call","isState","StateObject","isPromise","and","pipe","curried","func_args_length","initial_args","compose","start","this","funcs","fn1","fn2","invoke","pattern","struct","propEq","split","is","ctor","constructor","eq","other","v","notImplemented","fnname","$injector","__export","m","p","hasOwnProperty","maxLength","max","str","substr","padString","kebobString","camelCase","replace","$1","toLowerCase","functionToString","fnStr","fnToString","namedFunctionMatch","match","_fn","format","seen","stringifyPattern","splitOnDelim","delim","re","RegExp","common_1","joinNeighborsR","rejectFactory_1","transition_1","resolvable_1","stringifyPatternFn","isRejection","Rejection","isRejectionPromise","_transitionRejection","Transition","Resolvable","beforeAfterSubstr","char","uiViewString","uiview","state","creationContext","id","$type","fqn","normalizedCat","input","Category","strings_1","viewConfigString","viewConfig","view","viewDecl","$context","$id","$uiViewName","$uiViewContextAnchor","_tid","_rid","transLbl","trans","Trace","_enabled","approximateDigests","_set","enabled","categories","k","parseInt","isNaN","category","enable","disable","traceTransitionStart","TRANSITION","console","log","traceTransitionIgnored","traceHookInvocation","step","options","HOOK","event","context","registeredHook","traceHookResult","hookResult","transitionOptions","traceResolvePath","when","RESOLVE","traceResolvableResolved","resolvable","data","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","traceUIViewConfigUpdated","traceUIViewFill","html","traceViewSync","VIEWCONFIG","mapping","_a","uiViewData","config","ui-view fqn","state: view name","$name","sort","localeCompare","table","traceViewServiceEvent","traceViewServiceUIViewEvent","trace","TargetState","_identifier","_definition","_params","_options","identifier","params","$state","self","exists","valid","base","relative","stateName","isDef","ng_from_import","ng_from_global","ng","TransitionHookPhase","TransitionHookScope","unwrapShorthand","cfg","getStaticDefaultValue","isShorthand","$$fn","getType","urlType","location","paramTypes","type","DefType","CONFIG","PATH","SEARCH","paramType_1","ParamType","getSquashPolicy","isOptional","defaultPolicy","squash","getReplace","arrayMode","configuredKeys","from","to","hasOwn","Param","urlMatcherFactory","arrayDefaults","arrayParamNomenclature","$asArray","dynamic","raw","defaultSquashPolicy","isDefaultValue","tuple","_defaultValueCache","defaultValue","$normalize","isSearch","validates","normalized","encoded","encode","exec","paramValues","params_1","param","changed","values1","values2","RejectType","message","detail","d","toPromise","then","superseded","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","interface_1","trace_1","targetState_1","defaultOptions","current","transition","traceData","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","logError","err","router","stateService","defaultErrorHandler","invokeHook","hook","_deregistered","notCurrent","getNotCurrentRejection","normalizeErr","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","handleHookResult","_disposed","_aborted","chain","hooks","waitFor","createHookChainR","nextHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","common_2","defaultResolvePolicy","async","arg1","resolveFn","deps","policy","resolved","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","resolve","resolveContext","getResolvableDependencies","getDependencies","get","invokeResolveFn","resolvedDeps","waitForRx","observable$","cached","cache","take","node","findNode","maybeWaitForRx","applyResolvedValue","resolvedValue","clone","fromData","parseUrl","url","orEmptyString","splitHash","beforehash","hash","_b","splitQuery","search","locationPluginFactory","isHtml5","serviceClass","configurationClass","dispose","service","configuration","locationService","locationConfig","index_1","splitEqual","trimHashVal","keyValsToObjectR","accum","getParams","queryString","buildUrl","loc","searchObject","join","Glob","text","glob","regexpString","seg","regexp","matches","test","fromString","transitionHook_1","hookRegistry_1","hookBuilder_1","pathFactory_1","param_1","resolveContext_1","stateSelf","fromPath","targetState","_deferred","defer","_registeredHooks","_hookBuilder","HookBuilder","globals","_targetState","transitionService","_transitionCount","toPath","PathUtils","buildToPath","_treeChanges","treeChanges","reloadState","createTransitionHookRegFns","onCreateHooks","buildHooksForPhase","CREATE","applyViewConfigs","onBefore","criteria","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","_pluginapi","_getEvents","makeEvent","getHooks","hookName","enteringStates","entering","$view","$from","$to","compare","matchState","pathname","freeze","injector","pathName","subPath","ResolveContext","getResolveTokens","getTokens","addResolvable","topath","targetNode","addResolvables","redirectedFrom","originalTransition","rf","exiting","retained","views","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","matching","nonDynamicParams","includes","resolvables","_changedParams","tc","reload","nodeSchemas","paramSchema","toValues","fromValues","schema","toVals","fromVals","changes","_ignoredReason","pending","same","pathA","pathB","newTC","pendTC","run","getHooksFor","phase","transitionSuccess","success","SUCCESS","transitionError","_error","runTransition","allRunHooks","done","startTransition","lastStartedTransitionId","transitionHistory","enqueue","allBeforeHooks","BEFORE","abort","abstract","paramDefs","parameters","invalidParams","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","pathNode_1","makeTargetState","buildPath","toParams","PathNode","applyRawParams","inheritParams","states","viewDecls","viewConfigs","createViewConfig","toKeys","nodeParamVals","makeInheritedParamsNode","toNode","toParamVals","incomingParamVals","fromParamVals","noInherit","ownParamVals","applyToParams","retainedNode","cloned","keep","node1","node2","retainedWithToParams","paramsFn","nodeA","nodeB","predicate","elementIdx","resolvePolicies","ALL_WHENS","EAGER","LAZY","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","_path","r","getResolvable","subContext","newResolvables","resolvePath","whenOption","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","promises","nodeResolvables","nowait","wait","getResult","_injector","UIInjectorImpl","availableResolvables","res","getDependency","fromInjector","getNative","native","getAsync","quoteRegExp","string","surroundPattern","memoizeTo","splitOnSlash","UrlMatcher","paramFactory","_cache","_children","_segments","_compiled","strict","caseInsensitive","paramMap","segment","placeholder","searchPlaceholder","last","patterns","checkParamErrors","nameValidator","matchDetails","substring","index","lastIndex","fromSearch","append","isRoot","allParams","pathParams","searchParams","nPathSegments","urlm","reverseString","unquoteDashes","allReversed","decode","matcher","parameter","validParamVal","paramDef","getDetails","isValid","urlMatchers","pathSegmentsAndParams","queryParams","isInvalid","pathString","encodeDashes","encodeURIComponent","paramDetails","c","charCodeAt","toUpperCase","staticSegments","cmp","segments","weights","utils_1","BaseLocationServices","fireAfterUpdate","_listener","evt","_listeners","_get","_location","_history","history","evt_1","Event","onChange","$uiRouter","$locationProvider","$get","$location","$browser","$sniffer","$rootScope","$http","$templateCache","ng1LocationService","_runtimeServices","core_1","UIRouter","stateProvider","stateProvider_1","StateProvider","stateRegistry","decorator","views_1","ng1ViewsBuilder","onEnterExitRetain_1","getStateHookBuilder","viewService","_viewConfigFactory","getNg1ViewConfigFactory","locationServices_1","Ng1LocationServices","monkeyPatchPathParameterType","$inject","runBlock","$$state","annotate","strictDi","watchDigests","$watch","angular_1","templateFactory_1","urlRouterProvider_1","mod_init","mod_util","mod_rtr","mod_state","mod_main","getProviderFor","serviceName","$urp","getUrlRouterProvider","uiRouter","urlRouterProvider","UrlRouterProvider","getStateProvider","provider","TemplateFactory","factory","$urlMatcherFactory","$urlRouter","getLocals","ctx","glob_1","stateDecl","isStateClass","__stateObjectCache","nameGlob","ref","root","matchingKeys","Queue","_items","_limit","items","shift","dequeue","size","clear","remove","peekTail","peekHead","criterion","matchGlobs","_state","globStrings","toMatch","registry","hookRegistrationFn","matchObject","RegisteredHook","tranSvc","matchCriteria","priority","_matchingNodes","nodes","_getDefaultMatchCriteria","_getPathTypes","_getMatchingNodes","mn","pathtype","isStateHook","scope","STATE","every","stateOrNode","getParamVal","pDef","diff","ArrayType","mode","arrayWrap","arrayUnwrap","arrayHandler","allTruthyMode","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","$arrayMode","def","$subPattern","sub","coreResolvables_1","redirectTo_1","resolve_1","updateGlobals_1","url_1","lazyLoad_1","transitionEventType_1","ignoredTransition_1","invalidTransition_1","defaultTransOpts","notify","custom","TransitionService","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","paths","_defineEvent","_definePathType","hookOrder","criteriaMatchPath","reverseSort","TransitionEventType","l","cmpByPhase","hookScope","fns","addCoreResolves","registerAddCoreResolvables","registerIgnoredTransitionHook","registerInvalidTransitionHook","redirectTo","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","loadViews","registerLoadEnteringViews","activateViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","updateUrl","registerUpdateUrl","lazyLoad","registerLazyLoadHook","templateFactory","Ng1ViewConfig","tplKeys","ctrlKeys","compKeys","nonCompKeys","allViewKeys","hasAnyKey","viewsObject","$default","component","resolveAs","ViewService","normalizeUIViewTarget","uiViewName","uiViewContextAnchor","loaded","getTemplate","uiView","makeComponentTemplate","bindings","template","load","fromConfig","controller","getController","results","controllerProvider","providerFn","_interopRequireDefault","__esModule","default","_jlgPostExcerpt","_jlgPostExcerpt2","_jlgPage","_jlgPage2","app","$log","isReady","stack","init","debug","response","info","posts","medias","pages","responses","pop","ready","fulfill","jlgWordpress","_this2","$onInit","post","media","featured_media","excerpt","rendered","_this3","title","page","tupleSort","reverseDepthSort","factor","depthDelta","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","makeTransitionHooks","transitionHook","isCreate","$transitions","reg","WAIT","NOWAIT","RXWAIT","ParamTypes","typeQueue","defaultTypes","makeType","definition","types","definitionFn","_flushTypeQueue","makeDefaultType","valToString","defaultTypeBase","String","query","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","Date","valueOf","json","StateParams","$inherit","newParams","$current","parentParams","parents","inherited","inheritList","nameBuilder","selfBuilder","dataBuilder","pathBuilder","includesBuilder","resolvablesBuilder","isResolveLiteral","isLikeNg2Provider","provide","useValue","useFactory","useExisting","useClass","isTupleFromObj","literal2Resolvable","dependencies","tuple2Resolvable","item2Resolvable","decl","resolveObj","charAt","getUrlBuilder","$urlMatcherFactoryProvider","stateDec","parsed","compile","paramConfig","reloadOnSearch","isMatcher","navigable","getNavigableBuilder","getParamsBuilder","makeConfigParam","urlParams","nonUrlParams","StateBuilder","parentBuilder","parentName","builders","builder","build","parentFn","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","StateQueueManager","$registry","listeners","queue","register","flush","registered","orphans","previousQueueLength","getState","name_1","orphanIdx","existingState","existingFutureState","deregister","attachRoute","listener","s","rule","urlRuleFactory","stateMatcher_1","stateBuilder_1","stateQueueManager_1","StateRegistry","stateQueue","urlRouter","_registerRoot","rootStateDef","#","_root","onStatesChanged","stateDefinition","_deregisterTree","getChildren","children","deregistered","$ur","rules","removeRule","deregisteredStates","found","func","queue_1","transitionService_1","StateService","invalidCallbacks","_defaultErrorHandler","$error$","getters","boundFns","enumerable","configurable","_handleInvalidTargetState","toState","invokeNextCallback","nextCallback","callbackQueue","fromState","checkForRedirect","latestThing","latest","transitionTo","onInvalid","go","defautGoOpts","transOpts","getCurrentPath","latestSuccess","successfulTransitions","getCurrent","currentPath","rejectedTransitionHandler","isLatest","update","transitionToPromise","include","href","defaultHrefOpts","lossy","absolute","nav","handler","lazyLoadState","urlMatcherFactory_1","urlRouter_1","view_1","stateRegistry_1","stateService_1","globals_1","urlService_1","_routerInstance","UrlService","locationServiceStub","locationConfigStub","_disposables","UIRouterGlobals","UrlMatcherFactory","UrlRouter","urlService","_plugins","_rootViewContext","disposable","plugin","pluginInstance","getPlugin","pluginName","urlMatcher_1","paramTypes_1","_isCaseInsensitive","_isStrictMode","_defaultSquashPolicy","_getConfig","strictMode","object","appendBasePath","baseHref","getHandlerFn","defaultRuleSortFn","urlRule_1","getMatcher","URLMATCHER","REGEXP","RAW","OTHER","_sortFn","_rules","interceptDeferred","_id","_sorted","UrlRuleFactory","listen","_otherwiseFn","compareFn","ensureSorted","best","weight","matchPriority","sync","defaultPrevented","$url","newurl","_stopFn","read","urlMatcher","html5Mode","hashPrefix","slash","port","protocol","host","isUrlRule","otherwise","handlerFn","initial","matchFn","urlParts","deferIntercept","what","makeRule","_what","fromUrlMatcher","fromRegExp","BaseUrlRule","optional","_handler","details","global","sticky","redirectUrlTo","Number","_uiViews","_viewConfigs","_viewConfigFactories","_registeredUIViews","_activeViewConfigs","_rootContext","viewType","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewDepth","stateDepth","viewConfigDepth","count","uiViewsByFqn","uiv","depthCompare","depthFn","posNeg","matchingConfigPair","matchingConfigs","configureUIView","configUpdated","registerUIView","uiViews","fqnAndTypeMatches","available","active","rawViewName","viewAtContext","relativeViewNameSugar","anchor","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","stateParams_1","makeStub","locationServicesFns","locationConfigFns","umfFns","rulesFns","syncFns","lateBind","locationServices","umf","parts","updateStateRegistry","lazyLoadFn","lazyLoadHook","retryTransition","orig","Promise","deferred","STRIP_COMMENTS","ARGUMENT_NAMES","has","locals","ensureExist","__extends","extendStatics","setPrototypeOf","__proto__","__","baseLocationService_1","HashLocationService","_super","addEventListener","removeEventListener","MemoryLocationService","_url","PushStateLocationService","_config","fullUrl","replaceState","pushState","MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","newval","BrowserLocationConfig","_isHtml5","newprefix","applyDocumentBaseHref","baseTags","document","getElementsByTagName","origin","core_2","_urlRouter","ruleFn","injectableHandler","$match","$stateParams","_jlgHeader","_jlgHeader2","_jlgBody","_jlgBody2","_jlgFooter","_jlgFooter2","$SanitizeProvider","toMap","lowercaseKeys","lowercase","htmlParserImpl","inertBodyElement","getInertBodyElement","mXSSAttempts","$sanitizeMinErr","innerHTML","firstChild","nodeType","nodeName","attrToMap","attributes","chars","textContent","nextNode","end","getNonDescendant","removeChild","attrs","ii","attr","encodeEntities","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","htmlSanitizeWriterImpl","buf","uriValidator","ignoreCurrentElement","out","tag","blockedElements","validElements","lkey","isImage","validAttrs","uriAttrs","voidElements","stripCustomNsAttrs","Node","ELEMENT_NODE","attrNode","attrName","lastIndexOf","removeAttributeNode","nodeContains","outerHTML","outerText","svgEnabled","$$sanitizeUri","svgElements","htmlParser","htmlSanitizeWriter","uri","enableSvg","contains","arg","compareDocumentPosition","optionalEndTagBlockElements","optionalEndTagInlineElements","optionalEndTagElements","blockElements","inlineElements","htmlAttrs","svgAttrs","getInertBodyElement_XHR","encodeURI","xhr","XMLHttpRequest","responseType","open","send","body","getInertBodyElement_DOMParser","DOMParser","parseFromString","getInertBodyElement_InertDocument","documentMode","inertDocument","implementation","createHTMLDocument","documentElement","getDocumentElement","querySelector","sanitizeText","$$minErr","angularVersion","$sanitize","LINKY_URL_REGEXP","MAILTO_REGEXP","linkyMinErr","addText","attributesFn","linkAttributes","_jlgHome","_jlgHome2","_jlgProducts","_jlgProducts2","_jlgServices","_jlgServices2","_jlgContact","_jlgContact2","_jlgPost","_jlgPost2","$urlRouterProvider","$stateProvider","ctrl","controllerAs","core","addCoreResolvables","router_1","redirectToHook","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","loadEnteringViews","enteringViews","exitingViews","updateGlobalState","transitionSuccessful","clearCurrentTransition","urlOptions","ignoredHook","ignoredReason","invalidTransitionHook","servicesPlugin","injector_1","q_1","browserLocationConfig_1","hashLocationService_1","pushStateLocationService_1","memoryLocationService_1","memoryLocationConfig_1","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","getComponentBindings","cmpDefs","getBindings","_useHttp","version","minor","$templateRequest","useHttpService","asTemplate","asComponent","templateUrl","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","headers","Accept","prefix","kebob","kebobed","attributeTpl","resolveName","kebobName","scopeBindings","bindToController","bindingsObj","services_1","decoratedNg1Hook","$state$","$transition$","_urlListeners","_lp","newUrl","$on","_loc","_browser","pathType","~","/","~~","~2F","parseStateRef","paramsOnly","paramExpr","el","$uiView","inheritedData","processedDef","$element","uiState","uiStateOpts","defaultOpts","uiStateParams","getTypeInfo","isSvg","isForm","isAnchor","clickable","clickHook","$timeout","getDef","button","which","ctrlKey","metaKey","shiftKey","preventDefault","ignorePreventDefaultCount","cancel","bindEvents","element","events","on","events_1","event_1","off","events_2","event_2","uiSref","restrict","require","link","uiSrefActive","unlinkInfoFn","$$addStateInfo","$set","rawDef","uiSrefOpts","$eval","inputAttrs","watchDeregFns","field","$observe","expr","$interpolate","$scope","$attrs","updateAfterTransition","addState","stateParams","activeClass","stateInfo","splitClasses","getClasses","stateList","allClasses","activeEqClass","fuzzyClasses","exactlyMatchesAny","exactClasses","addClasses","removeClasses","cls","$evalAsync","className","addClass","removeClass","uiSrefActiveEq","newState","directive","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","$ViewDirectiveFill","$compile","$controller","getControllerAs","getResolveAs","tElement","empty","contents","$cfg","angular_2","resolveCtx","controllerInstance","registerControllerCallbacks","cmp_1","tagRegexp_1","getComponentController","directiveEl","tagName","deregisterWatch_1","ctrlInstance","hasComponentImpl","viewState","hookOptions","uiOnParamsChanged","viewCreationTrans_1","paramsUpdated","fromParams","toSchema","fromSchema","changedToParams","changedKeys_1","newValues","uiCanExit","id_1","_uiCanExitId","prevTruthyAnswer_1","wrappedHook","ids","$animate","$uiViewScroll","getRenderer","enter","leave","configsEqual","config1","config2","rootData","terminal","transclude","tAttrs","$transclude","configUpdatedCallback","activeUIView","updateView","cleanupLastView","previousEl","currentScope","$destroy","currentEl","_viewData_1","renderer","$$animLeave","newScope","$new","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","$emit","autoScrollExp","onloadExp","unregister","fromParentTagConfig","fromParentTag","$ViewScrollProvider","useAnchorScroll","$anchorScroll","scrollIntoView","contact","products"],"mappings":"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","file":"bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred\n * @module common\n */\n/** for typedoc */\nvar predicates_1 = __webpack_require__(1);\nvar hof_1 = __webpack_require__(2);\nvar coreservices_1 = __webpack_require__(3);\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nexports.fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexports.toJson = angular.toJson || JSON.stringify.bind(JSON);\nexports.copy = angular.copy || _copy;\nexports.forEach = angular.forEach || _forEach;\nexports.extend = Object.assign || _extend;\nexports.equals = angular.equals || _equals;\nfunction identity(x) { return x; }\nexports.identity = identity;\nfunction noop() { }\nexports.noop = noop;\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nfunction createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) {\n        return source()[fnName].bind(bind());\n    };\n    var makeLateRebindFn = function (fnName) { return function lateRebindFunction() {\n        target[fnName] = bindFunction(fnName);\n        return target[fnName].apply(null, arguments);\n    }; };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\nexports.createProxyFunctions = createProxyFunctions;\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexports.inherit = function (parent, extra) {\n    return exports.extend(Object.create(parent), extra);\n};\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nvar restArgs = function (args, idx) {\n    if (idx === void 0) { idx = 0; }\n    return Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexports.inArray = hof_1.curry(_inArray);\nfunction _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\nexports._inArray = _inArray;\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexports.removeFrom = hof_1.curry(_removeFrom);\nfunction _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\nexports._removeFrom = _removeFrom;\n/** pushes a values to an array and returns the value */\nexports.pushTo = hof_1.curry(_pushTo);\nfunction _pushTo(arr, val) {\n    return (arr.push(val), val);\n}\nexports._pushTo = _pushTo;\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexports.deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        exports.removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var _defaultsList = defaultsList.concat({}).reverse();\n    var defaultVals = exports.extend.apply(null, _defaultsList);\n    return exports.extend({}, defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\nexports.defaults = defaults;\n/** Reduce function that merges each element of the list into a single object, using extend */\nexports.mergeR = function (memo, item) { return exports.extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\nexports.ancestors = ancestors;\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nfunction pick(obj, propNames) {\n    var objCopy = {};\n    for (var prop_1 in obj) {\n        if (propNames.indexOf(prop_1) !== -1) {\n            objCopy[prop_1] = obj[prop_1];\n        }\n    }\n    return objCopy;\n}\nexports.pick = pick;\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nfunction omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(hof_1.not(exports.inArray(propNames)))\n        .reduce(function (acc, key) { return (acc[key] = obj[key], acc); }, {});\n}\nexports.omit = omit;\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, hof_1.prop(propName));\n}\nexports.pluck = pluck;\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = predicates_1.isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    exports.forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\nexports.filter = filter;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    exports.forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\nexports.find = find;\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexports.mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = predicates_1.isArray(collection) ? [] : {};\n    exports.forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\nexports.map = map;\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexports.values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexports.allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexports.anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flattenR = function (memo, elem) {\n    return predicates_1.isArray(elem) ? memo.concat(elem.reduce(exports.flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\nexports.pushR = pushR;\n/** Reduce function that filters out duplicates */\nexports.uniqR = function (acc, token) {\n    return exports.inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnest = function (arr) { return arr.reduce(exports.unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flatten = function (arr) { return arr.reduce(exports.flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexports.assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexports.assertMap = assertFn;\nfunction assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(predicates_1.isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\nexports.assertFn = assertFn;\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexports.pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var i, result = [];\n    for (i = 0; i < maxArrayLen; i++) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    }\n    return result;\n}\nexports.arrayTuples = arrayTuples;\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (predicates_1.isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!predicates_1.isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\nexports.applyPairs = applyPairs;\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\nexports.tail = tail;\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return exports.extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (predicates_1.isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nexports._extend = _extend;\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (hof_1.all(predicates_1.isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (hof_1.all(predicates_1.isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (hof_1.all(predicates_1.isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (hof_1.all(predicates_1.isFunction)(tup))\n        return true; // meh\n    var predicates = [predicates_1.isFunction, predicates_1.isArray, predicates_1.isDate, predicates_1.isRegExp];\n    if (predicates.map(hof_1.any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n/**\n * Create a sort function\n *\n * Creates a sort function which sorts by a numeric property.\n *\n * The `propFn` should return the property as a number which can be sorted.\n *\n * #### Example:\n * This example returns the `priority` prop.\n * ```js\n * var sortfn = sortBy(obj => obj.priority)\n * // equivalent to:\n * var longhandSortFn = (a, b) => a.priority - b.priority;\n * ```\n *\n * #### Example:\n * This example uses [[prop]]\n * ```js\n * var sortfn = sortBy(prop('priority'))\n * ```\n *\n * The `checkFn` can be used to exclude objects from sorting.\n *\n * #### Example:\n * This example only sorts objects with type === 'FOO'\n * ```js\n * var sortfn = sortBy(prop('priority'), propEq('type', 'FOO'))\n * ```\n *\n * @param propFn a function that returns the property (as a number)\n * @param checkFn a predicate\n *\n * @return a sort function like: `(a, b) => (checkFn(a) && checkFn(b)) ? propFn(a) - propFn(b) : 0`\n */\nexports.sortBy = function (propFn, checkFn) {\n    if (checkFn === void 0) { checkFn = hof_1.val(true); }\n    return function (a, b) {\n        return (checkFn(a) && checkFn(b)) ? propFn(a) - propFn(b) : 0;\n    };\n};\n/**\n * Composes a list of sort functions\n *\n * Creates a sort function composed of multiple sort functions.\n * Each sort function is invoked in series.\n * The first sort function to return non-zero \"wins\".\n *\n * @param sortFns list of sort functions\n */\nexports.composeSort = function () {\n    var sortFns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sortFns[_i] = arguments[_i];\n    }\n    return function composedSort(a, b) {\n        return sortFns.reduce(function (prev, fn) { return prev || fn(a, b); }, 0);\n    };\n};\n// issue #2676\nexports.silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nexports.silentRejection = function (error) {\n    return exports.silenceUncaughtInPromise(coreservices_1.services.$q.reject(error));\n};\n//# sourceMappingURL=common.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */\n/** */\nvar hof_1 = __webpack_require__(2);\nvar stateObject_1 = __webpack_require__(24);\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nexports.isUndefined = tis('undefined');\nexports.isDefined = hof_1.not(exports.isUndefined);\nexports.isNull = function (o) { return o === null; };\nexports.isNullOrUndefined = hof_1.or(exports.isNull, exports.isUndefined);\nexports.isFunction = tis('function');\nexports.isNumber = tis('number');\nexports.isString = tis('string');\nexports.isObject = function (x) { return x !== null && typeof x === 'object'; };\nexports.isArray = Array.isArray;\nexports.isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexports.isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\nexports.isState = stateObject_1.StateObject.isState;\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val) {\n    if (exports.isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(hof_1.not(exports.isString)).length || tail.filter(hof_1.not(exports.isFunction)).length);\n    }\n    return exports.isFunction(val);\n}\nexports.isInjectable = isInjectable;\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexports.isPromise = hof_1.and(exports.isObject, hof_1.pipe(hof_1.prop('then'), exports.isFunction));\n//# sourceMappingURL=predicates.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\nexports.curry = curry;\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\nexports.compose = compose;\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\nexports.pipe = pipe;\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexports.prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexports.propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexports.parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(exports.prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexports.not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\nexports.and = and;\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\nexports.or = or;\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexports.all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nexports.any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexports.is = function (ctor) {\n    return function (obj) {\n        return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n    };\n};\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexports.eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nexports.val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\nexports.invoke = invoke;\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\nexports.pattern = pattern;\n//# sourceMappingURL=hof.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded.\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexports.services = services;\n//# sourceMappingURL=coreservices.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @coreapi\n * @module common\n */ /** */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(11));\n__export(__webpack_require__(78));\n__export(__webpack_require__(79));\n__export(__webpack_require__(80));\n__export(__webpack_require__(81));\n__export(__webpack_require__(91));\n__export(__webpack_require__(92));\n__export(__webpack_require__(93));\n__export(__webpack_require__(47));\n__export(__webpack_require__(42));\n__export(__webpack_require__(94));\n__export(__webpack_require__(97));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar predicates_1 = __webpack_require__(1);\nvar rejectFactory_1 = __webpack_require__(12);\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar transition_1 = __webpack_require__(17);\nvar resolvable_1 = __webpack_require__(14);\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\nexports.maxLength = maxLength;\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nexports.padString = padString;\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nexports.kebobString = kebobString;\nfunction _toJson(obj) {\n    return JSON.stringify(obj);\n}\nfunction _fromJson(json) {\n    return predicates_1.isString(json) ? JSON.parse(json) : json;\n}\nfunction promiseToString(p) {\n    return \"Promise(\" + JSON.stringify(p) + \")\";\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexports.functionToString = functionToString;\nfunction fnToString(fn) {\n    var _fn = predicates_1.isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nexports.fnToString = fnToString;\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isRejection = rejectFactory_1.Rejection.isRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || hof_1.pattern([\n        [hof_1.not(predicates_1.isDefined), hof_1.val(\"undefined\")],\n        [predicates_1.isNull, hof_1.val(\"null\")],\n        [predicates_1.isPromise, hof_1.val(\"[Promise]\")],\n        [isRejection, function (x) { return x._transitionRejection.toString(); }],\n        [hof_1.is(rejectFactory_1.Rejection), hof_1.invoke(\"toString\")],\n        [hof_1.is(transition_1.Transition), hof_1.invoke(\"toString\")],\n        [hof_1.is(resolvable_1.Resolvable), hof_1.invoke(\"toString\")],\n        [predicates_1.isInjectable, functionToString],\n        [hof_1.val(true), common_1.identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val) {\n        if (predicates_1.isObject(val)) {\n            if (seen.indexOf(val) !== -1)\n                return '[circular ref]';\n            seen.push(val);\n        }\n        return stringifyPattern(val);\n    }\n    return JSON.stringify(o, function (key, val) { return format(val); }).replace(/\\\\\"/g, '\"');\n}\nexports.stringify = stringify;\n/** Returns a function that splits a string on a character or substring */\nexports.beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nfunction splitOnDelim(delim) {\n    var re = new RegExp(\"(\" + delim + \")\", \"g\");\n    return function (str) {\n        return str.split(re).filter(common_1.identity);\n    };\n}\nexports.splitOnDelim = splitOnDelim;\n;\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nfunction joinNeighborsR(acc, x) {\n    if (predicates_1.isString(common_1.tail(acc)) && predicates_1.isString(x))\n        return acc.slice(0, -1).concat(common_1.tail(acc) + x);\n    return common_1.pushR(acc, x);\n}\nexports.joinNeighborsR = joinNeighborsR;\n;\n//# sourceMappingURL=strings.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @coreapi\n * @module trace\n */ /** for typedoc */\nvar hof_1 = __webpack_require__(2);\nvar predicates_1 = __webpack_require__(1);\nvar strings_1 = __webpack_require__(5);\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return predicates_1.isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category = exports.Category || (exports.Category = {}));\n/** @hidden */ var _tid = hof_1.parse(\"$id\");\n/** @hidden */ var _rid = hof_1.parse(\"router.$id\");\n/** @hidden */ var transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + strings_1.stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + strings_1.stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + strings_1.maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + strings_1.maxLength(200, strings_1.stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + strings_1.maxLength(200, strings_1.stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + strings_1.stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + strings_1.stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + strings_1.padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + strings_1.maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var mapping = pairs.map(function (_a) {\n            var uiViewData = _a[0], config = _a[1];\n            var uiView = uiViewData.$type + \":\" + uiViewData.fqn;\n            var view = config && config.viewDecl.$context.name + \": \" + config.viewDecl.$name + \" (\" + config.viewDecl.$type + \")\";\n            return { 'ui-view fqn': uiView, 'state: view name': view };\n        }).sort(function (a, b) { return a['ui-view fqn'].localeCompare(b['ui-view fqn']); });\n        console.table(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexports.Trace = Trace;\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexports.trace = trace;\n//# sourceMappingURL=trace.js.map\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + common_1.toJson(this.params());\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) {\n        return obj && obj.state && (predicates_1.isString(obj.state) || predicates_1.isString(obj.state.name));\n    };\n    return TargetState;\n}());\nexports.TargetState = TargetState;\n//# sourceMappingURL=targetState.js.map\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ng_from_import = __webpack_require__(22);\nvar ng_from_global = angular;\nexports.ng = (ng_from_import && ng_from_import.module) ? ng_from_import : ng_from_global;\n//# sourceMappingURL=angular.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase = exports.TransitionHookPhase || (exports.TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope = exports.TransitionHookScope || (exports.TransitionHookScope = {}));\n//# sourceMappingURL=interface.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar predicates_1 = __webpack_require__(1);\nvar coreservices_1 = __webpack_require__(3);\nvar paramType_1 = __webpack_require__(28);\n/** @hidden */ var hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */ var isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType = exports.DefType || (exports.DefType = {}));\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    return common_1.extend(cfg, {\n        $$fn: predicates_1.isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue,\n    });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG ? \"any\" :\n            location === DefType.PATH ? \"path\" :\n                location === DefType.SEARCH ? \"query\" : \"string\";\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof paramType_1.ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!predicates_1.isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || predicates_1.isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") },\n    ];\n    replace = predicates_1.isArray(config.replace) ? config.replace : [];\n    if (predicates_1.isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = common_1.map(replace, hof_1.prop(\"from\"));\n    return common_1.filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = (function () {\n    function Param(id, type, config, location, urlMatcherFactory) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, urlMatcherFactory.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = predicates_1.isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = predicates_1.isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlMatcherFactory.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = predicates_1.isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return common_1.extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        common_1.extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!coreservices_1.services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = coreservices_1.services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return predicates_1.isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((predicates_1.isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(predicates_1.isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(common_1.allTrueR, true);\n    };\n    return Param;\n}());\nexports.Param = Param;\n//# sourceMappingURL=param.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module common */ /** for typedoc */\n__export(__webpack_require__(0));\n__export(__webpack_require__(3));\n__export(__webpack_require__(16));\n__export(__webpack_require__(2));\n__export(__webpack_require__(1));\n__export(__webpack_require__(25));\n__export(__webpack_require__(5));\n__export(__webpack_require__(6));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\nvar strings_1 = __webpack_require__(5);\nvar hof_1 = __webpack_require__(2);\nvar RejectType;\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType = exports.RejectType || (exports.RejectType = {}));\n/** @hidden */ var id = 0;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : strings_1.stringify(d);\n        };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return common_1.extend(common_1.silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && hof_1.is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = \"The transition has been aborted\";\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = \"The transition errored\";\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return hof_1.is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    return Rejection;\n}());\nexports.Rejection = Rejection;\n//# sourceMappingURL=rejectFactory.js.map\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar interface_1 = __webpack_require__(9);\nvar common_1 = __webpack_require__(0);\nvar strings_1 = __webpack_require__(5);\nvar predicates_1 = __webpack_require__(1);\nvar hof_1 = __webpack_require__(2);\nvar trace_1 = __webpack_require__(6);\nvar coreservices_1 = __webpack_require__(3);\nvar rejectFactory_1 = __webpack_require__(12);\nvar targetState_1 = __webpack_require__(7);\nvar defaultOptions = {\n    current: common_1.noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.type.hookPhase === interface_1.TransitionHookPhase.RUN && !_this.options.transition.isActive();\n        };\n        this.options = common_1.defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace_1.trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () {\n            return hook.callback.call(options.bind, _this.transition, _this.stateContext);\n        };\n        var normalizeErr = function (err) {\n            return rejectFactory_1.Rejection.normalize(err).toPromise();\n        };\n        var handleError = function (err) {\n            return hook.eventType.getErrorHandler(_this)(err);\n        };\n        var handleResult = function (result) {\n            return hook.eventType.getResultHandler(_this)(result);\n        };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && predicates_1.isPromise(result)) {\n                return result.catch(normalizeErr)\n                    .then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(rejectFactory_1.Rejection.normalize(err));\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (predicates_1.isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace_1.trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return rejectFactory_1.Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = hof_1.is(targetState_1.TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return rejectFactory_1.Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return rejectFactory_1.Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return rejectFactory_1.Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return rejectFactory_1.Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + strings_1.maxLength(200, name);\n    };\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        return hooks.reduce(createHookChainR, waitFor || coreservices_1.services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (predicates_1.isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult)\n                    .then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        predicates_1.isPromise(result) && result.catch(function (err) {\n            return hook.logError(rejectFactory_1.Rejection.normalize(err));\n        });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) {\n        return hook.logError(error);\n    }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) {\n        return common_1.silentRejection(error);\n    }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexports.TransitionHook = TransitionHook;\n//# sourceMappingURL=transitionHook.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module resolve\n */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar coreservices_1 = __webpack_require__(3);\nvar trace_1 = __webpack_require__(6);\nvar strings_1 = __webpack_require__(5);\nvar predicates_1 = __webpack_require__(1);\nvar common_2 = __webpack_require__(11);\n// TODO: explicitly make this user configurable\nexports.defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            common_1.extend(this, arg1);\n        }\n        else if (predicates_1.isFunction(resolveFn)) {\n            if (common_2.isNullOrUndefined(arg1))\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!predicates_1.isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? coreservices_1.services.$q.when(this.data) : undefined;\n        }\n        else if (predicates_1.isObject(arg1) && arg1.token && predicates_1.isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || exports.defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || exports.defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = coreservices_1.services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) {\n                return resolvable.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : common_1.identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace_1.trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + strings_1.stringify(this.token) + \", requires: [\" + this.deps.map(strings_1.stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\nexports.Resolvable = Resolvable;\n//# sourceMappingURL=resolvable.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = __webpack_require__(11);\nvar common_1 = __webpack_require__(0);\nvar beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexports.splitHash = beforeAfterSubstr(\"#\");\nexports.splitQuery = beforeAfterSubstr(\"?\");\nexports.splitEqual = beforeAfterSubstr(\"=\");\nexports.trimHashVal = function (str) { return str ? str.replace(/^#/, \"\") : \"\"; };\nexports.keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (index_1.isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexports.getParams = function (queryString) {\n    return queryString.split(\"&\").filter(common_1.identity).map(exports.splitEqual).reduce(exports.keyValsToObjectR, {});\n};\nfunction parseUrl(url) {\n    var orEmptyString = function (x) { return x || \"\"; };\n    var _a = exports.splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = exports.splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexports.parseUrl = parseUrl;\nexports.buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject).map(function (key) {\n        var param = searchObject[key];\n        var vals = index_1.isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + \"=\" + val; });\n    }).reduce(common_1.unnestR, []).join(\"&\");\n    return path + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n};\nfunction locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (router) {\n        var service = router.locationService = new serviceClass(router);\n        var configuration = router.locationConfig = new configurationClass(router, isHtml5);\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\nexports.locationPluginFactory = locationPluginFactory;\n//# sourceMappingURL=utils.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    return Glob;\n}());\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar trace_1 = __webpack_require__(6);\nvar coreservices_1 = __webpack_require__(3);\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar hof_1 = __webpack_require__(2);\nvar interface_1 = __webpack_require__(9); // has or is using\nvar transitionHook_1 = __webpack_require__(13);\nvar hookRegistry_1 = __webpack_require__(26);\nvar hookBuilder_1 = __webpack_require__(33);\nvar pathFactory_1 = __webpack_require__(18);\nvar targetState_1 = __webpack_require__(7);\nvar param_1 = __webpack_require__(10);\nvar resolvable_1 = __webpack_require__(14);\nvar resolveContext_1 = __webpack_require__(19);\n/** @hidden */\nvar stateSelf = hof_1.prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = coreservices_1.services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new hookBuilder_1.HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () {\n            return _this.router.globals.transition === _this;\n        };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = common_1.extend({ current: hof_1.val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = pathFactory_1.PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = pathFactory_1.PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(interface_1.TransitionHookPhase.CREATE);\n        transitionHook_1.TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) { return; };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi._getEvents()\n            .filter(function (type) { return type.hookPhase !== interface_1.TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return hookRegistry_1.makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        pathFactory_1.PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return common_1.tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return common_1.tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !hookRegistry_1.matchState(this.$to(), compare.to)) ||\n            (compare.from && !hookRegistry_1.matchState(this.$from(), compare.from)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return Object.freeze(this._treeChanges[pathname].map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `data` resolve\n     *   // even though `foo.bar` also has a `data` resolve\n     *   var fooData = trans.injector('foo').get('data');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `data` from the exiting state.\n     *   var fooData = trans.injector(null, 'foo.bar').get('data');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = \"to\"; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = pathFactory_1.PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new resolveContext_1.ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return new resolveContext_1.ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        resolvable = hof_1.is(resolvable_1.Resolvable)(resolvable) ? resolvable : new resolvable_1.Resolvable(resolvable);\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = common_1.find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new resolveContext_1.ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return common_1.map(this._treeChanges.entering, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return common_1.map(this._treeChanges.exiting, hof_1.prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return common_1.map(this._treeChanges.retained, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(hof_1.propEq('state', state));\n        return path.map(hof_1.prop(\"views\")).filter(common_1.identity).reduce(common_1.unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: \"redirect\" };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = common_1.extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = new targetState_1.TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = pathFactory_1.PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, pathFactory_1.PathUtils.nonDynamicParams)\n            .filter(hof_1.not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = common_1.arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(common_1.anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = common_1.arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return param_1.Param.changed(schema, toVals, fromVals);\n        }).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(common_1.anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = pathFactory_1.PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return \"SameAsPending\";\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return \"SameAsCurrent\";\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = transitionHook_1.TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) {\n            return _this._hookBuilder.buildHooksForPhase(phase);\n        };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace_1.trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(interface_1.TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace_1.trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(interface_1.TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(interface_1.TransitionHookPhase.RUN);\n            var done = function () { return coreservices_1.services.$q.when(undefined); };\n            return transitionHook_1.TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace_1.trace.traceTransitionStart(_this);\n            return coreservices_1.services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(interface_1.TransitionHookPhase.BEFORE);\n        transitionHook_1.TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (predicates_1.isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        var paramDefs = state.parameters(), values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            return \"Param values not valid for state '\" + state.name + \"'. Invalid params: [ \" + invalidParams.map(function (param) { return param.id; }).join(', ') + \" ]\";\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : common_1.omit(params, [\"#\"]);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = predicates_1.isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = common_1.toJson(avoidEmptyHash(this._treeChanges.from.map(hof_1.prop('paramValues')).reduce(common_1.mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = predicates_1.isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = common_1.toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexports.Transition = Transition;\n//# sourceMappingURL=transition.js.map\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/** @module path */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar targetState_1 = __webpack_require__(7);\nvar pathNode_1 = __webpack_require__(27);\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (path) {\n        var state = common_1.tail(path).state;\n        return new targetState_1.TargetState(state, state, path.map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new pathNode_1.PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return common_1.inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = common_1.values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(common_1.unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = common_1.find(path, hof_1.propEq('state', state));\n            return common_1.extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath.map(function (node) { return node.paramSchema; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(hof_1.prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = common_1.extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = common_1.pick(toParamVals, toKeys);\n            toParamVals = common_1.omit(toParamVals, toKeys);\n            var fromParamVals = common_1.omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = common_1.extend(toParamVals, fromParamVals, incomingParamVals);\n            return new pathNode_1.PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, PathUtils.nonDynamicParams);\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = pathNode_1.PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = common_1.arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length &&\n            PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = common_1.find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false })\n            .filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) {\n        return path.reduce(function (acc, node) { return common_1.extend(acc, node.paramValues); }, {});\n    };\n    return PathUtils;\n}());\nexports.PathUtils = PathUtils;\n//# sourceMappingURL=pathFactory.js.map\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module resolve */\n/** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar trace_1 = __webpack_require__(6);\nvar coreservices_1 = __webpack_require__(3);\nvar interface_1 = __webpack_require__(34);\nvar resolvable_1 = __webpack_require__(14);\nvar pathFactory_1 = __webpack_require__(18);\nvar strings_1 = __webpack_require__(5);\nvar when = interface_1.resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nexports.NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(common_1.uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return common_1.tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(pathFactory_1.PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = common_1.find(this._path, hof_1.propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = common_1.inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === interface_1.resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace_1.trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) {\n            return function (resolvable) {\n                return common_1.inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n            };\n        };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(hof_1.not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return coreservices_1.services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return common_1.find(this._path, function (node) { return common_1.inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = pathFactory_1.PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return common_1.tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + strings_1.stringify(token));\n            }\n            return new resolvable_1.Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexports.ResolveContext = ResolveContext;\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(exports.NATIVE_INJECTOR_TOKEN) || coreservices_1.services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + strings_1.stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return coreservices_1.services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module url\n */\n/** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar predicates_1 = __webpack_require__(1);\nvar param_1 = __webpack_require__(10);\nvar strings_1 = __webpack_require__(5);\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop, fn) {\n    return obj[prop] = obj[prop] || fn();\n};\n/** @hidden */\nvar splitOnSlash = strings_1.splitOnDelim('/');\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern;\n        this.config = common_1.defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: common_1.identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (common_1.find(_this._params, hof_1.propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (regexp) { return common_1.inherit(paramTypes.type(isSearch ? \"query\" : \"path\"), {\n                pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n            }); };\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp)\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(paramFactory.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, common_1.tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(paramFactory.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (pattern) { return quoteRegExp.apply(null, pattern); }).concat(quoteRegExp(segment));\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                common_1.unnest(_this._cache.path.map(hof_1.prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = common_1.map(split, reverseString);\n            return common_1.map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (predicates_1.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (predicates_1.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values[\"#\"] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return common_1.unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) {\n            return !param || param.validates(val);\n        };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(common_1.allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(common_1.unnestR, [])\n            .map(function (x) { return predicates_1.isString(x) ? x : getDetails(x); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams)\n            .reduce(common_1.unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (predicates_1.isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (predicates_1.isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (predicates_1.isArray(encoded))\n                return acc + common_1.map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!predicates_1.isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = common_1.map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        }).filter(common_1.identity).reduce(common_1.unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return \"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase(); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === param_1.DefType.PATH; });\n        return common_1.arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(common_1.unnestR, [])\n            .filter(function (x) { return x !== \"\" && predicates_1.isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === param_1.DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return matcher._cache.segments = matcher._cache.segments ||\n                matcher._cache.path.map(UrlMatcher.pathSegmentsAndParams)\n                    .reduce(common_1.unnestR, [])\n                    .reduce(strings_1.joinNeighborsR, [])\n                    .map(function (x) { return predicates_1.isString(x) ? splitOnSlash(x) : x; })\n                    .reduce(common_1.unnestR, []);\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return matcher._cache.weights = matcher._cache.weights ||\n                segments(matcher).map(function (segment) {\n                    // Sort slashes first, then static strings, the Params\n                    if (segment === '/')\n                        return 1;\n                    if (predicates_1.isString(segment))\n                        return 2;\n                    if (segment instanceof param_1.Param)\n                        return 3;\n                });\n        };\n        var cmp, i, pairs = common_1.arrayTuples(weights(a), weights(b));\n        for (i = 0; i < pairs.length; i++) {\n            cmp = pairs[i][0] - pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexports.UrlMatcher = UrlMatcher;\n//# sourceMappingURL=urlMatcher.js.map\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @internalapi\n * @module vanilla\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = __webpack_require__(15);\nvar predicates_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(0);\n/** A base `LocationServices` */\nvar BaseLocationServices = (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this._listeners = [];\n        this.hash = function () { return utils_1.parseUrl(_this._get()).hash; };\n        this.path = function () { return utils_1.parseUrl(_this._get()).path; };\n        this.search = function () { return utils_1.getParams(utils_1.parseUrl(_this._get()).search); };\n        this._location = window && window.location;\n        this._history = window && window.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (predicates_1.isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                var evt_1 = common_1.extend(new Event(\"locationchange\"), { url: url });\n                this._listeners.forEach(function (cb) { return cb(evt_1); });\n            }\n        }\n        return utils_1.buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return common_1.removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        common_1.deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexports.BaseLocationServices = BaseLocationServices;\n//# sourceMappingURL=baseLocationService.js.map\n\n/***/ }),\n/* 22 */,\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @module ng1\n * @preferred\n */\n/** for typedoc */\nvar angular_1 = __webpack_require__(8);\nvar core_1 = __webpack_require__(4);\nvar views_1 = __webpack_require__(30);\nvar templateFactory_1 = __webpack_require__(98);\nvar stateProvider_1 = __webpack_require__(58);\nvar onEnterExitRetain_1 = __webpack_require__(99);\nvar locationServices_1 = __webpack_require__(100);\nvar urlRouterProvider_1 = __webpack_require__(59);\nangular_1.ng.module(\"ui.router.angular1\", []);\nvar mod_init = angular_1.ng.module('ui.router.init', []);\nvar mod_util = angular_1.ng.module('ui.router.util', ['ng', 'ui.router.init']);\nvar mod_rtr = angular_1.ng.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular_1.ng.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular_1.ng.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular_1.ng.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new core_1.UIRouter();\n    router.stateProvider = new stateProvider_1.StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator(\"views\", views_1.ng1ViewsBuilder);\n    router.stateRegistry.decorator(\"onExit\", onEnterExitRetain_1.getStateHookBuilder(\"onExit\"));\n    router.stateRegistry.decorator(\"onRetain\", onEnterExitRetain_1.getStateHookBuilder(\"onRetain\"));\n    router.stateRegistry.decorator(\"onEnter\", onEnterExitRetain_1.getStateHookBuilder(\"onEnter\"));\n    router.viewService._pluginapi._viewConfigFactory('ng1', views_1.getNg1ViewConfigFactory());\n    var ng1LocationService = router.locationService = router.locationConfig = new locationServices_1.Ng1LocationServices($locationProvider);\n    locationServices_1.Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return ['$uiRouterProvider', function ($urp) {\n        var service = $urp.router[serviceName];\n        service[\"$get\"] = function () { return service; };\n        return service;\n    }]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    core_1.services.$injector = $injector;\n    core_1.services.$q = $q;\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry.get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(core_1.unnestR, [])\n        .filter(function (x) { return x.deps === \"deferred\"; })\n        .forEach(function (resolvable) { return resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) {\n    return uiRouter.urlRouterProvider = new urlRouterProvider_1.UrlRouterProvider(uiRouter);\n};\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () {\n    return core_1.extend(router.stateProvider, { $get: function () { return router.stateService; } });\n};\nwatchDigests.$inject = ['$rootScope'];\nfunction watchDigests($rootScope) {\n    $rootScope.$watch(function () { core_1.trace.approximateDigests++; });\n}\nexports.watchDigests = watchDigests;\nmod_init.provider(\"$uiRouter\", $uiRouter);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new templateFactory_1.TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service(\"$trace\", function () { return core_1.trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nexports.getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(core_1.isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(core_1.applyPairs, {});\n};\n//# sourceMappingURL=services.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar glob_1 = __webpack_require__(16);\nvar predicates_1 = __webpack_require__(1);\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = common_1.inherit(common_1.inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: glob_1.Glob.fromString(state.name) // might return null\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = common_1.defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(common_1.values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            common_1.find(common_1.values(this.params), hof_1.propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return predicates_1.isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) {\n        return predicates_1.isObject(obj['__stateObjectCache']);\n    };\n    return StateObject;\n}());\nexports.StateObject = StateObject;\n//# sourceMappingURL=stateObject.js.map\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module common\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexports.Queue = Queue;\n//# sourceMappingURL=queue.js.map\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar interface_1 = __webpack_require__(9); // has or is using\nvar glob_1 = __webpack_require__(16);\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = predicates_1.isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new glob_1.Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (predicates_1.isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\nexports.matchState = matchState;\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return common_1.map(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges) {\n        var _this = this;\n        var criteria = common_1.extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = common_1.values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === interface_1.TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [common_1.tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name]);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges) {\n        var matches = this._getMatchingNodes(treeChanges);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = common_1.values(matches).every(common_1.identity);\n        return allMatched ? matches : null;\n    };\n    return RegisteredHook;\n}());\nexports.RegisteredHook = RegisteredHook;\n/** @hidden Return a registration function of the requested type. */\nfunction makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = registry._registeredHooks = (registry._registeredHooks || {});\n    var hooks = _registeredHooks[eventType.name] = [];\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, options);\n        hooks.push(registeredHook);\n        return function deregisterEventHook() {\n            registeredHook._deregistered = true;\n            common_1.removeFrom(hooks)(registeredHook);\n        };\n    }\n    return hookRegistrationFn;\n}\nexports.makeEvent = makeEvent;\n//# sourceMappingURL=hookRegistry.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module path */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar param_1 = __webpack_require__(10);\n/**\n * @internalapi\n *\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = common_1.extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return common_1.applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return common_1.find(this.paramSchema, hof_1.propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return param_1.Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    return PathNode;\n}());\nexports.PathNode = PathNode;\n//# sourceMappingURL=pathNode.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        common_1.extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexports.ParamType = ParamType;\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return predicates_1.isArray(val) ? val : (predicates_1.isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (predicates_1.isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = common_1.map(arr, callback);\n            return (allTruthyMode === true) ? common_1.filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    common_1.extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n//# sourceMappingURL=paramType.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar interface_1 = __webpack_require__(9);\nvar transition_1 = __webpack_require__(17);\nvar hookRegistry_1 = __webpack_require__(26);\nvar coreResolvables_1 = __webpack_require__(82);\nvar redirectTo_1 = __webpack_require__(83);\nvar onEnterExitRetain_1 = __webpack_require__(84);\nvar resolve_1 = __webpack_require__(85);\nvar views_1 = __webpack_require__(86);\nvar updateGlobals_1 = __webpack_require__(87);\nvar url_1 = __webpack_require__(88);\nvar lazyLoad_1 = __webpack_require__(49);\nvar transitionEventType_1 = __webpack_require__(50);\nvar transitionHook_1 = __webpack_require__(13);\nvar predicates_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar ignoredTransition_1 = __webpack_require__(89);\nvar invalidTransition_1 = __webpack_require__(90);\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexports.defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = common_1.createProxyFunctions(hof_1.val(this), {}, hof_1.val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]);\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) { return; };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        common_1.values(this._registeredHooks).forEach(function (hooksArray) { return hooksArray.forEach(function (hook) {\n            hook._deregistered = true;\n            common_1.removeFrom(hooksArray, hook);\n        }); });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new transition_1.Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = interface_1.TransitionHookPhase;\n        var TH = transitionHook_1.TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var ASYNCHRONOUS = false, SYNCHRONOUS = true;\n        this._defineEvent(\"onCreate\", Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onBefore\", Phase.BEFORE, 0, paths.to);\n        this._defineEvent(\"onStart\", Phase.RUN, 0, paths.to);\n        this._defineEvent(\"onExit\", Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent(\"onRetain\", Phase.RUN, 200, paths.retained);\n        this._defineEvent(\"onEnter\", Phase.RUN, 300, paths.entering);\n        this._defineEvent(\"onFinish\", Phase.RUN, 400, paths.to);\n        this._defineEvent(\"onSuccess\", Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onError\", Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = interface_1.TransitionHookScope.STATE, TRANSITION = interface_1.TransitionHookScope.TRANSITION;\n        this._definePathType(\"to\", TRANSITION);\n        this._definePathType(\"from\", TRANSITION);\n        this._definePathType(\"exiting\", STATE);\n        this._definePathType(\"retained\", STATE);\n        this._definePathType(\"entering\", STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = transitionHook_1.TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = transitionHook_1.TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new transitionEventType_1.TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        hookRegistry_1.makeEvent(this, this, eventType);\n    };\n    ;\n    /** @hidden */\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = predicates_1.isDefined(phase) ?\n            this._eventTypes.filter(function (type) { return type.hookPhase === phase; }) :\n            this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = coreResolvables_1.registerAddCoreResolvables(this);\n        fns.ignored = ignoredTransition_1.registerIgnoredTransitionHook(this);\n        fns.invalid = invalidTransition_1.registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = redirectTo_1.registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = onEnterExitRetain_1.registerOnExitHook(this);\n        fns.onRetain = onEnterExitRetain_1.registerOnRetainHook(this);\n        fns.onEnter = onEnterExitRetain_1.registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = resolve_1.registerEagerResolvePath(this);\n        fns.lazyResolve = resolve_1.registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = views_1.registerLoadEnteringViews(this);\n        fns.activateViews = views_1.registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = updateGlobals_1.registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = url_1.registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = lazyLoad_1.registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexports.TransitionService = TransitionService;\n//# sourceMappingURL=transitionService.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(4);\nfunction getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || core_1.services.$injector.get(\"$templateFactory\");\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\nexports.getNg1ViewConfigFactory = getNg1ViewConfigFactory;\nvar hasAnyKey = function (keys, obj) {\n    return keys.reduce(function (acc, key) { return acc || core_1.isDefined(obj[key]); }, false);\n};\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nfunction ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (core_1.isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return core_1.isDefined(state[key]); }).join(\", \")));\n    }\n    var views = {}, viewsObject = state.views || { \"$default\": core_1.pick(state, allViewKeys) };\n    core_1.forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || \"$default\";\n        // Account for views: { header: \"headerComponent\" }\n        if (core_1.isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = core_1.extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join(\"|\") + \" with: \" + nonCompKeys.join(\"|\") + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = \"ng1\";\n        config.$context = state;\n        config.$name = name;\n        var normalized = core_1.ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\nexports.ng1ViewsBuilder = ng1ViewsBuilder;\nvar id = 0;\nvar Ng1ViewConfig = (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings) : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = core_1.services.$q;\n        var context = new core_1.ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return core_1.extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context))\n        };\n        return $q.all(promises).then(function (results) {\n            core_1.trace.traceViewServiceEvent(\"Loaded\", _this);\n            _this.controller = results.controller;\n            core_1.extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!core_1.isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\nexports.Ng1ViewConfig = Ng1ViewConfig;\n//# sourceMappingURL=views.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(68);\nmodule.exports = 'ngSanitize';\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(31);\n\n__webpack_require__(69);\n\nvar _jlgPostExcerpt = __webpack_require__(70);\n\nvar _jlgPostExcerpt2 = _interopRequireDefault(_jlgPostExcerpt);\n\nvar _jlgPage = __webpack_require__(71);\n\nvar _jlgPage2 = _interopRequireDefault(_jlgPage);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = angular.module('jlg-wordpress', ['ngSanitize']);\n\napp.service('jlgWordpress', [\"$log\", \"$q\", \"$http\", function JlgWordpress($log, $q, $http) {\n\t'ngInject';\n\n\tvar _this = this;\n\n\tvar service = this;\n\tthis.isReady = false;\n\tvar stack = [];\n\tthis.url = undefined;\n\n\tthis.init = function () {\n\t\t$log.debug('jlgWordpress.url', _this.url);\n\t\tif (!_this.url) {\n\t\t\t$log.error('JlgWordpress: url not defined in provider!');\n\t\t\treturn;\n\t\t}\n\t\tvar url = _this.url + 'wp-json';\n\t\t$q.all([$http.get(url).then(function (response) {\n\t\t\t$log.debug('response', response);\n\t\t\tservice.info = response.data;\n\t\t}), $http.get(url + '/wp/v2/posts').then(function (response) {\n\t\t\t$log.debug('response', response);\n\t\t\tservice.posts = response.data;\n\t\t}), $http.get(url + '/wp/v2/media').then(function (response) {\n\t\t\t$log.debug('response', response);\n\t\t\tservice.medias = response.data;\n\t\t}), $http.get(url + '/wp/v2/pages').then(function (response) {\n\t\t\t$log.debug('response', response);\n\t\t\tservice.pages = response.data;\n\t\t})]).then(function (responses) {\n\t\t\t_this.isReady = true;\n\t\t\t$log.debug('stack', stack);\n\t\t\twhile (stack.length) {\n\t\t\t\tstack.pop()();\n\t\t\t}\n\t\t}).catch(function (error) {\n\t\t\t$log.error('error', error);\n\t\t});\n\t};\n\n\tservice.ready = function () {\n\t\treturn $q(function (fulfill) {\n\t\t\tif (_this.isReady) {\n\t\t\t\treturn fulfill();\n\t\t\t}\n\t\t\tstack.push(fulfill);\n\t\t});\n\t};\n}]);\n\napp.controller('jlgWordpressCtrl', [\"$http\", \"$log\", \"jlgWordpress\", function JlgBodyUrl($http, $log, jlgWordpress) {\n\t'ngInject';\n\n\tvar ctrl = this;\n\tctrl.jlgWordpress = jlgWordpress;\n}]);\n\napp.component('jlgPostExcerpt', {\n\ttemplate: _jlgPostExcerpt2.default,\n\tcontroller: [\"$log\", \"jlgWordpress\", function JlgPostExcerptCtrl($log, jlgWordpress) {\n\t\t'ngInject';\n\n\t\tvar _this2 = this;\n\n\t\tthis.ready = false;\n\t\tthis.$onInit = function () {\n\t\t\tjlgWordpress.ready().then(function () {\n\t\t\t\tif (_this2.id) {\n\t\t\t\t\t_this2.post = jlgWordpress.posts.find(function (n) {\n\t\t\t\t\t\treturn n.id === _this2.id;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (_this2.post === undefined) {\n\t\t\t\t\t$log.error('post not found');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_this2.media = jlgWordpress.medias.find(function (n) {\n\t\t\t\t\treturn n.id === _this2.post.featured_media;\n\t\t\t\t});\n\t\t\t\t_this2.excerpt = _this2.post.excerpt.rendered.replace(/<p class=\"link-more\">.*<\\/p>/, '');\n\t\t\t\t_this2.ready = true;\n\t\t\t});\n\t\t};\n\t}],\n\tbindings: {\n\t\tid: '<?',\n\t\tpost: '<?'\n\t}\n});\n\napp.component('jlgPage', {\n\ttemplate: _jlgPage2.default,\n\tcontroller: [\"$log\", \"jlgWordpress\", function JlgPageCtrl($log, jlgWordpress) {\n\t\t'ngInject';\n\n\t\tvar _this3 = this;\n\n\t\tthis.ready = false;\n\t\tthis.$onInit = function () {\n\t\t\tjlgWordpress.ready().then(function () {\n\t\t\t\tif (_this3.title) {\n\t\t\t\t\t_this3.page = jlgWordpress.pages.find(function (n) {\n\t\t\t\t\t\treturn n.title.rendered === _this3.title;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (_this3.page === undefined) {\n\t\t\t\t\t$log.error('page not found');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_this3.ready = true;\n\t\t\t});\n\t\t};\n\t}],\n\tbindings: {\n\t\ttitle: '<?',\n\t\tpage: '<?'\n\t}\n});\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar interface_1 = __webpack_require__(9);\nvar transitionHook_1 = __webpack_require__(13);\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(common_1.unnestR, [])\n            .filter(common_1.identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = common_1.extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node }\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === interface_1.TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new transitionHook_1.TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(common_1.unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges) {\n        var isCreate = hookType.hookPhase === interface_1.TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries.map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(common_1.assertPredicate(predicates_1.isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(common_1.unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexports.HookBuilder = HookBuilder;\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internalapi */\nexports.resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n//# sourceMappingURL=interface.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar hof_1 = __webpack_require__(2);\nvar coreservices_1 = __webpack_require__(3);\nvar paramType_1 = __webpack_require__(28);\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n */\nvar ParamTypes = (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = common_1.pick(ParamTypes.prototype, [\"hash\", \"string\", \"query\", \"path\", \"int\", \"bool\", \"date\", \"json\", \"any\"]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) {\n            return new paramType_1.ParamType(common_1.extend({ name: name }, definition));\n        };\n        this.types = common_1.inherit(common_1.map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!predicates_1.isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new paramType_1.ParamType(common_1.extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            common_1.extend(this.types[type.name], coreservices_1.services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexports.ParamTypes = ParamTypes;\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) {\n            return val != null ? val.toString() : val;\n        };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: hof_1.is(String),\n            pattern: /.*/,\n            equals: function (a, b) { return a == b; },\n        };\n        return common_1.extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    common_1.extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !predicates_1.isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return val && 1 || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: hof_1.is(Boolean),\n            pattern: /0|1/\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val) ? undefined : [\n                    val.getFullYear(),\n                    ('0' + (val.getMonth() + 1)).slice(-2),\n                    ('0' + val.getDate()).slice(-2)\n                ].join(\"-\");\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate']\n                    .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n        }),\n        json: makeDefaultType({\n            encode: common_1.toJson,\n            decode: common_1.fromJson,\n            is: hof_1.is(Object),\n            equals: common_1.equals,\n            pattern: /[^/]*/\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: common_1.identity,\n            decode: common_1.identity,\n            is: function () { return true; },\n            equals: common_1.equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = __webpack_require__(0);\n/** @internalapi */\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        common_1.extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = common_1.ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return common_1.extend({}, inherited, newParams);\n    };\n    ;\n    return StateParams;\n}());\nexports.StateParams = StateParams;\n//# sourceMappingURL=stateParams.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar strings_1 = __webpack_require__(5);\nvar hof_1 = __webpack_require__(2);\nvar resolvable_1 = __webpack_require__(14);\nvar coreservices_1 = __webpack_require__(3);\nvar parseUrl = function (url) {\n    if (!predicates_1.isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = common_1.inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = common_1.extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, config); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = common_1.values(common_1.mapObj(common_1.omit(state.params || {}, urlParams.map(hof_1.prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(common_1.applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? common_1.extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = coreservices_1.services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || \"deferred\";\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (predicates_1.isString(obj.val) || predicates_1.isArray(obj.val) || predicates_1.isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = hof_1.pattern([\n        [hof_1.prop('resolveFn'), function (p) { return new resolvable_1.Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [hof_1.prop('useFactory'), function (p) { return new resolvable_1.Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [hof_1.prop('useClass'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [hof_1.prop('useValue'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [hof_1.prop('useExisting'), function (p) { return new resolvable_1.Resolvable(token(p), common_1.identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = hof_1.pattern([\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isString), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.identity, [tuple.val], tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isArray), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isFunction), function (tuple) { return new resolvable_1.Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = hof_1.pattern([\n        [hof_1.is(resolvable_1.Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [hof_1.val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + strings_1.stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = predicates_1.isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\nexports.resolvablesBuilder = resolvablesBuilder;\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (predicates_1.isString(name) && !predicates_1.isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!predicates_1.isString(name) || !predicates_1.isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, common_1.noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || \"\";\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\nexports.StateBuilder = StateBuilder;\n//# sourceMappingURL=stateBuilder.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar predicates_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(0);\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = predicates_1.isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = common_1.values(this._states);\n            var matches = _states.filter(function (state) {\n                return state.__stateObjectCache.nameGlob &&\n                    state.__stateObjectCache.nameGlob.matches(name);\n            });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\nexports.StateMatcher = StateMatcher;\n//# sourceMappingURL=stateMatcher.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar stateObject_1 = __webpack_require__(24);\nvar hof_1 = __webpack_require__(2);\n/** @internalapi */\nvar StateQueueManager = (function () {\n    function StateQueueManager($registry, $urlRouter, states, builder, listeners) {\n        this.$registry = $registry;\n        this.$urlRouter = $urlRouter;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n        this.matcher = $registry.matcher;\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = stateObject_1.StateObject.create(stateDecl);\n        var name = state.name;\n        if (!predicates_1.isString(name))\n            throw new Error(\"State must have a valid name\");\n        if (this.states.hasOwnProperty(name) || common_1.inArray(queue.map(hof_1.prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) {\n            return _this.states.hasOwnProperty(name) && _this.states[name];\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + \".**\");\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.$registry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        this.$urlRouter.rule(this.$urlRouter.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexports.StateQueueManager = StateQueueManager;\n//# sourceMappingURL=stateQueueManager.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stateMatcher_1 = __webpack_require__(38);\nvar stateBuilder_1 = __webpack_require__(37);\nvar stateQueueManager_1 = __webpack_require__(39);\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar StateRegistry = (function () {\n    /** @internalapi */\n    function StateRegistry(_router) {\n        this._router = _router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new stateMatcher_1.StateMatcher(this.states);\n        this.builder = new stateBuilder_1.StateBuilder(this.matcher, _router.urlMatcherFactory);\n        this.stateQueue = new stateQueueManager_1.StateQueueManager(this, _router.urlRouter, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            common_1.removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            var $ur = _this._router.urlRouter;\n            // Remove URL rule\n            $ur.rules().filter(hof_1.propEq(\"state\", state)).forEach($ur.removeRule.bind($ur));\n            // Remove state from registry\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexports.StateRegistry = StateRegistry;\n//# sourceMappingURL=stateRegistry.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module state\n */\n/** */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar queue_1 = __webpack_require__(25);\nvar coreservices_1 = __webpack_require__(3);\nvar pathFactory_1 = __webpack_require__(18);\nvar pathNode_1 = __webpack_require__(27);\nvar transitionService_1 = __webpack_require__(29);\nvar rejectFactory_1 = __webpack_require__(12);\nvar targetState_1 = __webpack_require__(7);\nvar param_1 = __webpack_require__(10);\nvar glob_1 = __webpack_require__(16);\nvar resolveContext_1 = __webpack_require__(19);\nvar lazyLoad_1 = __webpack_require__(49);\nvar hof_1 = __webpack_require__(2);\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof rejectFactory_1.Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(hof_1.not(common_1.inArray(getters)));\n        common_1.createProxyFunctions(hof_1.val(StateService.prototype), this, hof_1.val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(common_1.noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = pathFactory_1.PathUtils.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new queue_1.Queue(this.invalidCallbacks.slice());\n        var injector = new resolveContext_1.ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof targetState_1.TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return rejectFactory_1.Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return rejectFactory_1.Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return rejectFactory_1.Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = coreservices_1.services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            common_1.removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: predicates_1.isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    ;\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = common_1.defaults(options, defautGoOpts, transitionService_1.defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    ;\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (predicates_1.isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (predicates_1.isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new targetState_1.TargetState(identifier, stateDefinition, params, options);\n    };\n    ;\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new pathNode_1.PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = common_1.defaults(options, transitionService_1.defaultTransOpts);\n        var getCurrent = function () {\n            return globals.transition;\n        };\n        options = common_1.extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return common_1.silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof rejectFactory_1.Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId === transition.$id;\n                if (error.type === rejectFactory_1.RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return coreservices_1.services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === rejectFactory_1.RejectType.SUPERSEDED && error.redirected && detail instanceof targetState_1.TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === rejectFactory_1.RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return coreservices_1.services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return coreservices_1.services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        common_1.silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return common_1.extend(transitionToPromise, { transition: transition });\n    };\n    ;\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return param_1.Param.equals(schema, param_1.Param.values(schema, params), this.params);\n    };\n    ;\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var glob = predicates_1.isString(stateOrName) && glob_1.Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (!predicates_1.isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return param_1.Param.equals(schema, param_1.Param.values(schema, params), this.params);\n    };\n    ;\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = common_1.defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, {\n            absolute: options.absolute,\n        });\n    };\n    ;\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error(\"Can not lazy load \" + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = pathFactory_1.PathUtils.makeTargetState(currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoad_1.lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexports.StateService = StateService;\n//# sourceMappingURL=stateService.js.map\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */ /** */\nvar urlMatcherFactory_1 = __webpack_require__(43);\nvar urlRouter_1 = __webpack_require__(44);\nvar transitionService_1 = __webpack_require__(29);\nvar view_1 = __webpack_require__(46);\nvar stateRegistry_1 = __webpack_require__(40);\nvar stateService_1 = __webpack_require__(41);\nvar globals_1 = __webpack_require__(47);\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar urlService_1 = __webpack_require__(48);\nvar trace_1 = __webpack_require__(6);\n/** @hidden */\nvar _routerInstance = 0;\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = urlService_1.UrlService.locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = urlService_1.UrlService.locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace_1.trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new view_1.ViewService();\n        /** Provides services related to Transitions */\n        this.transitionService = new transitionService_1.TransitionService(this);\n        /** Global router state */\n        this.globals = new globals_1.UIRouterGlobals();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new urlMatcherFactory_1.UrlMatcherFactory();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new urlRouter_1.UrlRouter(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new stateRegistry_1.StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new stateService_1.StateService(this);\n        /** Provides services related to the URL */\n        this.urlService = new urlService_1.UrlService(this);\n        /** @hidden */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlRouter);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && predicates_1.isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                common_1.removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error(\"Required property `name` missing on plugin: \" + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return this._plugins[pluginInstance.name] = pluginInstance;\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : common_1.values(this._plugins);\n    };\n    return UIRouter;\n}());\nexports.UIRouter = UIRouter;\n//# sourceMappingURL=router.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module url\n */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar urlMatcher_1 = __webpack_require__(20);\nvar param_1 = __webpack_require__(10);\nvar paramTypes_1 = __webpack_require__(35);\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        var _this = this;\n        /** @hidden */ this.paramTypes = new paramTypes_1.ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @hidden */\n        this._getConfig = function (config) {\n            return common_1.extend({ strict: _this._isStrictMode, caseInsensitive: _this._isCaseInsensitive }, config);\n        };\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = {\n            /** Creates a new [[Param]] from a CONFIG block */\n            fromConfig: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.CONFIG, _this);\n            },\n            /** Creates a new [[Param]] from a url PATH */\n            fromPath: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.PATH, _this);\n            },\n            /** Creates a new [[Param]] from a url SEARCH */\n            fromSearch: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.SEARCH, _this);\n            },\n        };\n        common_1.extend(this, { UrlMatcher: urlMatcher_1.UrlMatcher, Param: param_1.Param });\n    }\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = predicates_1.isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return this._isStrictMode = predicates_1.isDefined(value) ? value : this._isStrictMode;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        if (predicates_1.isDefined(value) && value !== true && value !== false && !predicates_1.isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = predicates_1.isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new urlMatcher_1.UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!predicates_1.isObject(object))\n            return false;\n        var result = true;\n        common_1.forEach(urlMatcher_1.UrlMatcher.prototype, function (val, name) {\n            if (predicates_1.isFunction(val))\n                result = result && (predicates_1.isDefined(object[name]) && predicates_1.isFunction(object[name]));\n        });\n        return result;\n    };\n    ;\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !predicates_1.isDefined(definition) ? type : this;\n    };\n    ;\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    ;\n    /** @internalapi */\n    UrlMatcherFactory.prototype.dispose = function () {\n        this.paramTypes.dispose();\n    };\n    return UrlMatcherFactory;\n}());\nexports.UrlMatcherFactory = UrlMatcherFactory;\n//# sourceMappingURL=urlMatcherFactory.js.map\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module url\n */\n/** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar predicates_1 = __webpack_require__(1);\nvar urlMatcher_1 = __webpack_require__(20);\nvar hof_1 = __webpack_require__(2);\nvar urlRule_1 = __webpack_require__(45);\nvar targetState_1 = __webpack_require__(7);\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/** @hidden */\nvar getMatcher = hof_1.prop(\"urlMatcher\");\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRulesApi.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Registration order (for rule types other than STATE and URLMATCHER)\n *\n * @coreapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = common_1.composeSort(common_1.sortBy(hof_1.pipe(hof_1.prop(\"priority\"), function (x) { return -x; })), common_1.sortBy(hof_1.pipe(hof_1.prop(\"type\"), function (type) { return ({ \"STATE\": 4, \"URLMATCHER\": 4, \"REGEXP\": 3, \"RAW\": 2, \"OTHER\": 1 })[type]; })), function (a, b) { return (getMatcher(a) && getMatcher(b)) ? urlMatcher_1.UrlMatcher.compare(getMatcher(a), getMatcher(b)) : 0; }, common_1.sortBy(hof_1.prop(\"$id\"), common_1.inArray([\"REGEXP\", \"RAW\", \"OTHER\"])));\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class updates the URL when the state changes.\n * It also responds to changes in the URL.\n */\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(router) {\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this.interceptDeferred = false;\n        /** @hidden */ this._id = 0;\n        /** @hidden */ this._sorted = false;\n        this._router = router;\n        this.urlRuleFactory = new urlRule_1.UrlRuleFactory(router);\n        common_1.createProxyFunctions(hof_1.val(UrlRouter.prototype), this, hof_1.val(this));\n    }\n    /** @internalapi */\n    UrlRouter.prototype.dispose = function () {\n        this.listen(false);\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sort = function (compareFn) {\n        this._rules.sort(this._sortFn = compareFn || this._sortFn);\n        this._sorted = true;\n    };\n    UrlRouter.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /**\n     * Given a URL, check all rules and return the best [[MatchResult]]\n     * @param url\n     * @returns {MatchResult}\n     */\n    UrlRouter.prototype.match = function (url) {\n        var _this = this;\n        this.ensureSorted();\n        url = common_1.extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules();\n        if (this._otherwiseFn)\n            rules.push(this._otherwiseFn);\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this._router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && this._sortFn(rules[i], best.rule) !== 0)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = (!best || current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var router = this._router, $url = router.urlService, $state = router.stateService;\n        var url = {\n            path: $url.path(), search: $url.search(), hash: $url.hash(),\n        };\n        var best = this.match(url);\n        var applyResult = hof_1.pattern([\n            [predicates_1.isString, function (newurl) { return $url.url(newurl, true); }],\n            [targetState_1.TargetState.isDef, function (def) { return $state.go(def.state, def.params, def.options); }],\n            [hof_1.is(targetState_1.TargetState), function (target) { return $state.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, router));\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopFn && this._stopFn();\n            delete this._stopFn;\n        }\n        else {\n            return this._stopFn = this._stopFn || this._router.urlService.onChange(function (evt) { return _this.sync(evt); });\n        }\n    };\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this._router.locationService;\n        if (read) {\n            this.location = $url.path();\n            return;\n        }\n        if ($url.path() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this._router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this._router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[UrlRouter.urlRuleFactory]], or create manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRouter.prototype.rule = function (rule) {\n        var _this = this;\n        if (!urlRule_1.UrlRuleFactory.isUrlRule(rule))\n            throw new Error(\"invalid rule\");\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.removeRule = function (rule) {\n        common_1.removeFrom(this._rules, rule);\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.slice();\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(hof_1.val(true), handlerFn);\n        this._sorted = false;\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (predicates_1.isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    ;\n    return UrlRouter;\n}());\nexports.UrlRouter = UrlRouter;\nfunction getHandlerFn(handler) {\n    if (!predicates_1.isFunction(handler) && !predicates_1.isString(handler) && !hof_1.is(targetState_1.TargetState)(handler) && !targetState_1.TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return predicates_1.isFunction(handler) ? handler : hof_1.val(handler);\n}\n//# sourceMappingURL=urlRouter.js.map\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module url\n */ /** */\nvar urlMatcher_1 = __webpack_require__(20);\nvar predicates_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var makeRule = hof_1.pattern([\n            [predicates_1.isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [hof_1.is(urlMatcher_1.UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [predicates_1.isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [hof_1.is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [predicates_1.isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (predicates_1.isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (hof_1.is(urlMatcher_1.UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function match(url) {\n            var match = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(match) && match;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: \"URLMATCHER\" };\n        return common_1.extend(new BaseUrlRule(match, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: \"url\" });\n            }\n        };\n        var details = { state: state, type: \"STATE\" };\n        return common_1.extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error(\"Rule RegExp must not be global or sticky\");\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n                return match[what === '$' ? 0 : Number(what)];\n            });\n        };\n        var _handler = predicates_1.isString(handler) ? redirectUrlTo : handler;\n        var match = function (url) {\n            return regexp.exec(url.path);\n        };\n        var details = { regexp: regexp, type: \"REGEXP\" };\n        return common_1.extend(new BaseUrlRule(match, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) {\n        return obj && ['type', 'match', 'handler'].every(function (key) { return predicates_1.isDefined(obj[key]); });\n    };\n    return UrlRuleFactory;\n}());\nexports.UrlRuleFactory = UrlRuleFactory;\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = \"RAW\";\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || common_1.identity;\n    }\n    return BaseUrlRule;\n}());\nexports.BaseUrlRule = BaseUrlRule;\n//# sourceMappingURL=urlRule.js.map\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module view\n */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar hof_1 = __webpack_require__(2);\nvar predicates_1 = __webpack_require__(1);\nvar trace_1 = __webpack_require__(6);\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this._uiViews = [];\n        this._viewConfigs = [];\n        this._viewConfigFactories = {};\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n        };\n    }\n    ViewService.prototype._rootViewContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    ;\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return predicates_1.isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        common_1.removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(common_1.applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) {\n                return context && context.parent ? stateDepth(context.parent) + 1 : 1;\n            };\n            return (uiView.fqn.split(\".\").length * 10000) + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = hof_1.curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return [uiView, matchingConfigs[0]];\n        };\n        var configureUIView = function (_a) {\n            var uiView = _a[0], viewConfig = _a[1];\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(uiView) !== -1)\n                uiView.configUpdated(viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var pairs = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        trace_1.trace.traceViewSync(pairs);\n        pairs.forEach(configureUIView);\n    };\n    ;\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace_1.trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace_1.trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace_1.trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace_1.trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            common_1.removeFrom(uiViews)(uiView);\n        };\n    };\n    ;\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(hof_1.prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(hof_1.prop(\"$config\")).map(hof_1.prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = predicates_1.isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split(\".\");\n        var uivSegments = uiView.fqn.split(\".\");\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!common_1.equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = (1 - vcSegments.length) || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexports.ViewService = ViewService;\n//# sourceMappingURL=view.js.map\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */ /** */\nvar stateParams_1 = __webpack_require__(36);\nvar queue_1 = __webpack_require__(25);\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new stateParams_1.StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new queue_1.Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new queue_1.Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexports.UIRouterGlobals = UIRouterGlobals;\n//# sourceMappingURL=globals.js.map\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @coreapi\n * @module url\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar coreservices_1 = __webpack_require__(3);\nvar common_1 = __webpack_require__(0);\n/** @hidden */\nvar makeStub = function (keys) {\n    return keys.reduce(function (acc, key) { return (acc[key] = coreservices_1.notImplemented(key), acc); }, { dispose: common_1.noop });\n};\n/** @hidden */ var locationServicesFns = [\"url\", \"path\", \"search\", \"hash\", \"onChange\"];\n/** @hidden */ var locationConfigFns = [\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"];\n/** @hidden */ var umfFns = [\"type\", \"caseInsensitive\", \"strictMode\", \"defaultSquashPolicy\"];\n/** @hidden */ var rulesFns = [\"sort\", \"when\", \"initial\", \"otherwise\", \"rules\", \"rule\", \"removeRule\"];\n/** @hidden */ var syncFns = [\"deferIntercept\", \"listen\", \"sync\", \"match\"];\n/**\n * API for URL management\n */\nvar UrlService = (function () {\n    /** @hidden */\n    function UrlService(router, lateBind) {\n        if (lateBind === void 0) { lateBind = true; }\n        this.router = router;\n        this.rules = {};\n        this.config = {};\n        // proxy function calls from UrlService to the LocationService/LocationConfig\n        var locationServices = function () { return router.locationService; };\n        common_1.createProxyFunctions(locationServices, this, locationServices, locationServicesFns, lateBind);\n        var locationConfig = function () { return router.locationConfig; };\n        common_1.createProxyFunctions(locationConfig, this.config, locationConfig, locationConfigFns, lateBind);\n        var umf = function () { return router.urlMatcherFactory; };\n        common_1.createProxyFunctions(umf, this.config, umf, umfFns);\n        var urlRouter = function () { return router.urlRouter; };\n        common_1.createProxyFunctions(urlRouter, this.rules, urlRouter, rulesFns);\n        common_1.createProxyFunctions(urlRouter, this, urlRouter, syncFns);\n    }\n    UrlService.prototype.url = function (newurl, replace, state) { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.path = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.search = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.hash = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.onChange = function (callback) { return; };\n    ;\n    /**\n     * Returns the current URL parts\n     *\n     * This method returns the current URL components as a [[UrlParts]] object.\n     *\n     * @returns the current url parts\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    UrlService.prototype.dispose = function () { };\n    /** @inheritdoc */\n    UrlService.prototype.sync = function (evt) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.listen = function (enabled) { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.deferIntercept = function (defer) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.match = function (urlParts) { return; };\n    /** @hidden */\n    UrlService.locationServiceStub = makeStub(locationServicesFns);\n    /** @hidden */\n    UrlService.locationConfigStub = makeStub(locationConfigFns);\n    return UrlService;\n}());\nexports.UrlService = UrlService;\n//# sourceMappingURL=urlService.js.map\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar coreservices_1 = __webpack_require__(3);\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === \"STATE\") {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition.entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return coreservices_1.services.$q.all(promises).then(retryTransition);\n};\nexports.registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nfunction lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return coreservices_1.services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] =\n            coreservices_1.services.$q.when(lazyLoadFn(transition, state))\n                .then(updateStateRegistry)\n                .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return transition.router.stateRegistry.register(state); });\n        }\n        return result;\n    }\n    return promise;\n}\nexports.lazyLoadState = lazyLoadState;\n//# sourceMappingURL=lazyLoad.js.map\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transitionHook_1 = __webpack_require__(13);\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = (function () {\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = transitionHook_1.TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = transitionHook_1.TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexports.TransitionEventType = TransitionEventType;\n//# sourceMappingURL=transitionEventType.js.map\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = __webpack_require__(11);\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexports.$q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) { return new Promise(function (resolve, reject) { reject(val); }); },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (index_1.isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (index_1.isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises)\n                .map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return exports.$q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n            });\n        }\n    }\n};\n//# sourceMappingURL=q.js.map\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = __webpack_require__(11);\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexports.$injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return exports.$injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = index_1.extend({}, globals, locals || {});\n        var params = exports.$injector.annotate(fn);\n        var ensureExist = index_1.assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (index_1.isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!index_1.isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (index_1.isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\n//# sourceMappingURL=injector.js.map\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar utils_1 = __webpack_require__(15);\nvar baseLocationService_1 = __webpack_require__(21);\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        window.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return utils_1.trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.HashLocationService = HashLocationService;\n//# sourceMappingURL=hashLocationService.js.map\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar baseLocationService_1 = __webpack_require__(21);\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.MemoryLocationService = MemoryLocationService;\n//# sourceMappingURL=memoryLocationService.js.map\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = __webpack_require__(15);\nvar baseLocationService_1 = __webpack_require__(21);\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        window.addEventListener(\"popstate\", _this._listener, false);\n        return _this;\n    }\n    ;\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = utils_1.splitQuery(search)[1]; // strip ? if found\n        hash = utils_1.splitHash(hash)[1]; // strip # if found\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"$\" + search : \"\");\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var _a = this, _config = _a._config, _history = _a._history;\n        var fullUrl = _config.baseHref() + url;\n        if (replace) {\n            _history.replaceState(state, title, fullUrl);\n        }\n        else {\n            _history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener(\"popstate\", this._listener);\n    };\n    return PushStateLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.PushStateLocationService = PushStateLocationService;\n//# sourceMappingURL=pushStateLocationService.js.map\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar predicates_1 = __webpack_require__(1);\nvar common_1 = __webpack_require__(0);\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = \"http\";\n        this._host = \"localhost\";\n        this._hashPrefix = \"\";\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return predicates_1.isDefined(newval) ? _this._hashPrefix = newval : _this._hashPrefix; };\n        this.dispose = common_1.noop;\n    }\n    return MemoryLocationConfig;\n}());\nexports.MemoryLocationConfig = MemoryLocationConfig;\n//# sourceMappingURL=memoryLocationConfig.js.map\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar predicates_1 = __webpack_require__(1);\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = \"\";\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.host;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return predicates_1.isDefined(newprefix) ? this._hashPrefix = newprefix : this._hashPrefix;\n    };\n    ;\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        return predicates_1.isDefined(href) ? this._baseHref = href : this._baseHref || this.applyDocumentBaseHref();\n    };\n    BrowserLocationConfig.prototype.applyDocumentBaseHref = function () {\n        var baseTags = document.getElementsByTagName(\"base\");\n        return this._baseHref = baseTags.length ? baseTags[0].href.substr(location.origin.length) : \"\";\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexports.BrowserLocationConfig = BrowserLocationConfig;\n//# sourceMappingURL=browserLocationConfig.js.map\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** for typedoc */\nvar core_1 = __webpack_require__(4);\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        core_1.createProxyFunctions(core_1.val(StateProvider.prototype), this, core_1.val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (core_1.isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\nexports.StateProvider = StateProvider;\n//# sourceMappingURL=stateProvider.js.map\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module url */ /** */\nvar core_1 = __webpack_require__(4);\nvar core_2 = __webpack_require__(4);\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @deprecated\n */\nvar UrlRouterProvider = (function () {\n    /** @hidden */\n    function UrlRouterProvider(router) {\n        this._router = router;\n        this._urlRouter = router.urlRouter;\n    }\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlRouter = this._urlRouter;\n        urlRouter.update(true);\n        if (!urlRouter.interceptDeferred)\n            urlRouter.listen();\n        return urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!core_2.isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () {\n            return ruleFn(core_2.services.$injector, _this._router.locationService);\n        };\n        var rule = new core_1.BaseUrlRule(match, core_2.identity);\n        this._urlRouter.rule(rule);\n        return this;\n    };\n    ;\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRouter = this._urlRouter;\n        if (core_2.isString(rule)) {\n            urlRouter.otherwise(rule);\n        }\n        else if (core_2.isFunction(rule)) {\n            urlRouter.otherwise(function () { return rule(core_2.services.$injector, _this._router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    ;\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (core_2.isArray(handler) || core_2.isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this._router, handler);\n        }\n        this._urlRouter.when(what, handler);\n        return this;\n    };\n    ;\n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) {\n            return core_2.services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\n        };\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this._urlRouter.deferIntercept(defer);\n    };\n    ;\n    return UrlRouterProvider;\n}());\nexports.UrlRouterProvider = UrlRouterProvider;\n//# sourceMappingURL=urlRouterProvider.js.map\n\n/***/ }),\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(66);\n\n__webpack_require__(67);\n\n__webpack_require__(76);\n\nangular.module('main', ['jlg-layout', 'jlg-route']);\n\n__webpack_require__(111);\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(31);\n\n__webpack_require__(32);\n\n__webpack_require__(72);\n\nvar _jlgHeader = __webpack_require__(73);\n\nvar _jlgHeader2 = _interopRequireDefault(_jlgHeader);\n\nvar _jlgBody = __webpack_require__(74);\n\nvar _jlgBody2 = _interopRequireDefault(_jlgBody);\n\nvar _jlgFooter = __webpack_require__(75);\n\nvar _jlgFooter2 = _interopRequireDefault(_jlgFooter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = angular.module('jlg-layout', ['ngSanitize', 'jlg-wordpress']);\n\napp.component('jlgHeader', {\n\ttemplate: _jlgHeader2.default,\n\tcontroller: 'jlgWordpressCtrl'\n});\n\napp.component('jlgBody', {\n\ttemplate: _jlgBody2.default,\n\tcontroller: 'jlgWordpressCtrl'\n});\n\napp.component('jlgFooter', {\n\ttemplate: _jlgFooter2.default,\n\tcontroller: 'jlgWordpressCtrl'\n});\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n/**\n * @license AngularJS v1.6.5\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.5' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=$ctrl.ready> <title ng-bind-html=$ctrl.post.title.rendered></title> <featured-media> <img ng-if=$ctrl.media ng-src={{$ctrl.media.source_url}}> <i ng-if=!$ctrl.media class=\\\"fa fa-picture-o\\\" aria-hidden=true></i> </featured-media> <excerpt ng-bind-html=$ctrl.excerpt> </excerpt> <a ui-sref=\\\"post({ id: $ctrl.post.id })\\\">Lire la suite</a> </div> \";\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div ng-if=$ctrl.ready> <title ng-bind-html=$ctrl.page.title></title> <content ng-bind-html=$ctrl.page.content.rendered> </content> </div> \";\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<site-id>{{$ctrl.jlgWordpress.info.name}}</site-id> <tagline ng-bind-html=$ctrl.jlgWordpress.info.description></tagline> <menu> <item><a ui-sref=home>Home</a></item> <item><a ui-sref=products>Products</a></item> <item><a ui-sref=services>Services</a></item> <item><a ui-sref=contact>Contact</a></item> </menu> <hr/> \";\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<ui-view></ui-view> \";\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<hr/> Footer <br/> Wordpress URL: <input ng-model=$ctrl.jlgWordpress.url><button ng-click=$ctrl.jlgWordpress.init()>Update</button><br/> \";\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(77);\n\n__webpack_require__(32);\n\nvar _jlgHome = __webpack_require__(106);\n\nvar _jlgHome2 = _interopRequireDefault(_jlgHome);\n\nvar _jlgProducts = __webpack_require__(107);\n\nvar _jlgProducts2 = _interopRequireDefault(_jlgProducts);\n\nvar _jlgServices = __webpack_require__(108);\n\nvar _jlgServices2 = _interopRequireDefault(_jlgServices);\n\nvar _jlgContact = __webpack_require__(109);\n\nvar _jlgContact2 = _interopRequireDefault(_jlgContact);\n\nvar _jlgPost = __webpack_require__(110);\n\nvar _jlgPost2 = _interopRequireDefault(_jlgPost);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = angular.module('jlg-route', ['ui.router', 'jlg-wordpress']);\n\napp.config([\"$locationProvider\", \"$urlRouterProvider\", \"$stateProvider\", function ($locationProvider, $urlRouterProvider, $stateProvider) {\n\n\t$locationProvider.html5Mode(true);\n\n\t$stateProvider.state({\n\t\tname: 'home',\n\t\turl: '/',\n\t\ttemplate: _jlgHome2.default\n\t});\n\t$stateProvider.state({\n\t\tname: 'products',\n\t\turl: '/products',\n\t\ttemplate: _jlgProducts2.default\n\t});\n\t$stateProvider.state({\n\t\tname: 'services',\n\t\turl: '/services',\n\t\ttemplate: _jlgServices2.default\n\t});\n\t$stateProvider.state({\n\t\tname: 'contact',\n\t\turl: '/contact',\n\t\ttemplate: _jlgContact2.default\n\t});\n\t$stateProvider.state({\n\t\tname: 'post',\n\t\turl: '/posts/{id}',\n\t\ttemplate: _jlgPost2.default,\n\t\tcontroller: [\"$log\", \"$stateParams\", \"jlgWordpress\", function PostCtrl($log, $stateParams, jlgWordpress) {\n\t\t\t'ngInject';\n\n\t\t\t$log.debug('PostCtrl', arguments);\n\t\t\tvar ctrl = this;\n\t\t\tjlgWordpress.ready().then(function () {\n\t\t\t\t$log.debug('PostCtrl ready', $stateParams, jlgWordpress.posts);\n\t\t\t\tctrl.post = jlgWordpress.posts.find(function (n) {\n\t\t\t\t\treturn n.id === +$stateParams.id;\n\t\t\t\t});\n\t\t\t\t$log.debug('ctrl.post', ctrl.post);\n\t\t\t\tctrl.media = jlgWordpress.medias.find(function (n) {\n\t\t\t\t\treturn n.id === ctrl.post.featured_media;\n\t\t\t\t});\n\t\t\t});\n\t\t}],\n\t\tcontrollerAs: '$ctrl'\n\t});\n\n\t$urlRouterProvider.otherwise('/');\n}]);\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Main entry point for angular 1.x build\n * @module ng1\n */ /** */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(23));\n__export(__webpack_require__(30));\n__export(__webpack_require__(58));\n__export(__webpack_require__(59));\n__webpack_require__(101);\n__webpack_require__(102);\n__webpack_require__(103);\n__webpack_require__(104);\n__webpack_require__(105);\nexports.default = \"ui.router\";\nvar core = __webpack_require__(4);\nexports.core = core;\n__export(__webpack_require__(4));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(10));\n__export(__webpack_require__(35));\n__export(__webpack_require__(36));\n__export(__webpack_require__(28));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module path */ /** for typedoc */\n__export(__webpack_require__(27));\n__export(__webpack_require__(18));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module resolve */ /** for typedoc */\n__export(__webpack_require__(34));\n__export(__webpack_require__(14));\n__export(__webpack_require__(19));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(37));\n__export(__webpack_require__(24));\n__export(__webpack_require__(38));\n__export(__webpack_require__(39));\n__export(__webpack_require__(40));\n__export(__webpack_require__(41));\n__export(__webpack_require__(7));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** */\nvar transition_1 = __webpack_require__(17);\nvar router_1 = __webpack_require__(42);\nfunction addCoreResolvables(trans) {\n    trans.addResolvable({ token: router_1.UIRouter, deps: [], resolveFn: function () { return trans.router; }, data: trans.router }, \"\");\n    trans.addResolvable({ token: transition_1.Transition, deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$transition$', deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$stateParams', deps: [], resolveFn: function () { return trans.params(); }, data: trans.params() }, \"\");\n    trans.entering().forEach(function (state) {\n        trans.addResolvable({ token: '$state$', deps: [], resolveFn: function () { return state; }, data: state }, state);\n    });\n}\nexports.registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\n//# sourceMappingURL=coreResolvables.js.map\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** */\nvar predicates_1 = __webpack_require__(1);\nvar coreservices_1 = __webpack_require__(3);\nvar targetState_1 = __webpack_require__(7);\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof targetState_1.TargetState)\n            return result;\n        if (predicates_1.isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (predicates_1.isFunction(redirect)) {\n        return coreservices_1.services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexports.registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexports.registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexports.registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexports.registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */\n/** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar resolveContext_1 = __webpack_require__(19);\nvar hof_1 = __webpack_require__(2);\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(common_1.noop);\n};\nexports.registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath(\"LAZY\", trans)\n        .then(common_1.noop);\n};\nexports.registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: hof_1.val(true) }, lazyResolveState, { priority: 1000 });\n};\n//# sourceMappingURL=resolve.js.map\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** for typedoc */\nvar common_1 = __webpack_require__(0);\nvar coreservices_1 = __webpack_require__(3);\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = coreservices_1.services.$q;\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(common_1.noop);\n};\nexports.registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexports.registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = __webpack_require__(0);\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        common_1.copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexports.registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexports.registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/** @module hooks */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar trace_1 = __webpack_require__(6);\nvar rejectFactory_1 = __webpack_require__(12);\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace_1.trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return rejectFactory_1.Rejection.ignored().toPromise();\n}\nexports.registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/** @module hooks */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error());\n    }\n}\nexports.registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Transition subsystem\n *\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @coreapi\n * @preferred\n * @module transition\n */ /** for typedoc */\n__export(__webpack_require__(9));\n__export(__webpack_require__(33));\n__export(__webpack_require__(26));\n__export(__webpack_require__(12));\n__export(__webpack_require__(17));\n__export(__webpack_require__(13));\n__export(__webpack_require__(50));\n__export(__webpack_require__(29));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(20));\n__export(__webpack_require__(43));\n__export(__webpack_require__(44));\n__export(__webpack_require__(45));\n__export(__webpack_require__(48));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(46));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n__export(__webpack_require__(95));\n//# sourceMappingURL=vanilla.js.map\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(51));\n__export(__webpack_require__(52));\n__export(__webpack_require__(21));\n__export(__webpack_require__(53));\n__export(__webpack_require__(54));\n__export(__webpack_require__(55));\n__export(__webpack_require__(56));\n__export(__webpack_require__(57));\n__export(__webpack_require__(15));\n__export(__webpack_require__(96));\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar browserLocationConfig_1 = __webpack_require__(57);\nvar hashLocationService_1 = __webpack_require__(53);\nvar utils_1 = __webpack_require__(15);\nvar pushStateLocationService_1 = __webpack_require__(55);\nvar memoryLocationService_1 = __webpack_require__(54);\nvar memoryLocationConfig_1 = __webpack_require__(56);\nvar injector_1 = __webpack_require__(52);\nvar q_1 = __webpack_require__(51);\nvar coreservices_1 = __webpack_require__(3);\nfunction servicesPlugin(router) {\n    coreservices_1.services.$injector = injector_1.$injector;\n    coreservices_1.services.$q = q_1.$q;\n    return { name: \"vanilla.services\", $q: q_1.$q, $injector: injector_1.$injector, dispose: function () { return null; } };\n}\nexports.servicesPlugin = servicesPlugin;\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexports.hashLocationPlugin = utils_1.locationPluginFactory('vanilla.hashBangLocation', false, hashLocationService_1.HashLocationService, browserLocationConfig_1.BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexports.pushStateLocationPlugin = utils_1.locationPluginFactory(\"vanilla.pushStateLocation\", true, pushStateLocationService_1.PushStateLocationService, browserLocationConfig_1.BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexports.memoryLocationPlugin = utils_1.locationPluginFactory(\"vanilla.memoryLocation\", false, memoryLocationService_1.MemoryLocationService, memoryLocationConfig_1.MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @coreapi\n * @preferred\n * @module core\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internalapi */\nvar UIRouterPluginBase = (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\nexports.UIRouterPluginBase = UIRouterPluginBase;\n//# sourceMappingURL=interface.js.map\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module view */\n/** for typedoc */\nvar angular_1 = __webpack_require__(8);\nvar core_1 = __webpack_require__(4);\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = angular_1.ng.version.minor < 3;\n        /** @hidden */ this.$get = ['$http', '$templateCache', '$injector', function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            }];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    ;\n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = \"<ui-view></ui-view>\";\n        var asTemplate = function (result) { return core_1.services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return core_1.services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return (core_1.isDefined(config.template) ? asTemplate(this.fromString(config.template, params)) :\n            core_1.isDefined(config.templateUrl) ? asTemplate(this.fromUrl(config.templateUrl, params)) :\n                core_1.isDefined(config.templateProvider) ? asTemplate(this.fromProvider(config.templateProvider, params, context)) :\n                    core_1.isDefined(config.component) ? asComponent(config.component) :\n                        core_1.isDefined(config.componentProvider) ? asComponent(this.fromComponentProvider(config.componentProvider, params, context)) :\n                            asTemplate(defaultTemplate));\n    };\n    ;\n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return core_1.isFunction(template) ? template(params) : template;\n    };\n    ;\n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (core_1.isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http.get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    ;\n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    ;\n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    ;\n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = angular_1.ng.version.minor >= 3 ? \"::\" : \"\";\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = core_1.kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = fn && core_1.services.$injector.annotate(fn) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = core_1.isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(\",\") + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component).map(attributeTpl).join(\" \");\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    ;\n    return TemplateFactory;\n}());\nexports.TemplateFactory = TemplateFactory;\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = core_1.services.$injector.get(name + \"Directive\"); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(core_1.unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (core_1.isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) { return Object.keys(bindingsObj || {})\n    .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n    .filter(function (tuple) { return core_1.isDefined(tuple) && core_1.isArray(tuple[1]); })\n    .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); }); };\n//# sourceMappingURL=templateFactory.js.map\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** */\nvar core_1 = __webpack_require__(4);\nvar services_1 = __webpack_require__(23);\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n */\nexports.getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(state, parentFn) {\n        var hook = state[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new core_1.ResolveContext(trans.treeChanges(pathname));\n            var locals = core_1.extend(services_1.getLocals(resolveContext), { $state$: state, $transition$: trans });\n            return core_1.services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = __webpack_require__(4);\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n */\nvar Ng1LocationServices = (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = core_1.val($locationProvider);\n        core_1.createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return core_1.removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = core_1.isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (newUrl)\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on(\"$locationChangeSuccess\", function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = core_1.val($location);\n        var _browser = core_1.val($browser);\n        // Bind these LocationService functions to $location\n        core_1.createProxyFunctions(_loc, this, _loc, [\"replace\", \"path\", \"search\", \"hash\"]);\n        // Bind these LocationConfig functions to $location\n        core_1.createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n        // Bind these LocationConfig functions to $browser\n        core_1.createProxyFunctions(_browser, this, _browser, ['baseHref']);\n    };\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (val) {\n            return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val;\n        };\n        pathType.decode = function (val) {\n            return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val;\n        };\n    };\n    return Ng1LocationServices;\n}());\nexports.Ng1LocationServices = Ng1LocationServices;\n//# sourceMappingURL=locationServices.js.map\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * # Angular 1 injectable services\n *\n * This is a list of the objects which can be injected using angular's injector.\n *\n * There are three different kind of injectable objects:\n *\n * ## **Provider** objects\n * #### injectable into a `.config()` block during configtime\n *\n * - [[$uiRouterProvider]]: The UI-Router instance\n * - [[$stateProvider]]: State registration\n * - [[$transitionsProvider]]: Transition hooks\n * - [[$urlServiceProvider]]: All URL related public APIs\n *\n * - [[$uiViewScrollProvider]]: Disable ui-router view scrolling\n * - [[$urlRouterProvider]]: (deprecated) Url matching rules\n * - [[$urlMatcherFactoryProvider]]: (deprecated) Url parsing config\n *\n * ## **Service** objects\n * #### injectable globally during runtime\n *\n * - [[$uiRouter]]: The UI-Router instance\n * - [[$trace]]: Enable transition trace/debug\n * - [[$transitions]]: Transition hooks\n * - [[$state]]: Imperative state related APIs\n * - [[$stateRegistry]]: State registration\n * - [[$urlService]]: All URL related public APIs\n * - [[$uiRouterGlobals]]: Global variables\n * - [[$uiViewScroll]]: Scroll an element into view\n *\n * - [[$stateParams]]: (deprecated) Global state param values\n * - [[$urlRouter]]: (deprecated) URL synchronization\n * - [[$urlMatcherFactory]]: (deprecated) URL parsing config\n *\n * ## **Per-Transition** objects\n *\n * - These kind of objects are injectable into:\n *   - Resolves ([[Ng1StateDeclaration.resolve]]),\n *   - Transition Hooks ([[TransitionService.onStart]], etc),\n *   - Routed Controllers ([[Ng1ViewDeclaration.controller]])\n *\n * #### Different instances are injected based on the [[Transition]]\n *\n * - [[$transition$]]: The current Transition object\n * - [[$stateParams]]: State param values for pending Transition (deprecated)\n * - Any resolve data defined using [[Ng1StateDeclaration.resolve]]\n *\n * @ng1api\n * @preferred\n * @module injectables\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\nvar $stateParams;\n/**\n * Global UI-Router variables\n *\n * The router global state as a **Service Object** (injectable during runtime).\n *\n * This object contains globals such as the current state and current parameter values.\n */\nvar $uiRouterGlobals;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Service Object** (injectable during runtime).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouterProvider]] for injection during angular config time.\n */\nvar $uiRouter;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Provider Object** (injectable during config phase).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouter]] for injection during runtime.\n */\nvar $uiRouterProvider;\n/**\n * Transition debug/tracing\n *\n * The [[Trace]] singleton as a **Service Object** (injectable during runtime).\n *\n * Enables or disables Transition tracing which can help to debug issues.\n */\nvar $trace;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitionsProvider]] for injection during the config phase.\n */\nvar $transitions;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Provider Object** (injectable during config phase)\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitions]] for injection during runtime.\n */\nvar $transitionsProvider;\n/**\n * The current [[Transition]] object\n *\n * The current [[Transition]] object as a **Per-Transition Object** (injectable into Resolve, Hooks, Controllers)\n *\n * This object returns information about the current transition, including:\n *\n * - To/from states\n * - To/from parameters\n * - Transition options\n * - States being entered, exited, and retained\n * - Resolve data\n * - A Promise for the transition\n * - Any transition failure information\n * - An injector for both Service and Per-Transition Objects\n */\nvar $transition$;\n/**\n * The State Service\n *\n * The [[StateService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service used to manage and query information on registered states.\n * It exposes state related APIs including:\n *\n * - Start a [[Transition]]\n * - Imperatively lazy load states\n * - Check if a state is currently active\n * - Look up states by name\n * - Build URLs for a state+parameters\n * - Configure the global Transition error handler\n *\n * This angular service exposes the [[StateService]] singleton.\n */\nvar $state;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistryProvider]] for injection during the config phase.\n */\nvar $stateRegistry;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistry]] for injection during runtime.\n */\nvar $stateRegistryProvider;\n/**\n * The View Scroll provider\n *\n * The [[UIViewScrollProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[UIViewScrollProvider]] singleton and is\n * used to disable UI-Router's scroll behavior.\n */\nvar $uiViewScrollProvider;\n/**\n * The View Scroll function\n *\n * The View Scroll function as a **Service Object** (injectable during runtime).\n *\n * This is a function that scrolls an element into view.\n * The element is scrolled after a `$timeout` so the DOM has time to refresh.\n *\n * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n * this can be enabled by calling [[UIViewScrollProvider.useAnchorScroll]].\n *\n * Note: this function is used by the [[directives.uiView]] when the `autoscroll` expression evaluates to true.\n */\nvar $uiViewScroll;\n/**\n * The StateProvider\n *\n * An angular1-only [[StateProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[StateProvider]] singleton.\n *\n * The `StateProvider` is primarily used to register states or add custom state decorators.\n *\n * ##### Note: This provider is a ng1 vestige.\n * It is a passthrough to [[$stateRegistry]] and [[$state]].\n */\nvar $stateProvider;\n/**\n * The URL Service Provider\n *\n * The [[UrlService]] singleton as a **Provider Object** (injectable during the angular config phase).\n *\n * A service used to configure and interact with the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during runtime as [[$urlService]].\n */\nvar $urlServiceProvider;\n/**\n * The URL Service\n *\n * The [[UrlService]] singleton as a **Service Object** (injectable during runtime).\n *\n * Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n *\n * Used to configure the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n */\nvar $urlService;\n/**\n * The URL Router Provider\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlServiceProvider]] instead.\n *\n * The [[UrlRouter]] singleton as a **Provider Object** (injectable during config time).\n *\n * #### Note: This object is also exposed as [[$urlRouter]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlRouterProvider;\n/**\n * The Url Router\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlRouter]] singleton as a **Service Object** (injectable during runtime).\n *\n * #### Note: This object is also exposed as [[$urlRouterProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlRouter;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactoryProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlMatcherFactory;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactory]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlMatcherFactoryProvider;\n//# sourceMappingURL=injectables.js.map\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @ng1api\n * @preferred\n * @module directives\n */ /** for typedoc */\nvar angular_1 = __webpack_require__(8);\nvar core_1 = __webpack_require__(4);\n/** @hidden */\nfunction parseStateRef(ref) {\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, \" \").match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = core_1.parse('$cfg.path')($uiView);\n    return path ? core_1.tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = core_1.extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === \"FORM\";\n    return {\n        attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n        isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n        clickable: !isForm\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition = $timeout(function () {\n                $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount-- <= 0)\n                    $timeout.cancel(transition);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: \"sref\"\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!core_1.isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSref;\nuiSref = ['$uiRouter', '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val) {\n                        rawDef.uiStateParams = core_1.extend({}, val);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = core_1.extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiState;\nuiState = ['$uiRouter', '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return (acc[attr] = core_1.noop, acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the <div> and <a> elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActive;\nuiSrefActive = ['$state', '$stateParams', '$interpolate', '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: \"A\",\n            controller: ['$scope', '$element', '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [], activeEqClass, uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    if (core_1.isObject(uiSrefActive)) {\n                        core_1.forEach(uiSrefActive, function (stateOrName, activeClass) {\n                            if (core_1.isString(stateOrName)) {\n                                var ref = parseStateRef(stateOrName);\n                                addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                            }\n                        });\n                    }\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (core_1.isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, core_1.noop);\n                    }\n                    $scope.$on('$stateChangeSuccess', update);\n                    $scope.$on('$destroy', $uiRouter.transitionService.onStart({}, updateAfterTransition));\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            core_1.removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) {\n                            return str.split(/\\s/).filter(core_1.identity);\n                        };\n                        var getClasses = function (stateList) {\n                            return stateList.map(function (x) { return x.activeClass; }).map(splitClasses).reduce(core_1.unnestR, []);\n                        };\n                        var allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(core_1.uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(core_1.uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !core_1.inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                }]\n        };\n    }];\nangular_1.ng.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n//# sourceMappingURL=stateDirectives.js.map\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/** @module ng1 */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular_1 = __webpack_require__(8);\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\nexports.$IsStateFilter = $IsStateFilter;\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nexports.$IncludedByStateFilter = $IncludedByStateFilter;\nangular_1.ng.module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n//# sourceMappingURL=stateFilters.js.map\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @ng1api\n * @module directives\n */ /** for typedoc */\nvar angular_1 = __webpack_require__(8);\nvar angular_2 = __webpack_require__(22);\nvar core_1 = __webpack_require__(4);\nvar views_1 = __webpack_require__(30);\nvar services_1 = __webpack_require__(23);\nexports.uiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (angular_1.ng.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (angular_1.ng.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                }\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {}\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var previousEl, currentEl, currentScope, unregister, onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), viewConfig = undefined, inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            var fromParentTagConfig = core_1.parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = core_1.parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        }\n                    };\n                    core_1.trace.traceUIViewEvent(\"Linking\", activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof views_1.Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        core_1.trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on(\"$destroy\", function () {\n                        core_1.trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            core_1.trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            core_1.trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            core_1.trace.traceUIViewEvent(\"Animate out\", _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if (core_1.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            }\n        };\n        return directive;\n    }];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = core_1.parse('viewDecl.controllerAs');\n    var getResolveAs = core_1.parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: angular_2.noop };\n                var resolveCtx = cfg.path && new core_1.ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                core_1.trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && services_1.getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = $controller(controller, core_1.extend({}, locals, { $scope: scope, $element: $element }));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (core_1.isString(cfg.viewDecl.component)) {\n                    var cmp_1 = cfg.viewDecl.component;\n                    var kebobName = core_1.kebobString(cmp_1);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", \"i\");\n                    var getComponentController = function () {\n                        var directiveEl = [].slice.call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && angular_1.ng.element(directiveEl).data(\"$\" + cmp_1 + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        }\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof angular_1.ng.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (core_1.isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = core_1.tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onParamsChange\n    if (core_1.isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new core_1.ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params(\"to\");\n            var fromParams = $transition$.params(\"from\");\n            var toSchema = $transition$.treeChanges().to.map(function (node) { return node.paramSchema; }).reduce(core_1.unnestR, []);\n            var fromSchema = $transition$.treeChanges().from.map(function (node) { return node.paramSchema; }).reduce(core_1.unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = core_1.filter(toParams, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (core_1.isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && (trans[cacheProp_1] && trans[cacheProp_1][id_1] === true || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise, ids = trans[cacheProp_1] = trans[cacheProp_1] || {};\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val) { return ids[id_1] = (val !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nangular_1.ng.module('ui.router.state').directive('uiView', exports.uiView);\nangular_1.ng.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n//# sourceMappingURL=viewDirective.js.map\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** */\nvar angular_1 = __webpack_require__(8);\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        }];\n}\nangular_1.ng.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n//# sourceMappingURL=viewScroll.js.map\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<h1>Tous les posts</h1> <jlg-post-excerpt id=post.id ng-repeat=\\\"post in $ctrl.jlgWordpress.posts\\\"></jlg-post-excerpt> \";\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<jlg-page title=\\\"'Produits'\\\"></jlg-page> \";\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<jlg-page title=$root.pages.services></jlg-page> \";\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<jlg-page title=$root.pages.contact></jlg-page> \";\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<post> <title ng-bind-html=$ctrl.post.title.rendered></title> <img ng-if=$ctrl.media ng-src={{$ctrl.media.source_url}}> <content ng-bind-html=$ctrl.post.content.rendered></content> </post> \";\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nangular.module('main').run([\"$rootScope\", \"jlgWordpress\", function ($rootScope, jlgWordpress) {\n\t$rootScope.pages = {\n\t\tcontact: 'Contact',\n\t\tservices: 'Services',\n\t\tproducts: 'Produits'\n\t};\n\tjlgWordpress.url = 'https://jlg-consulting.com/wordpress/' + 'wp-json';\n\tjlgWordpress.init();\n}]);\n\n/***/ })\n],[65]);\n\n\n// WEBPACK FOOTER //\n// bundle.js","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred\n * @module common\n */\n/** for typedoc */\nvar predicates_1 = require(\"./predicates\");\nvar hof_1 = require(\"./hof\");\nvar coreservices_1 = require(\"./coreservices\");\nvar w = typeof window === 'undefined' ? {} : window;\nvar angular = w.angular || {};\nexports.fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexports.toJson = angular.toJson || JSON.stringify.bind(JSON);\nexports.copy = angular.copy || _copy;\nexports.forEach = angular.forEach || _forEach;\nexports.extend = Object.assign || _extend;\nexports.equals = angular.equals || _equals;\nfunction identity(x) { return x; }\nexports.identity = identity;\nfunction noop() { }\nexports.noop = noop;\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nfunction createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) {\n        return source()[fnName].bind(bind());\n    };\n    var makeLateRebindFn = function (fnName) { return function lateRebindFunction() {\n        target[fnName] = bindFunction(fnName);\n        return target[fnName].apply(null, arguments);\n    }; };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\nexports.createProxyFunctions = createProxyFunctions;\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexports.inherit = function (parent, extra) {\n    return exports.extend(Object.create(parent), extra);\n};\n/**\n * Given an arguments object, converts the arguments at index idx and above to an array.\n * This is similar to es6 rest parameters.\n *\n * Optionally, the argument at index idx may itself already be an array.\n *\n * For example,\n * given either:\n *        arguments = [ obj, \"foo\", \"bar\" ]\n * or:\n *        arguments = [ obj, [\"foo\", \"bar\"] ]\n * then:\n *        restArgs(arguments, 1) == [\"foo\", \"bar\"]\n *\n * This allows functions like pick() to be implemented such that it allows either a bunch\n * of string arguments (like es6 rest parameters), or a single array of strings:\n *\n * given:\n *        var obj = { foo: 1, bar: 2, baz: 3 };\n * then:\n *        pick(obj, \"foo\", \"bar\");   // returns { foo: 1, bar: 2 }\n *        pick(obj, [\"foo\", \"bar\"]); // returns { foo: 1, bar: 2 }\n */\nvar restArgs = function (args, idx) {\n    if (idx === void 0) { idx = 0; }\n    return Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(args, idx));\n};\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexports.inArray = hof_1.curry(_inArray);\nfunction _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\nexports._inArray = _inArray;\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexports.removeFrom = hof_1.curry(_removeFrom);\nfunction _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\nexports._removeFrom = _removeFrom;\n/** pushes a values to an array and returns the value */\nexports.pushTo = hof_1.curry(_pushTo);\nfunction _pushTo(arr, val) {\n    return (arr.push(val), val);\n}\nexports._pushTo = _pushTo;\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexports.deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        exports.removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nfunction defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var _defaultsList = defaultsList.concat({}).reverse();\n    var defaultVals = exports.extend.apply(null, _defaultsList);\n    return exports.extend({}, defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\nexports.defaults = defaults;\n/** Reduce function that merges each element of the list into a single object, using extend */\nexports.mergeR = function (memo, item) { return exports.extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nfunction ancestors(first, second) {\n    var path = [];\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\nexports.ancestors = ancestors;\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nfunction pick(obj, propNames) {\n    var objCopy = {};\n    for (var prop_1 in obj) {\n        if (propNames.indexOf(prop_1) !== -1) {\n            objCopy[prop_1] = obj[prop_1];\n        }\n    }\n    return objCopy;\n}\nexports.pick = pick;\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nfunction omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(hof_1.not(exports.inArray(propNames)))\n        .reduce(function (acc, key) { return (acc[key] = obj[key], acc); }, {});\n}\nexports.omit = omit;\n/**\n * Maps an array, or object to a property (by name)\n */\nfunction pluck(collection, propName) {\n    return map(collection, hof_1.prop(propName));\n}\nexports.pluck = pluck;\n/** Filters an Array or an Object's properties based on a predicate */\nfunction filter(collection, callback) {\n    var arr = predicates_1.isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return result[key] = x; };\n    exports.forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\nexports.filter = filter;\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nfunction find(collection, callback) {\n    var result;\n    exports.forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\nexports.find = find;\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexports.mapObj = map;\n/** Maps an array or object properties using a callback function */\nfunction map(collection, callback) {\n    var result = predicates_1.isArray(collection) ? [] : {};\n    exports.forEach(collection, function (item, i) { return result[i] = callback(item, i); });\n    return result;\n}\nexports.map = map;\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexports.values = function (obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n};\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexports.allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexports.anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flattenR = function (memo, elem) {\n    return predicates_1.isArray(elem) ? memo.concat(elem.reduce(exports.flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nfunction pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\nexports.pushR = pushR;\n/** Reduce function that filters out duplicates */\nexports.uniqR = function (acc, token) {\n    return exports.inArray(acc, token) ? acc : pushR(acc, token);\n};\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexports.unnest = function (arr) { return arr.reduce(exports.unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexports.flatten = function (arr) { return arr.reduce(exports.flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexports.assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexports.assertMap = assertFn;\nfunction assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = \"assert failure\"; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(predicates_1.isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\nexports.assertFn = assertFn;\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexports.pairs = function (obj) {\n    return Object.keys(obj).map(function (key) { return [key, obj[key]]; });\n};\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nfunction arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var i, result = [];\n    for (i = 0; i < maxArrayLen; i++) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    }\n    return result;\n}\nexports.arrayTuples = arrayTuples;\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nfunction applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (predicates_1.isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!predicates_1.isString(key))\n        throw new Error(\"invalid parameters to applyPairs\");\n    memo[key] = value;\n    return memo;\n}\nexports.applyPairs = applyPairs;\n/** Get the last element of an array */\nfunction tail(arr) {\n    return arr.length && arr[arr.length - 1] || undefined;\n}\nexports.tail = tail;\n/**\n * shallow copy from src to dest\n *\n * note: This is a shallow copy, while angular.copy is a deep copy.\n * ui-router uses `copy` only to make copies of state parameters.\n */\nfunction _copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return exports.extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (predicates_1.isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nfunction _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nexports._extend = _extend;\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (hof_1.all(predicates_1.isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (hof_1.all(predicates_1.isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (hof_1.all(predicates_1.isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (hof_1.all(predicates_1.isFunction)(tup))\n        return true; // meh\n    var predicates = [predicates_1.isFunction, predicates_1.isArray, predicates_1.isDate, predicates_1.isRegExp];\n    if (predicates.map(hof_1.any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var key, keys = {};\n    for (key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n/**\n * Create a sort function\n *\n * Creates a sort function which sorts by a numeric property.\n *\n * The `propFn` should return the property as a number which can be sorted.\n *\n * #### Example:\n * This example returns the `priority` prop.\n * ```js\n * var sortfn = sortBy(obj => obj.priority)\n * // equivalent to:\n * var longhandSortFn = (a, b) => a.priority - b.priority;\n * ```\n *\n * #### Example:\n * This example uses [[prop]]\n * ```js\n * var sortfn = sortBy(prop('priority'))\n * ```\n *\n * The `checkFn` can be used to exclude objects from sorting.\n *\n * #### Example:\n * This example only sorts objects with type === 'FOO'\n * ```js\n * var sortfn = sortBy(prop('priority'), propEq('type', 'FOO'))\n * ```\n *\n * @param propFn a function that returns the property (as a number)\n * @param checkFn a predicate\n *\n * @return a sort function like: `(a, b) => (checkFn(a) && checkFn(b)) ? propFn(a) - propFn(b) : 0`\n */\nexports.sortBy = function (propFn, checkFn) {\n    if (checkFn === void 0) { checkFn = hof_1.val(true); }\n    return function (a, b) {\n        return (checkFn(a) && checkFn(b)) ? propFn(a) - propFn(b) : 0;\n    };\n};\n/**\n * Composes a list of sort functions\n *\n * Creates a sort function composed of multiple sort functions.\n * Each sort function is invoked in series.\n * The first sort function to return non-zero \"wins\".\n *\n * @param sortFns list of sort functions\n */\nexports.composeSort = function () {\n    var sortFns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sortFns[_i] = arguments[_i];\n    }\n    return function composedSort(a, b) {\n        return sortFns.reduce(function (prev, fn) { return prev || fn(a, b); }, 0);\n    };\n};\n// issue #2676\nexports.silenceUncaughtInPromise = function (promise) {\n    return promise.catch(function (e) { return 0; }) && promise;\n};\nexports.silentRejection = function (error) {\n    return exports.silenceUncaughtInPromise(coreservices_1.services.$q.reject(error));\n};\n//# sourceMappingURL=common.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/common.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */\n/** */\nvar hof_1 = require(\"./hof\");\nvar stateObject_1 = require(\"../state/stateObject\");\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof (x) === t; }; };\nexports.isUndefined = tis('undefined');\nexports.isDefined = hof_1.not(exports.isUndefined);\nexports.isNull = function (o) { return o === null; };\nexports.isNullOrUndefined = hof_1.or(exports.isNull, exports.isUndefined);\nexports.isFunction = tis('function');\nexports.isNumber = tis('number');\nexports.isString = tis('string');\nexports.isObject = function (x) { return x !== null && typeof x === 'object'; };\nexports.isArray = Array.isArray;\nexports.isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexports.isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\nexports.isState = stateObject_1.StateObject.isState;\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nfunction isInjectable(val) {\n    if (exports.isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(hof_1.not(exports.isString)).length || tail.filter(hof_1.not(exports.isFunction)).length);\n    }\n    return exports.isFunction(val);\n}\nexports.isInjectable = isInjectable;\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexports.isPromise = hof_1.and(exports.isObject, hof_1.pipe(hof_1.prop('then'), exports.isFunction));\n//# sourceMappingURL=predicates.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/predicates.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nfunction curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\nexports.curry = curry;\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nfunction compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\nexports.compose = compose;\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nfunction pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\nexports.pipe = pipe;\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexports.prop = function (name) {\n    return function (obj) { return obj && obj[name]; };\n};\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexports.propEq = curry(function (name, val, obj) { return obj && obj[name] === val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexports.parse = function (name) {\n    return pipe.apply(null, name.split(\".\").map(exports.prop));\n};\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexports.not = function (fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return !fn.apply(null, args);\n    };\n};\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nfunction and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\nexports.and = and;\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nfunction or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\nexports.or = or;\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexports.all = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); };\n};\nexports.any = function (fn1) {\n    return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); };\n};\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexports.is = function (ctor) {\n    return function (obj) {\n        return (obj != null && obj.constructor === ctor || obj instanceof ctor);\n    };\n};\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexports.eq = function (val) { return function (other) {\n    return val === other;\n}; };\n/** Given a value, returns a function which returns the value */\nexports.val = function (v) { return function () { return v; }; };\nfunction invoke(fnName, args) {\n    return function (obj) {\n        return obj[fnName].apply(obj, args);\n    };\n}\nexports.invoke = invoke;\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nfunction pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\nexports.pattern = pattern;\n//# sourceMappingURL=hof.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/hof.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.notImplemented = function (fnname) { return function () {\n    throw new Error(fnname + \"(): No coreservices implementation for UI-Router is loaded.\");\n}; };\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexports.services = services;\n//# sourceMappingURL=coreservices.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/coreservices.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n/**\n * @coreapi\n * @module common\n */ /** */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./common/index\"));\n__export(require(\"./params/index\"));\n__export(require(\"./path/index\"));\n__export(require(\"./resolve/index\"));\n__export(require(\"./state/index\"));\n__export(require(\"./transition/index\"));\n__export(require(\"./url/index\"));\n__export(require(\"./view/index\"));\n__export(require(\"./globals\"));\n__export(require(\"./router\"));\n__export(require(\"./vanilla\"));\n__export(require(\"./interface\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/index.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar predicates_1 = require(\"./predicates\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar common_1 = require(\"./common\");\nvar hof_1 = require(\"./hof\");\nvar transition_1 = require(\"../transition/transition\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nfunction maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + \"...\";\n}\nexports.maxLength = maxLength;\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nfunction padString(length, str) {\n    while (str.length < length)\n        str += \" \";\n    return str;\n}\nexports.padString = padString;\nfunction kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return \"-\" + $1.toLowerCase(); }); // replace rest\n}\nexports.kebobString = kebobString;\nfunction _toJson(obj) {\n    return JSON.stringify(obj);\n}\nfunction _fromJson(json) {\n    return predicates_1.isString(json) ? JSON.parse(json) : json;\n}\nfunction promiseToString(p) {\n    return \"Promise(\" + JSON.stringify(p) + \")\";\n}\nfunction functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || \"\";\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexports.functionToString = functionToString;\nfunction fnToString(fn) {\n    var _fn = predicates_1.isArray(fn) ? fn.slice(-1)[0] : fn;\n    return _fn && _fn.toString() || \"undefined\";\n}\nexports.fnToString = fnToString;\nvar stringifyPatternFn = null;\nvar stringifyPattern = function (value) {\n    var isRejection = rejectFactory_1.Rejection.isRejectionPromise;\n    stringifyPatternFn = stringifyPatternFn || hof_1.pattern([\n        [hof_1.not(predicates_1.isDefined), hof_1.val(\"undefined\")],\n        [predicates_1.isNull, hof_1.val(\"null\")],\n        [predicates_1.isPromise, hof_1.val(\"[Promise]\")],\n        [isRejection, function (x) { return x._transitionRejection.toString(); }],\n        [hof_1.is(rejectFactory_1.Rejection), hof_1.invoke(\"toString\")],\n        [hof_1.is(transition_1.Transition), hof_1.invoke(\"toString\")],\n        [hof_1.is(resolvable_1.Resolvable), hof_1.invoke(\"toString\")],\n        [predicates_1.isInjectable, functionToString],\n        [hof_1.val(true), common_1.identity]\n    ]);\n    return stringifyPatternFn(value);\n};\nfunction stringify(o) {\n    var seen = [];\n    function format(val) {\n        if (predicates_1.isObject(val)) {\n            if (seen.indexOf(val) !== -1)\n                return '[circular ref]';\n            seen.push(val);\n        }\n        return stringifyPattern(val);\n    }\n    return JSON.stringify(o, function (key, val) { return format(val); }).replace(/\\\\\"/g, '\"');\n}\nexports.stringify = stringify;\n/** Returns a function that splits a string on a character or substring */\nexports.beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nfunction splitOnDelim(delim) {\n    var re = new RegExp(\"(\" + delim + \")\", \"g\");\n    return function (str) {\n        return str.split(re).filter(common_1.identity);\n    };\n}\nexports.splitOnDelim = splitOnDelim;\n;\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nfunction joinNeighborsR(acc, x) {\n    if (predicates_1.isString(common_1.tail(acc)) && predicates_1.isString(x))\n        return acc.slice(0, -1).concat(common_1.tail(acc) + x);\n    return common_1.pushR(acc, x);\n}\nexports.joinNeighborsR = joinNeighborsR;\n;\n//# sourceMappingURL=strings.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/strings.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"ui-router-ng2\"; // or \"angular-ui-router\"\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"angular-ui-router\").trace; // or \"ui-router-ng2\"\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"angular-ui-router\"].trace; // or \"ui-router-ng2\"\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @coreapi\n * @module trace\n */ /** for typedoc */\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"./strings\");\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return predicates_1.isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category = exports.Category || (exports.Category = {}));\n/** @hidden */ var _tid = hof_1.parse(\"$id\");\n/** @hidden */ var _rid = hof_1.parse(\"router.$id\");\n/** @hidden */ var transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return _this._enabled[category] = enabled; });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + strings_1.stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + strings_1.stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + strings_1.maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + strings_1.maxLength(200, strings_1.stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + strings_1.maxLength(200, strings_1.stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + strings_1.stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + strings_1.stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = \"\"; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + strings_1.padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Updating\", viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent(\"Fill\", viewData, \" with: \" + strings_1.maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var mapping = pairs.map(function (_a) {\n            var uiViewData = _a[0], config = _a[1];\n            var uiView = uiViewData.$type + \":\" + uiViewData.fqn;\n            var view = config && config.viewDecl.$context.name + \": \" + config.viewDecl.$name + \" (\" + config.viewDecl.$type + \")\";\n            return { 'ui-view fqn': uiView, 'state: view name': view };\n        }).sort(function (a, b) { return a['ui-view fqn'].localeCompare(b['ui-view fqn']); });\n        console.table(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexports.Trace = Trace;\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"angular-ui-router\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexports.trace = trace;\n//# sourceMappingURL=trace.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/trace.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _definition The internal state representation, if exists.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_identifier, _definition, _params, _options) {\n        if (_options === void 0) { _options = {}; }\n        this._identifier = _identifier;\n        this._definition = _definition;\n        this._options = _options;\n        this._params = _params || {};\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return this._definition && this._definition.name || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + common_1.toJson(this.params());\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) {\n        return obj && obj.state && (predicates_1.isString(obj.state) || predicates_1.isString(obj.state.name));\n    };\n    return TargetState;\n}());\nexports.TargetState = TargetState;\n//# sourceMappingURL=targetState.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/targetState.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ng_from_import = require(\"angular\");\nvar ng_from_global = angular;\nexports.ng = (ng_from_import && ng_from_import.module) ? ng_from_import : ng_from_global;\n//# sourceMappingURL=angular.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/angular.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase = exports.TransitionHookPhase || (exports.TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope = exports.TransitionHookScope || (exports.TransitionHookScope = {}));\n//# sourceMappingURL=interface.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/interface.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar paramType_1 = require(\"./paramType\");\n/** @hidden */ var hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */ var isShorthand = function (cfg) {\n    return [\"value\", \"type\", \"squash\", \"array\", \"dynamic\"].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType = exports.DefType || (exports.DefType = {}));\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) && { value: cfg } || cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    return common_1.extend(cfg, {\n        $$fn: predicates_1.isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue,\n    });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG ? \"any\" :\n            location === DefType.PATH ? \"path\" :\n                location === DefType.SEARCH ? \"query\" : \"string\";\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof paramType_1.ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!predicates_1.isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || predicates_1.isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var replace, configuredKeys, defaultPolicy = [\n        { from: \"\", to: (isOptional || arrayMode ? undefined : \"\") },\n        { from: null, to: (isOptional || arrayMode ? undefined : \"\") },\n    ];\n    replace = predicates_1.isArray(config.replace) ? config.replace : [];\n    if (predicates_1.isString(squash))\n        replace.push({ from: squash, to: undefined });\n    configuredKeys = common_1.map(replace, hof_1.prop(\"from\"));\n    return common_1.filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = (function () {\n    function Param(id, type, config, location, urlMatcherFactory) {\n        config = unwrapShorthand(config);\n        type = getType(config, type, location, id, urlMatcherFactory.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = predicates_1.isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = predicates_1.isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlMatcherFactory.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = predicates_1.isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: (location === DefType.SEARCH ? \"auto\" : false) };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return common_1.extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        common_1.extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!coreservices_1.services.$injector)\n                throw new Error(\"Injectable functions cannot be called at configuration time\");\n            var defaultValue = coreservices_1.services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return predicates_1.isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((predicates_1.isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(predicates_1.isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(common_1.allTrueR, true);\n    };\n    return Param;\n}());\nexports.Param = Param;\n//# sourceMappingURL=param.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/param.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module common */ /** for typedoc */\n__export(require(\"./common\"));\n__export(require(\"./coreservices\"));\n__export(require(\"./glob\"));\n__export(require(\"./hof\"));\n__export(require(\"./predicates\"));\n__export(require(\"./queue\"));\n__export(require(\"./strings\"));\n__export(require(\"./trace\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/index.js\n// module id = 11\n// module chunks = 0","/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\nvar hof_1 = require(\"../common/hof\");\nvar RejectType;\n(function (RejectType) {\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType = exports.RejectType || (exports.RejectType = {}));\n/** @hidden */ var id = 0;\nvar Rejection = (function () {\n    function Rejection(type, message, detail) {\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) {\n            return d && d.toString !== Object.prototype.toString ? d.toString() : strings_1.stringify(d);\n        };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return common_1.extend(common_1.silentRejection(this), { _transitionRejection: this });\n    };\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && (typeof obj.then === 'function') && hof_1.is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = \"The transition has been superseded by a different transition\";\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = \"This transition is invalid\";\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = \"The transition was ignored\";\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = \"The transition has been aborted\";\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = \"The transition errored\";\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return hof_1.is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    return Rejection;\n}());\nexports.Rejection = Rejection;\n//# sourceMappingURL=rejectFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/rejectFactory.js\n// module id = 12\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar interface_1 = require(\"./interface\");\nvar common_1 = require(\"../common/common\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar rejectFactory_1 = require(\"./rejectFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar defaultOptions = {\n    current: common_1.noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () {\n            return _this.type.hookPhase === interface_1.TransitionHookPhase.RUN && !_this.options.transition.isActive();\n        };\n        this.options = common_1.defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace_1.trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () {\n            return hook.callback.call(options.bind, _this.transition, _this.stateContext);\n        };\n        var normalizeErr = function (err) {\n            return rejectFactory_1.Rejection.normalize(err).toPromise();\n        };\n        var handleError = function (err) {\n            return hook.eventType.getErrorHandler(_this)(err);\n        };\n        var handleResult = function (result) {\n            return hook.eventType.getResultHandler(_this)(result);\n        };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && predicates_1.isPromise(result)) {\n                return result.catch(normalizeErr)\n                    .then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(rejectFactory_1.Rejection.normalize(err));\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (predicates_1.isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace_1.trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return rejectFactory_1.Rejection.aborted(\"Hook aborted transition\").toPromise();\n        }\n        var isTargetState = hof_1.is(targetState_1.TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return rejectFactory_1.Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return rejectFactory_1.Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return rejectFactory_1.Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return rejectFactory_1.Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = hof_1.parse(\"traceData.hookType\")(options) || \"internal\", context = hof_1.parse(\"traceData.context.state.name\")(options) || hof_1.parse(\"traceData.context\")(options) || \"unknown\", name = strings_1.fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + strings_1.maxLength(200, name);\n    };\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) {\n            return prev.then(function () { return nextHook.invokeHook(); });\n        };\n        return hooks.reduce(createHookChainR, waitFor || coreservices_1.services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (predicates_1.isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult)\n                    .then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        predicates_1.isPromise(result) && result.catch(function (err) {\n            return hook.logError(rejectFactory_1.Rejection.normalize(err));\n        });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) {\n        return hook.logError(error);\n    }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) {\n        return common_1.silentRejection(error);\n    }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexports.TransitionHook = TransitionHook;\n//# sourceMappingURL=transitionHook.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionHook.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module resolve\n */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar trace_1 = require(\"../common/trace\");\nvar strings_1 = require(\"../common/strings\");\nvar predicates_1 = require(\"../common/predicates\");\nvar common_2 = require(\"../common\");\n// TODO: explicitly make this user configurable\nexports.defaultResolvePolicy = {\n    when: \"LAZY\",\n    async: \"WAIT\"\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            common_1.extend(this, arg1);\n        }\n        else if (predicates_1.isFunction(resolveFn)) {\n            if (common_2.isNullOrUndefined(arg1))\n                throw new Error(\"new Resolvable(): token argument is required\");\n            if (!predicates_1.isFunction(resolveFn))\n                throw new Error(\"new Resolvable(): resolveFn argument must be a function\");\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? coreservices_1.services.$q.when(this.data) : undefined;\n        }\n        else if (predicates_1.isObject(arg1) && arg1.token && predicates_1.isFunction(arg1.resolveFn)) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = state && state.resolvePolicy || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || exports.defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || exports.defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = coreservices_1.services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) {\n                return resolvable.get(resolveContext, trans);\n            }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) {\n            return _this.resolveFn.apply(null, resolvedDeps);\n        };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached.take(1).toPromise().then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === \"RXWAIT\" ? waitForRx : common_1.identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            trace_1.trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return this.promise = $q.when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue);\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + strings_1.stringify(this.token) + \", requires: [\" + this.deps.map(strings_1.stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) {\n        return new Resolvable(token, function () { return data; }, null, null, data);\n    };\n    return Resolvable;\n}());\nexports.Resolvable = Resolvable;\n//# sourceMappingURL=resolvable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/resolvable.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = require(\"../common/index\");\nvar common_1 = require(\"../common/common\");\nvar beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return [\"\", \"\"];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, \"\"];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexports.splitHash = beforeAfterSubstr(\"#\");\nexports.splitQuery = beforeAfterSubstr(\"?\");\nexports.splitEqual = beforeAfterSubstr(\"=\");\nexports.trimHashVal = function (str) { return str ? str.replace(/^#/, \"\") : \"\"; };\nexports.keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (index_1.isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexports.getParams = function (queryString) {\n    return queryString.split(\"&\").filter(common_1.identity).map(exports.splitEqual).reduce(exports.keyValsToObjectR, {});\n};\nfunction parseUrl(url) {\n    var orEmptyString = function (x) { return x || \"\"; };\n    var _a = exports.splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = exports.splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexports.parseUrl = parseUrl;\nexports.buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject).map(function (key) {\n        var param = searchObject[key];\n        var vals = index_1.isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + \"=\" + val; });\n    }).reduce(common_1.unnestR, []).join(\"&\");\n    return path + (search ? \"?\" + search : \"\") + (hash ? \"#\" + hash : \"\");\n};\nfunction locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (router) {\n        var service = router.locationService = new serviceClass(router);\n        var configuration = router.locationConfig = new configurationClass(router, isHtml5);\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\nexports.locationPluginFactory = locationPluginFactory;\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/utils.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text.split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        }).join('');\n        this.regexp = new RegExp(\"^\" + regexpString + \"$\");\n    }\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    return Glob;\n}());\nexports.Glob = Glob;\n//# sourceMappingURL=glob.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/glob.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar interface_1 = require(\"./interface\"); // has or is using\nvar transitionHook_1 = require(\"./transitionHook\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar hookBuilder_1 = require(\"./hookBuilder\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar targetState_1 = require(\"../state/targetState\");\nvar param_1 = require(\"../params/param\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\n/** @hidden */\nvar stateSelf = hof_1.prop(\"self\");\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = coreservices_1.services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new hookBuilder_1.HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () {\n            return _this.router.globals.transition === _this;\n        };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = common_1.extend({ current: hof_1.val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = pathFactory_1.PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = pathFactory_1.PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(interface_1.TransitionHookPhase.CREATE);\n        transitionHook_1.TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) { return; };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi._getEvents()\n            .filter(function (type) { return type.hookPhase !== interface_1.TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return hookRegistry_1.makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        pathFactory_1.PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return common_1.tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return common_1.tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !hookRegistry_1.matchState(this.$to(), compare.to)) ||\n            (compare.from && !hookRegistry_1.matchState(this.$from(), compare.from)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return Object.freeze(this._treeChanges[pathname].map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `data` resolve\n     *   // even though `foo.bar` also has a `data` resolve\n     *   var fooData = trans.injector('foo').get('data');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `data` from the exiting state.\n     *   var fooData = trans.injector(null, 'foo.bar').get('data');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = \"to\"; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = pathFactory_1.PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new resolveContext_1.ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = \"to\"; }\n        return new resolveContext_1.ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = \"\"; }\n        resolvable = hof_1.is(resolvable_1.Resolvable)(resolvable) ? resolvable : new resolvable_1.Resolvable(resolvable);\n        var stateName = (typeof state === \"string\") ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = common_1.find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new resolveContext_1.ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return common_1.map(this._treeChanges.entering, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return common_1.map(this._treeChanges.exiting, hof_1.prop('state')).map(stateSelf).reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return common_1.map(this._treeChanges.retained, hof_1.prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = \"entering\"; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(hof_1.propEq('state', state));\n        return path.map(hof_1.prop(\"views\")).filter(common_1.identity).reduce(common_1.unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: \"redirect\" };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = common_1.extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = new targetState_1.TargetState(targetState.identifier(), targetState.$state(), targetState.params(), newOptions);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = pathFactory_1.PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, pathFactory_1.PathUtils.nonDynamicParams)\n            .filter(hof_1.not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = common_1.arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(common_1.anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = common_1.arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return param_1.Param.changed(schema, toVals, fromVals);\n        }).reduce(common_1.unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(common_1.anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = pathFactory_1.PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return \"SameAsPending\";\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return \"SameAsCurrent\";\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = transitionHook_1.TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) {\n            return _this._hookBuilder.buildHooksForPhase(phase);\n        };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace_1.trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(interface_1.TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace_1.trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(interface_1.TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(interface_1.TransitionHookPhase.RUN);\n            var done = function () { return coreservices_1.services.$q.when(undefined); };\n            return transitionHook_1.TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace_1.trace.traceTransitionStart(_this);\n            return coreservices_1.services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(interface_1.TransitionHookPhase.BEFORE);\n        transitionHook_1.TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (predicates_1.isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns an error message explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract)\n            return \"Cannot transition to abstract state '\" + state.name + \"'\";\n        var paramDefs = state.parameters(), values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            return \"Param values not valid for state '\" + state.name + \"'. Invalid params: [ \" + invalidParams.map(function (param) { return param.id; }).join(', ') + \" ]\";\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return (params[\"#\"] !== null && params[\"#\"] !== undefined) ? params : common_1.omit(params, [\"#\"]);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = predicates_1.isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = common_1.toJson(avoidEmptyHash(this._treeChanges.from.map(hof_1.prop('paramValues')).reduce(common_1.mergeR, {}))), toValid = this.valid() ? \"\" : \"(X) \", to = predicates_1.isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = common_1.toJson(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexports.Transition = Transition;\n//# sourceMappingURL=transition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transition.js\n// module id = 17\n// module chunks = 0","\"use strict\";\n/** @module path */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar targetState_1 = require(\"../state/targetState\");\nvar pathNode_1 = require(\"./pathNode\");\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (path) {\n        var state = common_1.tail(path).state;\n        return new targetState_1.TargetState(state, state, path.map(hof_1.prop(\"paramValues\")).reduce(common_1.mergeR, {}));\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new pathNode_1.PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return common_1.inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = common_1.values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(common_1.unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = common_1.find(path, hof_1.propEq('state', state));\n            return common_1.extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath.map(function (node) { return node.paramSchema; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(hof_1.prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = common_1.extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = common_1.pick(toParamVals, toKeys);\n            toParamVals = common_1.omit(toParamVals, toKeys);\n            var fromParamVals = common_1.omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = common_1.extend(toParamVals, fromParamVals, incomingParamVals);\n            return new pathNode_1.PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var keep = 0, max = Math.min(fromPath.length, toPath.length);\n        var nodesMatch = function (node1, node2) {\n            return node1.equals(node2, PathUtils.nonDynamicParams);\n        };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = pathNode_1.PathNode.clone(retainedNode);\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = (retainedWithToParams).concat(entering);\n        return { from: from, to: to, retained: retained, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = common_1.arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length &&\n            PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = common_1.find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false })\n            .filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) {\n        return path.reduce(function (acc, node) { return common_1.extend(acc, node.paramValues); }, {});\n    };\n    return PathUtils;\n}());\nexports.PathUtils = PathUtils;\n//# sourceMappingURL=pathFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/pathFactory.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module resolve */\n/** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar trace_1 = require(\"../common/trace\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar interface_1 = require(\"./interface\");\nvar resolvable_1 = require(\"./resolvable\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar strings_1 = require(\"../common/strings\");\nvar when = interface_1.resolvePolicies.when;\nvar ALL_WHENS = [when.EAGER, when.LAZY];\nvar EAGER_WHENS = [when.EAGER];\nexports.NATIVE_INJECTOR_TOKEN = \"Native Injector\";\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(common_1.uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path.map(function (node) { return node.resolvables; })\n            .reduce(common_1.unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return common_1.tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(pathFactory_1.PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = common_1.find(this._path, hof_1.propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = \"LAZY\"; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = common_1.inArray(ALL_WHENS, when) ? when : \"LAZY\";\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === interface_1.resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace_1.trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) {\n            return function (resolvable) {\n                return common_1.inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n            };\n        };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(hof_1.not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) { return r.get(subContext, trans)\n                .then(function (value) { return ({ token: r.token, value: value }); }); };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return coreservices_1.services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return common_1.find(this._path, function (node) { return common_1.inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = pathFactory_1.PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, node) { return acc.concat(node.resolvables); }, []) //all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return common_1.tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (!fromInjector) {\n                throw new Error(\"Could not find Dependency Injection token: \" + strings_1.stringify(token));\n            }\n            return new resolvable_1.Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexports.ResolveContext = ResolveContext;\nvar UIInjectorImpl = (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(exports.NATIVE_INJECTOR_TOKEN) || coreservices_1.services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error(\"Resolvable async .get() not complete:\" + strings_1.stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.native && this.native.get(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return coreservices_1.services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/resolveContext.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module url\n */\n/** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar param_1 = require(\"../params/param\");\nvar strings_1 = require(\"../common/strings\");\n/** @hidden */\nfunction quoteRegExp(string, param) {\n    var surroundPattern = ['', ''], result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:\\/(', ')|\\/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, prop, fn) {\n    return obj[prop] = obj[prop] || fn();\n};\n/** @hidden */\nvar splitOnSlash = strings_1.splitOnDelim('/');\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param config  A configuration object\n     * - `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n     * - `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        this.config = config;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.pattern = pattern;\n        this.config = common_1.defaults(this.config, {\n            params: {},\n            strict: true,\n            caseInsensitive: false,\n            paramMap: common_1.identity\n        });\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g, last = 0, m, patterns = [];\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (common_1.find(_this._params, hof_1.propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (regexp) { return common_1.inherit(paramTypes.type(isSearch ? \"query\" : \"path\"), {\n                pattern: new RegExp(regexp, _this.config.caseInsensitive ? 'i' : undefined)\n            }); };\n            return {\n                id: id,\n                regexp: regexp,\n                cfg: _this.config.params[id],\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp)\n            };\n        };\n        var p, segment;\n        while ((m = placeholder.exec(pattern))) {\n            p = matchDetails(m, false);\n            if (p.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(p.id);\n            this._params.push(paramFactory.fromPath(p.id, p.type, this.config.paramMap(p.cfg, false)));\n            this._segments.push(p.segment);\n            patterns.push([p.segment, common_1.tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                while ((m = searchPlaceholder.exec(search))) {\n                    p = matchDetails(m, true);\n                    checkParamErrors(p.id);\n                    this._params.push(paramFactory.fromSearch(p.id, p.type, this.config.paramMap(p.cfg, true)));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (pattern) { return quoteRegExp.apply(null, pattern); }).concat(quoteRegExp(segment));\n    }\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                common_1.unnest(_this._cache.path.map(hof_1.prop('_compiled'))).join(''),\n                _this.config.strict === false ? '\\/?' : '',\n                '$'\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        //options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(string) {\n            var reverseString = function (str) { return str.split(\"\").reverse().join(\"\"); };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, \"-\"); };\n            var split = reverseString(string).split(/-(?!\\\\)/);\n            var allReversed = common_1.map(split, reverseString);\n            return common_1.map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (predicates_1.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (predicates_1.isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values[\"#\"] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return common_1.unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) {\n            return !param || param.validates(val);\n        };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(common_1.allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers.map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(common_1.unnestR, [])\n            .map(function (x) { return predicates_1.isString(x) ? x : getDetails(x); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers.map(UrlMatcher.queryParams)\n            .reduce(common_1.unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (predicates_1.isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return (acc.match(/\\/$/)) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (predicates_1.isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (predicates_1.isArray(encoded))\n                return acc + common_1.map(encoded, UrlMatcher.encodeDashes).join(\"-\");\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, \"\");\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams.map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!predicates_1.isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = common_1.map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        }).filter(common_1.identity).reduce(common_1.unnestR, []).join(\"&\");\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : \"\") + (values[\"#\"] ? \"#\" + values[\"#\"] : \"\");\n    };\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        return encodeURIComponent(str).replace(/-/g, function (c) { return \"%5C%\" + c.charCodeAt(0).toString(16).toUpperCase(); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === param_1.DefType.PATH; });\n        return common_1.arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(common_1.unnestR, [])\n            .filter(function (x) { return x !== \"\" && predicates_1.isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === param_1.DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return matcher._cache.segments = matcher._cache.segments ||\n                matcher._cache.path.map(UrlMatcher.pathSegmentsAndParams)\n                    .reduce(common_1.unnestR, [])\n                    .reduce(strings_1.joinNeighborsR, [])\n                    .map(function (x) { return predicates_1.isString(x) ? splitOnSlash(x) : x; })\n                    .reduce(common_1.unnestR, []);\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return matcher._cache.weights = matcher._cache.weights ||\n                segments(matcher).map(function (segment) {\n                    // Sort slashes first, then static strings, the Params\n                    if (segment === '/')\n                        return 1;\n                    if (predicates_1.isString(segment))\n                        return 2;\n                    if (segment instanceof param_1.Param)\n                        return 3;\n                });\n        };\n        var cmp, i, pairs = common_1.arrayTuples(weights(a), weights(b));\n        for (i = 0; i < pairs.length; i++) {\n            cmp = pairs[i][0] - pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexports.UrlMatcher = UrlMatcher;\n//# sourceMappingURL=urlMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlMatcher.js\n// module id = 20\n// module chunks = 0","\"use strict\";\n/**\n * @internalapi\n * @module vanilla\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar predicates_1 = require(\"../common/predicates\");\nvar common_1 = require(\"../common/common\");\n/** A base `LocationServices` */\nvar BaseLocationServices = (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this._listeners = [];\n        this.hash = function () { return utils_1.parseUrl(_this._get()).hash; };\n        this.path = function () { return utils_1.parseUrl(_this._get()).path; };\n        this.search = function () { return utils_1.getParams(utils_1.parseUrl(_this._get()).search); };\n        this._location = window && window.location;\n        this._history = window && window.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (predicates_1.isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                var evt_1 = common_1.extend(new Event(\"locationchange\"), { url: url });\n                this._listeners.forEach(function (cb) { return cb(evt_1); });\n            }\n        }\n        return utils_1.buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return common_1.removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        common_1.deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexports.BaseLocationServices = BaseLocationServices;\n//# sourceMappingURL=baseLocationService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/baseLocationService.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @module ng1\n * @preferred\n */\n/** for typedoc */\nvar angular_1 = require(\"./angular\");\nvar core_1 = require(\"@uirouter/core\");\nvar views_1 = require(\"./statebuilders/views\");\nvar templateFactory_1 = require(\"./templateFactory\");\nvar stateProvider_1 = require(\"./stateProvider\");\nvar onEnterExitRetain_1 = require(\"./statebuilders/onEnterExitRetain\");\nvar locationServices_1 = require(\"./locationServices\");\nvar urlRouterProvider_1 = require(\"./urlRouterProvider\");\nangular_1.ng.module(\"ui.router.angular1\", []);\nvar mod_init = angular_1.ng.module('ui.router.init', []);\nvar mod_util = angular_1.ng.module('ui.router.util', ['ng', 'ui.router.init']);\nvar mod_rtr = angular_1.ng.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular_1.ng.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular_1.ng.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular_1.ng.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouter.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouter($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new core_1.UIRouter();\n    router.stateProvider = new stateProvider_1.StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator(\"views\", views_1.ng1ViewsBuilder);\n    router.stateRegistry.decorator(\"onExit\", onEnterExitRetain_1.getStateHookBuilder(\"onExit\"));\n    router.stateRegistry.decorator(\"onRetain\", onEnterExitRetain_1.getStateHookBuilder(\"onRetain\"));\n    router.stateRegistry.decorator(\"onEnter\", onEnterExitRetain_1.getStateHookBuilder(\"onEnter\"));\n    router.viewService._pluginapi._viewConfigFactory('ng1', views_1.getNg1ViewConfigFactory());\n    var ng1LocationService = router.locationService = router.locationConfig = new locationServices_1.Ng1LocationServices($locationProvider);\n    locationServices_1.Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return ['$uiRouterProvider', function ($urp) {\n        var service = $urp.router[serviceName];\n        service[\"$get\"] = function () { return service; };\n        return service;\n    }]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    core_1.services.$injector = $injector;\n    core_1.services.$q = $q;\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry.get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(core_1.unnestR, [])\n        .filter(function (x) { return x.deps === \"deferred\"; })\n        .forEach(function (resolvable) { return resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) {\n    return uiRouter.urlRouterProvider = new urlRouterProvider_1.UrlRouterProvider(uiRouter);\n};\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () {\n    return core_1.extend(router.stateProvider, { $get: function () { return router.stateService; } });\n};\nwatchDigests.$inject = ['$rootScope'];\nfunction watchDigests($rootScope) {\n    $rootScope.$watch(function () { core_1.trace.approximateDigests++; });\n}\nexports.watchDigests = watchDigests;\nmod_init.provider(\"$uiRouter\", $uiRouter);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new templateFactory_1.TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service(\"$trace\", function () { return core_1.trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nexports.getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(core_1.isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(core_1.applyPairs, {});\n};\n//# sourceMappingURL=services.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/services.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar glob_1 = require(\"../common/glob\");\nvar predicates_1 = require(\"../common/predicates\");\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = common_1.inherit(common_1.inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: glob_1.Glob.fromString(state.name) // might return null\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + \".\" + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return this.parent && this.parent.root() || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = common_1.defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = opts.inherit && this.parent && this.parent.parameters() || [];\n        return inherited.concat(common_1.values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return (this.url && this.url.parameter(id, opts) ||\n            common_1.find(common_1.values(this.params), hof_1.propEq('id', id)) ||\n            opts.inherit && this.parent && this.parent.parameter(id));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return predicates_1.isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) {\n        return predicates_1.isObject(obj['__stateObjectCache']);\n    };\n    return StateObject;\n}());\nexports.StateObject = StateObject;\n//# sourceMappingURL=stateObject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateObject.js\n// module id = 24\n// module chunks = 0","\"use strict\";\n/**\n * @module common\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Queue = (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            items.shift();\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexports.Queue = Queue;\n//# sourceMappingURL=queue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/common/queue.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar interface_1 = require(\"./interface\"); // has or is using\nvar glob_1 = require(\"../common/glob\");\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nfunction matchState(state, criterion) {\n    var toMatch = predicates_1.isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new glob_1.Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (predicates_1.isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\nexports.matchState = matchState;\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this._deregistered = false;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return common_1.map(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges) {\n        var _this = this;\n        var criteria = common_1.extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = common_1.values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === interface_1.TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [common_1.tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name]);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges) {\n        var matches = this._getMatchingNodes(treeChanges);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = common_1.values(matches).every(common_1.identity);\n        return allMatched ? matches : null;\n    };\n    return RegisteredHook;\n}());\nexports.RegisteredHook = RegisteredHook;\n/** @hidden Return a registration function of the requested type. */\nfunction makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = registry._registeredHooks = (registry._registeredHooks || {});\n    var hooks = _registeredHooks[eventType.name] = [];\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, options);\n        hooks.push(registeredHook);\n        return function deregisterEventHook() {\n            registeredHook._deregistered = true;\n            common_1.removeFrom(hooks)(registeredHook);\n        };\n    }\n    return hookRegistrationFn;\n}\nexports.makeEvent = makeEvent;\n//# sourceMappingURL=hookRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/hookRegistry.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module path */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar param_1 = require(\"../params/param\");\n/**\n * @internalapi\n *\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = common_1.extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return common_1.applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return common_1.find(this.paramSchema, hof_1.propEq(\"id\", name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return param_1.Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /** Returns a clone of the PathNode */\n    PathNode.clone = function (node) {\n        return new PathNode(node);\n    };\n    return PathNode;\n}());\nexports.PathNode = PathNode;\n//# sourceMappingURL=pathNode.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/pathNode.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        common_1.extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) { return true; };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) { return val; };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) { return a == b; };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === \"auto\" && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexports.ParamType = ParamType;\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return predicates_1.isArray(val) ? val : (predicates_1.isDefined(val) ? [val] : []);\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0: return undefined;\n            case 1: return mode === \"auto\" ? val[0] : val;\n            default: return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (predicates_1.isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = common_1.map(arr, callback);\n            return (allTruthyMode === true) ? common_1.filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    common_1.extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode\n    });\n}\n//# sourceMappingURL=paramType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/paramType.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module transition\n */\n/** for typedoc */\nvar interface_1 = require(\"./interface\");\nvar transition_1 = require(\"./transition\");\nvar hookRegistry_1 = require(\"./hookRegistry\");\nvar coreResolvables_1 = require(\"../hooks/coreResolvables\");\nvar redirectTo_1 = require(\"../hooks/redirectTo\");\nvar onEnterExitRetain_1 = require(\"../hooks/onEnterExitRetain\");\nvar resolve_1 = require(\"../hooks/resolve\");\nvar views_1 = require(\"../hooks/views\");\nvar updateGlobals_1 = require(\"../hooks/updateGlobals\");\nvar url_1 = require(\"../hooks/url\");\nvar lazyLoad_1 = require(\"../hooks/lazyLoad\");\nvar transitionEventType_1 = require(\"./transitionEventType\");\nvar transitionHook_1 = require(\"./transitionHook\");\nvar predicates_1 = require(\"../common/predicates\");\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar ignoredTransition_1 = require(\"../hooks/ignoredTransition\");\nvar invalidTransition_1 = require(\"../hooks/invalidTransition\");\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexports.defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: \"unknown\"\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = common_1.createProxyFunctions(hof_1.val(this), {}, hof_1.val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]);\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) { return; };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) { return; };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        common_1.values(this._registeredHooks).forEach(function (hooksArray) { return hooksArray.forEach(function (hook) {\n            hook._deregistered = true;\n            common_1.removeFrom(hooksArray, hook);\n        }); });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new transition_1.Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = interface_1.TransitionHookPhase;\n        var TH = transitionHook_1.TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var ASYNCHRONOUS = false, SYNCHRONOUS = true;\n        this._defineEvent(\"onCreate\", Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onBefore\", Phase.BEFORE, 0, paths.to);\n        this._defineEvent(\"onStart\", Phase.RUN, 0, paths.to);\n        this._defineEvent(\"onExit\", Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent(\"onRetain\", Phase.RUN, 200, paths.retained);\n        this._defineEvent(\"onEnter\", Phase.RUN, 300, paths.entering);\n        this._defineEvent(\"onFinish\", Phase.RUN, 400, paths.to);\n        this._defineEvent(\"onSuccess\", Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent(\"onError\", Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = interface_1.TransitionHookScope.STATE, TRANSITION = interface_1.TransitionHookScope.TRANSITION;\n        this._definePathType(\"to\", TRANSITION);\n        this._definePathType(\"from\", TRANSITION);\n        this._definePathType(\"exiting\", STATE);\n        this._definePathType(\"retained\", STATE);\n        this._definePathType(\"entering\", STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = transitionHook_1.TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = transitionHook_1.TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new transitionEventType_1.TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        hookRegistry_1.makeEvent(this, this, eventType);\n    };\n    ;\n    /** @hidden */\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = predicates_1.isDefined(phase) ?\n            this._eventTypes.filter(function (type) { return type.hookPhase === phase; }) :\n            this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = coreResolvables_1.registerAddCoreResolvables(this);\n        fns.ignored = ignoredTransition_1.registerIgnoredTransitionHook(this);\n        fns.invalid = invalidTransition_1.registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = redirectTo_1.registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = onEnterExitRetain_1.registerOnExitHook(this);\n        fns.onRetain = onEnterExitRetain_1.registerOnRetainHook(this);\n        fns.onEnter = onEnterExitRetain_1.registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = resolve_1.registerEagerResolvePath(this);\n        fns.lazyResolve = resolve_1.registerLazyResolveState(this);\n        // Wire up the View management hooks\n        fns.loadViews = views_1.registerLoadEnteringViews(this);\n        fns.activateViews = views_1.registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = updateGlobals_1.registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = url_1.registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = lazyLoad_1.registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexports.TransitionService = TransitionService;\n//# sourceMappingURL=transitionService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionService.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@uirouter/core\");\nfunction getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || core_1.services.$injector.get(\"$templateFactory\");\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\nexports.getNg1ViewConfigFactory = getNg1ViewConfigFactory;\nvar hasAnyKey = function (keys, obj) {\n    return keys.reduce(function (acc, key) { return acc || core_1.isDefined(obj[key]); }, false);\n};\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n */\nfunction ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (core_1.isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return core_1.isDefined(state[key]); }).join(\", \")));\n    }\n    var views = {}, viewsObject = state.views || { \"$default\": core_1.pick(state, allViewKeys) };\n    core_1.forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || \"$default\";\n        // Account for views: { header: \"headerComponent\" }\n        if (core_1.isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = core_1.extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join(\"|\") + \" with: \" + nonCompKeys.join(\"|\") + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = \"ng1\";\n        config.$context = state;\n        config.$name = name;\n        var normalized = core_1.ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\nexports.ng1ViewsBuilder = ng1ViewsBuilder;\nvar id = 0;\nvar Ng1ViewConfig = (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings) : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = core_1.services.$q;\n        var context = new core_1.ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return core_1.extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context))\n        };\n        return $q.all(promises).then(function (results) {\n            core_1.trace.traceViewServiceEvent(\"Loaded\", _this);\n            _this.controller = results.controller;\n            core_1.extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!core_1.isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\nexports.Ng1ViewConfig = Ng1ViewConfig;\n//# sourceMappingURL=views.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/statebuilders/views.js\n// module id = 30\n// module chunks = 0","require('./angular-sanitize');\nmodule.exports = 'ngSanitize';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/index.js\n// module id = 31\n// module chunks = 0","import 'angular-sanitize';\r\nimport './jlg-wordpress.scss';\r\n\r\nconst app = angular.module('jlg-wordpress', [\r\n\t'ngSanitize',\r\n]);\r\n\r\napp.service('jlgWordpress', function JlgWordpress($log, $q, $http) {\r\n\t'ngInject';\r\n\tconst service = this;\r\n\tthis.isReady = false;\r\n\tconst stack = [];\r\n\tthis.url = undefined;\r\n\r\n\tthis.init = () => {\r\n\t\t$log.debug('jlgWordpress.url', this.url);\r\n\t\tif (!this.url) {\r\n\t\t\t$log.error('JlgWordpress: url not defined in provider!');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst url =  this.url + 'wp-json'\r\n\t\t$q.all([\r\n\t\t\t$http.get(url).then(function(response) {\r\n\t\t\t\t$log.debug('response', response);\r\n\t\t\t\tservice.info = response.data;\r\n\t\t\t}),\r\n\t\t\t$http.get(url + '/wp/v2/posts').then(function(response) {\r\n\t\t\t\t$log.debug('response', response);\r\n\t\t\t\tservice.posts = response.data;\r\n\t\t\t}),\r\n\t\t\t$http.get(url + '/wp/v2/media').then(function(response) {\r\n\t\t\t\t$log.debug('response', response);\r\n\t\t\t\tservice.medias = response.data;\r\n\t\t\t}),\r\n\t\t\t$http.get(url + '/wp/v2/pages').then(function(response) {\r\n\t\t\t\t$log.debug('response', response);\r\n\t\t\t\tservice.pages = response.data;\r\n\t\t\t}),\r\n\t\t]).then((responses) => {\r\n\t\t\tthis.isReady = true;\r\n\t\t\t$log.debug('stack', stack);\r\n\t\t\twhile (stack.length) {\r\n\t\t\t\tstack.pop()();\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\t$log.error('error', error);\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tservice.ready = () => $q(fulfill => {\r\n\t\tif (this.isReady) {\r\n\t\t\treturn fulfill();\r\n\t\t}\r\n\t\tstack.push(fulfill);\r\n\t});\r\n\r\n});\r\n\r\napp.controller('jlgWordpressCtrl', function JlgBodyUrl($http, $log, jlgWordpress) {\r\n\t'ngInject';\r\n\tconst ctrl = this;\r\n\tctrl.jlgWordpress = jlgWordpress;\r\n});\r\n\r\nimport jlgPostExcerptUrl from './tmpl/jlg-post-excerpt.html';\r\napp.component('jlgPostExcerpt', {\r\n\ttemplate: jlgPostExcerptUrl,\r\n\tcontroller: function JlgPostExcerptCtrl($log, jlgWordpress) {\r\n\t\t'ngInject';\r\n\t\tthis.ready = false;\r\n\t\tthis.$onInit = () => {\r\n\t\t\tjlgWordpress.ready().then(() => {\r\n\t\t\t\tif (this.id) {\r\n\t\t\t\t\tthis.post = jlgWordpress.posts.find(n => n.id === this.id);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.post === undefined) {\r\n\t\t\t\t\t$log.error('post not found');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.media = jlgWordpress.medias.find(n => n.id === this.post.featured_media);\r\n\t\t\t\tthis.excerpt = this.post.excerpt.rendered.replace(/<p class=\"link-more\">.*<\\/p>/, '');\r\n\t\t\t\tthis.ready = true;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t},\r\n\tbindings: {\r\n\t\tid: '<?',\r\n\t\tpost: '<?'\r\n\t}\r\n});\r\n\r\nimport jlgPageUrl from './tmpl/jlg-page.html';\r\napp.component('jlgPage', {\r\n\ttemplate: jlgPageUrl,\r\n\tcontroller: function JlgPageCtrl($log, jlgWordpress) {\r\n\t\t'ngInject';\r\n\t\tthis.ready = false;\r\n\t\tthis.$onInit = () => {\r\n\t\t\tjlgWordpress.ready().then(() => {\r\n\t\t\t\tif (this.title) {\r\n\t\t\t\t\tthis.page = jlgWordpress.pages.find(n => n.title.rendered === this.title);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.page === undefined) {\r\n\t\t\t\t\t$log.error('page not found');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.ready = true;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t},\r\n\tbindings: {\r\n\t\ttitle: '<?',\r\n\t\tpage: '<?'\r\n\t}\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/jlg-wordpress/jlg-wordpress.js","\"use strict\";\n/**\n * @coreapi\n * @module transition\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar interface_1 = require(\"./interface\");\nvar transitionHook_1 = require(\"./transitionHook\");\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(common_1.unnestR, [])\n            .filter(common_1.identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = common_1.extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node }\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === interface_1.TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new transitionHook_1.TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks.map(makeTransitionHooks)\n            .reduce(common_1.unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges) {\n        var isCreate = hookType.hookPhase === interface_1.TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries.map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(common_1.assertPredicate(predicates_1.isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(common_1.unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexports.HookBuilder = HookBuilder;\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/hookBuilder.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internalapi */\nexports.resolvePolicies = {\n    when: {\n        LAZY: \"LAZY\",\n        EAGER: \"EAGER\"\n    },\n    async: {\n        WAIT: \"WAIT\",\n        NOWAIT: \"NOWAIT\",\n        RXWAIT: \"RXWAIT\"\n    }\n};\n//# sourceMappingURL=interface.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/interface.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar hof_1 = require(\"../common/hof\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar paramType_1 = require(\"./paramType\");\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n */\nvar ParamTypes = (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = common_1.pick(ParamTypes.prototype, [\"hash\", \"string\", \"query\", \"path\", \"int\", \"bool\", \"date\", \"json\", \"any\"]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) {\n            return new paramType_1.ParamType(common_1.extend({ name: name }, definition));\n        };\n        this.types = common_1.inherit(common_1.map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!predicates_1.isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new paramType_1.ParamType(common_1.extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            common_1.extend(this.types[type.name], coreservices_1.services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexports.ParamTypes = ParamTypes;\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) {\n            return val != null ? val.toString() : val;\n        };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: hof_1.is(String),\n            pattern: /.*/,\n            equals: function (a, b) { return a == b; },\n        };\n        return common_1.extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    common_1.extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !predicates_1.isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return val && 1 || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: hof_1.is(Boolean),\n            pattern: /0|1/\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val) ? undefined : [\n                    val.getFullYear(),\n                    ('0' + (val.getMonth() + 1)).slice(-2),\n                    ('0' + val.getDate()).slice(-2)\n                ].join(\"-\");\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate']\n                    .reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/\n        }),\n        json: makeDefaultType({\n            encode: common_1.toJson,\n            decode: common_1.fromJson,\n            is: hof_1.is(Object),\n            equals: common_1.equals,\n            pattern: /[^/]*/\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: common_1.identity,\n            decode: common_1.identity,\n            is: function () { return true; },\n            equals: common_1.equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/paramTypes.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module params\n */\n/** */\nvar common_1 = require(\"../common/common\");\n/** @internalapi */\nvar StateParams = (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        common_1.extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parents = common_1.ancestors($current, $to), parentParams, inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return common_1.extend({}, inherited, newParams);\n    };\n    ;\n    return StateParams;\n}());\nexports.StateParams = StateParams;\n//# sourceMappingURL=stateParams.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/stateParams.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar strings_1 = require(\"../common/strings\");\nvar hof_1 = require(\"../common/hof\");\nvar resolvable_1 = require(\"../resolve/resolvable\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar parseUrl = function (url) {\n    if (!predicates_1.isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = common_1.inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(state) {\n        var stateDec = state;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            stateDec.url += \"{remainder:any}\"; // match any path (.*)\n        }\n        var parsed = parseUrl(stateDec.url), parent = state.parent;\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, {\n            params: state.params || {},\n            paramMap: function (paramConfig, isSearch) {\n                if (stateDec.reloadOnSearch === false && isSearch)\n                    paramConfig = common_1.extend(paramConfig || {}, { dynamic: true });\n                return paramConfig;\n            }\n        });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + state + \"'\");\n        return (parsed && parsed.root) ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : (state.parent ? state.parent.navigable : null);\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, config); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = common_1.values(common_1.mapObj(common_1.omit(state.params || {}, urlParams.map(hof_1.prop('id'))), makeConfigParam));\n        return urlParams.concat(nonUrlParams).map(function (p) { return [p.id, p]; }).reduce(common_1.applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? common_1.extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nfunction resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({ token: token, val: resolveObj[token], deps: undefined, policy: resolvePolicies[token] }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = coreservices_1.services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || \"deferred\";\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) { return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass)); };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) { return !!(obj && obj.val && (predicates_1.isString(obj.val) || predicates_1.isArray(obj.val) || predicates_1.isFunction(obj.val))); };\n    /** extracts the token from a Provider or provide literal */\n    var token = function (p) { return p.provide || p.token; };\n    /** Given a literal resolve or provider object, returns a Resolvable */\n    var literal2Resolvable = hof_1.pattern([\n        [hof_1.prop('resolveFn'), function (p) { return new resolvable_1.Resolvable(token(p), p.resolveFn, p.deps, p.policy); }],\n        [hof_1.prop('useFactory'), function (p) { return new resolvable_1.Resolvable(token(p), p.useFactory, (p.deps || p.dependencies), p.policy); }],\n        [hof_1.prop('useClass'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [hof_1.prop('useValue'), function (p) { return new resolvable_1.Resolvable(token(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [hof_1.prop('useExisting'), function (p) { return new resolvable_1.Resolvable(token(p), common_1.identity, [p.useExisting], p.policy); }],\n    ]);\n    var tuple2Resolvable = hof_1.pattern([\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isString), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.identity, [tuple.val], tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isArray), function (tuple) { return new resolvable_1.Resolvable(tuple.token, common_1.tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [hof_1.pipe(hof_1.prop(\"val\"), predicates_1.isFunction), function (tuple) { return new resolvable_1.Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    var item2Resolvable = hof_1.pattern([\n        [hof_1.is(resolvable_1.Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [hof_1.val(true), function (obj) { throw new Error(\"Invalid resolve value: \" + strings_1.stringify(obj)); }]\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = predicates_1.isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\nexports.resolvablesBuilder = resolvablesBuilder;\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(\"\"); };\n        var isRoot = function (state) { return state.name === \"\"; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder]\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (predicates_1.isString(name) && !predicates_1.isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!predicates_1.isString(name) || !predicates_1.isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, common_1.noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || \"\";\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join(\".\");\n        }\n        if (!state.parent)\n            return \"\";\n        return predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = predicates_1.isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + \".\" + name : name;\n    };\n    return StateBuilder;\n}());\nexports.StateBuilder = StateBuilder;\n//# sourceMappingURL=stateBuilder.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateBuilder.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar predicates_1 = require(\"../common/predicates\");\nvar common_1 = require(\"../common/common\");\nvar StateMatcher = (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || \"\";\n        return stateName.indexOf(\".\") === 0 || stateName.indexOf(\"^\") === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== \"\")\n            return undefined;\n        var isStr = predicates_1.isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = common_1.values(this._states);\n            var matches = _states.filter(function (state) {\n                return state.__stateObjectCache.nameGlob &&\n                    state.__stateObjectCache.nameGlob.matches(name);\n            });\n            if (matches.length > 1) {\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split(\".\"), i = 0, pathLength = splitName.length, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === \"\" && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === \"^\") {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join(\".\");\n        return current.name + (current.name && relName ? \".\" : \"\") + relName;\n    };\n    return StateMatcher;\n}());\nexports.StateMatcher = StateMatcher;\n//# sourceMappingURL=stateMatcher.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateMatcher.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module state */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar stateObject_1 = require(\"./stateObject\");\nvar hof_1 = require(\"../common/hof\");\n/** @internalapi */\nvar StateQueueManager = (function () {\n    function StateQueueManager($registry, $urlRouter, states, builder, listeners) {\n        this.$registry = $registry;\n        this.$urlRouter = $urlRouter;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n        this.matcher = $registry.matcher;\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = stateObject_1.StateObject.create(stateDecl);\n        var name = state.name;\n        if (!predicates_1.isString(name))\n            throw new Error(\"State must have a valid name\");\n        if (this.states.hasOwnProperty(name) || common_1.inArray(queue.map(hof_1.prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) {\n            return _this.states.hasOwnProperty(name) && _this.states[name];\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + \".**\");\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.$registry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        if (registered.length) {\n            this.listeners.forEach(function (listener) { return listener(\"registered\", registered.map(function (s) { return s.self; })); });\n        }\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        this.$urlRouter.rule(this.$urlRouter.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexports.StateQueueManager = StateQueueManager;\n//# sourceMappingURL=stateQueueManager.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateQueueManager.js\n// module id = 39\n// module chunks = 0","\"use strict\";\n/**\n * @coreapi\n * @module state\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stateMatcher_1 = require(\"./stateMatcher\");\nvar stateBuilder_1 = require(\"./stateBuilder\");\nvar stateQueueManager_1 = require(\"./stateQueueManager\");\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar StateRegistry = (function () {\n    /** @internalapi */\n    function StateRegistry(_router) {\n        this._router = _router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new stateMatcher_1.StateMatcher(this.states);\n        this.builder = new stateBuilder_1.StateBuilder(this.matcher, _router.urlMatcherFactory);\n        this.stateQueue = new stateQueueManager_1.StateQueueManager(this, _router.urlRouter, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true }\n            },\n            abstract: true\n        };\n        var _root = this._root = this.stateQueue.register(rootStateDef);\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            common_1.removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return children.length === 0 ? children : children.concat(getChildren(children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (state) {\n            var $ur = _this._router.urlRouter;\n            // Remove URL rule\n            $ur.rules().filter(hof_1.propEq(\"state\", state)).forEach($ur.removeRule.bind($ur));\n            // Remove state from registry\n            delete _this.states[state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener(\"deregistered\", deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return found && found.self || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexports.StateRegistry = StateRegistry;\n//# sourceMappingURL=stateRegistry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateRegistry.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module state\n */\n/** */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar queue_1 = require(\"../common/queue\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar pathFactory_1 = require(\"../path/pathFactory\");\nvar pathNode_1 = require(\"../path/pathNode\");\nvar transitionService_1 = require(\"../transition/transitionService\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\nvar targetState_1 = require(\"./targetState\");\nvar param_1 = require(\"../params/param\");\nvar glob_1 = require(\"../common/glob\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar lazyLoad_1 = require(\"../hooks/lazyLoad\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = (function () {\n    /** @internalapi */\n    function StateService(router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof rejectFactory_1.Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(hof_1.not(common_1.inArray(getters)));\n        common_1.createProxyFunctions(hof_1.val(StateService.prototype), this, hof_1.val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () { return this.router.globals.transition; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () { return this.router.globals.params; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () { return this.router.globals.current; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () { return this.router.globals.$current; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(common_1.noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = pathFactory_1.PathUtils.makeTargetState(fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new queue_1.Queue(this.invalidCallbacks.slice());\n        var injector = new resolveContext_1.ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof targetState_1.TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return rejectFactory_1.Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return rejectFactory_1.Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return rejectFactory_1.Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = coreservices_1.services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            common_1.removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: predicates_1.isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    ;\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = common_1.defaults(options, defautGoOpts, transitionService_1.defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    ;\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (predicates_1.isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState = options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (predicates_1.isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        var stateDefinition = reg.matcher.find(identifier, options.relative);\n        return new targetState_1.TargetState(identifier, stateDefinition, params, options);\n    };\n    ;\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new pathNode_1.PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = common_1.defaults(options, transitionService_1.defaultTransOpts);\n        var getCurrent = function () {\n            return globals.transition;\n        };\n        options = common_1.extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return common_1.silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (transition) { return function (error) {\n            if (error instanceof rejectFactory_1.Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId === transition.$id;\n                if (error.type === rejectFactory_1.RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return coreservices_1.services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === rejectFactory_1.RejectType.SUPERSEDED && error.redirected && detail instanceof targetState_1.TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = transition.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === rejectFactory_1.RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return coreservices_1.services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return coreservices_1.services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        common_1.silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return common_1.extend(transitionToPromise, { transition: transition });\n    };\n    ;\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return param_1.Param.equals(schema, param_1.Param.values(schema, params), this.params);\n    };\n    ;\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = common_1.defaults(options, { relative: this.$current });\n        var glob = predicates_1.isString(stateOrName) && glob_1.Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!predicates_1.isDefined(state))\n            return undefined;\n        if (!predicates_1.isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return param_1.Param.equals(schema, param_1.Param.values(schema, params), this.params);\n    };\n    ;\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = common_1.defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!predicates_1.isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = (state && options.lossy) ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, {\n            absolute: options.absolute,\n        });\n    };\n    ;\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return this._defaultErrorHandler = handler || this._defaultErrorHandler;\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error(\"Can not lazy load \" + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = pathFactory_1.PathUtils.makeTargetState(currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoad_1.lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexports.StateService = StateService;\n//# sourceMappingURL=stateService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/stateService.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */ /** */\nvar urlMatcherFactory_1 = require(\"./url/urlMatcherFactory\");\nvar urlRouter_1 = require(\"./url/urlRouter\");\nvar transitionService_1 = require(\"./transition/transitionService\");\nvar view_1 = require(\"./view/view\");\nvar stateRegistry_1 = require(\"./state/stateRegistry\");\nvar stateService_1 = require(\"./state/stateService\");\nvar globals_1 = require(\"./globals\");\nvar common_1 = require(\"./common/common\");\nvar predicates_1 = require(\"./common/predicates\");\nvar urlService_1 = require(\"./url/urlService\");\nvar trace_1 = require(\"./common/trace\");\n/** @hidden */\nvar _routerInstance = 0;\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = urlService_1.UrlService.locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = urlService_1.UrlService.locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace_1.trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new view_1.ViewService();\n        /** Provides services related to Transitions */\n        this.transitionService = new transitionService_1.TransitionService(this);\n        /** Global router state */\n        this.globals = new globals_1.UIRouterGlobals();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new urlMatcherFactory_1.UrlMatcherFactory();\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new urlRouter_1.UrlRouter(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new stateRegistry_1.StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new stateService_1.StateService(this);\n        /** Provides services related to the URL */\n        this.urlService = new urlService_1.UrlService(this);\n        /** @hidden */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlRouter);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && predicates_1.isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                common_1.removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error(\"Required property `name` missing on plugin: \" + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return this._plugins[pluginInstance.name] = pluginInstance;\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : common_1.values(this._plugins);\n    };\n    return UIRouter;\n}());\nexports.UIRouter = UIRouter;\n//# sourceMappingURL=router.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/router.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module url\n */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar urlMatcher_1 = require(\"./urlMatcher\");\nvar param_1 = require(\"../params/param\");\nvar paramTypes_1 = require(\"../params/paramTypes\");\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactor` or ng1 providers as `$urlMatcherFactoryProvider`.\n */\nvar UrlMatcherFactory = (function () {\n    function UrlMatcherFactory() {\n        var _this = this;\n        /** @hidden */ this.paramTypes = new paramTypes_1.ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @hidden */\n        this._getConfig = function (config) {\n            return common_1.extend({ strict: _this._isStrictMode, caseInsensitive: _this._isCaseInsensitive }, config);\n        };\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = {\n            /** Creates a new [[Param]] from a CONFIG block */\n            fromConfig: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.CONFIG, _this);\n            },\n            /** Creates a new [[Param]] from a url PATH */\n            fromPath: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.PATH, _this);\n            },\n            /** Creates a new [[Param]] from a url SEARCH */\n            fromSearch: function (id, type, config) {\n                return new param_1.Param(id, type, config, param_1.DefType.SEARCH, _this);\n            },\n        };\n        common_1.extend(this, { UrlMatcher: urlMatcher_1.UrlMatcher, Param: param_1.Param });\n    }\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.caseInsensitive = function (value) {\n        return this._isCaseInsensitive = predicates_1.isDefined(value) ? value : this._isCaseInsensitive;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.strictMode = function (value) {\n        return this._isStrictMode = predicates_1.isDefined(value) ? value : this._isStrictMode;\n    };\n    /** @inheritdoc */\n    UrlMatcherFactory.prototype.defaultSquashPolicy = function (value) {\n        if (predicates_1.isDefined(value) && value !== true && value !== false && !predicates_1.isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return this._defaultSquashPolicy = predicates_1.isDefined(value) ? value : this._defaultSquashPolicy;\n    };\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        return new urlMatcher_1.UrlMatcher(pattern, this.paramTypes, this.paramFactory, this._getConfig(config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!predicates_1.isObject(object))\n            return false;\n        var result = true;\n        common_1.forEach(urlMatcher_1.UrlMatcher.prototype, function (val, name) {\n            if (predicates_1.isFunction(val))\n                result = result && (predicates_1.isDefined(object[name]) && predicates_1.isFunction(object[name]));\n        });\n        return result;\n    };\n    ;\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A [[ParamType]] can be used to generate URLs with typed parameters.\n     *\n     * @param name  The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns - if a type was registered: the [[UrlMatcherFactory]]\n     *   - if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     *\n     * Note: Register custom types *before using them* in a state definition.\n     *\n     * See [[ParamTypeDefinition]] for examples\n     */\n    UrlMatcherFactory.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !predicates_1.isDefined(definition) ? type : this;\n    };\n    ;\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        this.paramTypes.enqueue = false;\n        this.paramTypes._flushTypeQueue();\n        return this;\n    };\n    ;\n    /** @internalapi */\n    UrlMatcherFactory.prototype.dispose = function () {\n        this.paramTypes.dispose();\n    };\n    return UrlMatcherFactory;\n}());\nexports.UrlMatcherFactory = UrlMatcherFactory;\n//# sourceMappingURL=urlMatcherFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlMatcherFactory.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module url\n */\n/** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar predicates_1 = require(\"../common/predicates\");\nvar urlMatcher_1 = require(\"./urlMatcher\");\nvar hof_1 = require(\"../common/hof\");\nvar urlRule_1 = require(\"./urlRule\");\nvar targetState_1 = require(\"../state/targetState\");\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return baseHref.slice(0, -1) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/** @hidden */\nvar getMatcher = hof_1.prop(\"urlMatcher\");\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRulesApi.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Registration order (for rule types other than STATE and URLMATCHER)\n *\n * @coreapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = common_1.composeSort(common_1.sortBy(hof_1.pipe(hof_1.prop(\"priority\"), function (x) { return -x; })), common_1.sortBy(hof_1.pipe(hof_1.prop(\"type\"), function (type) { return ({ \"STATE\": 4, \"URLMATCHER\": 4, \"REGEXP\": 3, \"RAW\": 2, \"OTHER\": 1 })[type]; })), function (a, b) { return (getMatcher(a) && getMatcher(b)) ? urlMatcher_1.UrlMatcher.compare(getMatcher(a), getMatcher(b)) : 0; }, common_1.sortBy(hof_1.prop(\"$id\"), common_1.inArray([\"REGEXP\", \"RAW\", \"OTHER\"])));\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class updates the URL when the state changes.\n * It also responds to changes in the URL.\n */\nvar UrlRouter = (function () {\n    /** @hidden */\n    function UrlRouter(router) {\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this.interceptDeferred = false;\n        /** @hidden */ this._id = 0;\n        /** @hidden */ this._sorted = false;\n        this._router = router;\n        this.urlRuleFactory = new urlRule_1.UrlRuleFactory(router);\n        common_1.createProxyFunctions(hof_1.val(UrlRouter.prototype), this, hof_1.val(this));\n    }\n    /** @internalapi */\n    UrlRouter.prototype.dispose = function () {\n        this.listen(false);\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sort = function (compareFn) {\n        this._rules.sort(this._sortFn = compareFn || this._sortFn);\n        this._sorted = true;\n    };\n    UrlRouter.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /**\n     * Given a URL, check all rules and return the best [[MatchResult]]\n     * @param url\n     * @returns {MatchResult}\n     */\n    UrlRouter.prototype.match = function (url) {\n        var _this = this;\n        this.ensureSorted();\n        url = common_1.extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules();\n        if (this._otherwiseFn)\n            rules.push(this._otherwiseFn);\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this._router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && this._sortFn(rules[i], best.rule) !== 0)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = (!best || current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var router = this._router, $url = router.urlService, $state = router.stateService;\n        var url = {\n            path: $url.path(), search: $url.search(), hash: $url.hash(),\n        };\n        var best = this.match(url);\n        var applyResult = hof_1.pattern([\n            [predicates_1.isString, function (newurl) { return $url.url(newurl, true); }],\n            [targetState_1.TargetState.isDef, function (def) { return $state.go(def.state, def.params, def.options); }],\n            [hof_1.is(targetState_1.TargetState), function (target) { return $state.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, router));\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopFn && this._stopFn();\n            delete this._stopFn;\n        }\n        else {\n            return this._stopFn = this._stopFn || this._router.urlService.onChange(function (evt) { return _this.sync(evt); });\n        }\n    };\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this._router.locationService;\n        if (read) {\n            this.location = $url.path();\n            return;\n        }\n        if ($url.path() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this._router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this._router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = \"#\" + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = (!isHtml5 && url ? '/' : ''), port = cfg.port();\n        port = (port === 80 || port === 443 ? '' : ':' + port);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[UrlRouter.urlRuleFactory]], or create manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRouter.prototype.rule = function (rule) {\n        var _this = this;\n        if (!urlRule_1.UrlRuleFactory.isUrlRule(rule))\n            throw new Error(\"invalid rule\");\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.removeRule = function (rule) {\n        common_1.removeFrom(this._rules, rule);\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.slice();\n    };\n    /** @inheritdoc */\n    UrlRouter.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(hof_1.val(true), handlerFn);\n        this._sorted = false;\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (predicates_1.isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    ;\n    /** @inheritdoc */\n    UrlRouter.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    ;\n    return UrlRouter;\n}());\nexports.UrlRouter = UrlRouter;\nfunction getHandlerFn(handler) {\n    if (!predicates_1.isFunction(handler) && !predicates_1.isString(handler) && !hof_1.is(targetState_1.TargetState)(handler) && !targetState_1.TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return predicates_1.isFunction(handler) ? handler : hof_1.val(handler);\n}\n//# sourceMappingURL=urlRouter.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlRouter.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module url\n */ /** */\nvar urlMatcher_1 = require(\"./urlMatcher\");\nvar predicates_1 = require(\"../common/predicates\");\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var makeRule = hof_1.pattern([\n            [predicates_1.isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [hof_1.is(urlMatcher_1.UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [predicates_1.isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [hof_1.is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [predicates_1.isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (predicates_1.isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (hof_1.is(urlMatcher_1.UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function match(url) {\n            var match = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(match) && match;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: \"URLMATCHER\" };\n        return common_1.extend(new BaseUrlRule(match, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: \"url\" });\n            }\n        };\n        var details = { state: state, type: \"STATE\" };\n        return common_1.extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error(\"Rule RegExp must not be global or sticky\");\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) {\n                return match[what === '$' ? 0 : Number(what)];\n            });\n        };\n        var _handler = predicates_1.isString(handler) ? redirectUrlTo : handler;\n        var match = function (url) {\n            return regexp.exec(url.path);\n        };\n        var details = { regexp: regexp, type: \"REGEXP\" };\n        return common_1.extend(new BaseUrlRule(match, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) {\n        return obj && ['type', 'match', 'handler'].every(function (key) { return predicates_1.isDefined(obj[key]); });\n    };\n    return UrlRuleFactory;\n}());\nexports.UrlRuleFactory = UrlRuleFactory;\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = \"RAW\";\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || common_1.identity;\n    }\n    return BaseUrlRule;\n}());\nexports.BaseUrlRule = BaseUrlRule;\n//# sourceMappingURL=urlRule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlRule.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module view\n */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar hof_1 = require(\"../common/hof\");\nvar predicates_1 = require(\"../common/predicates\");\nvar trace_1 = require(\"../common/trace\");\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = (function () {\n    function ViewService() {\n        var _this = this;\n        this._uiViews = [];\n        this._viewConfigs = [];\n        this._viewConfigFactories = {};\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n        };\n    }\n    ViewService.prototype._rootViewContext = function (context) {\n        return this._rootContext = context || this._rootContext;\n    };\n    ;\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error(\"ViewService: No view config factory registered for type \" + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return predicates_1.isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"<- Removing\", viewConfig);\n        common_1.removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace_1.trace.traceViewServiceEvent(\"-> Registering\", viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(common_1.applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) {\n                return context && context.parent ? stateDepth(context.parent) + 1 : 1;\n            };\n            return (uiView.fqn.split(\".\").length * 10000) + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = hof_1.curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return [uiView, matchingConfigs[0]];\n        };\n        var configureUIView = function (_a) {\n            var uiView = _a[0], viewConfig = _a[1];\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(uiView) !== -1)\n                uiView.configUpdated(viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var pairs = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        trace_1.trace.traceViewSync(pairs);\n        pairs.forEach(configureUIView);\n    };\n    ;\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace_1.trace.traceViewServiceUIViewEvent(\"-> Registering\", uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace_1.trace.traceViewServiceUIViewEvent(\"!!!! duplicate uiView named:\", uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace_1.trace.traceViewServiceUIViewEvent(\"Tried removing non-registered uiView\", uiView);\n                return;\n            }\n            trace_1.trace.traceViewServiceUIViewEvent(\"<- Deregistering\", uiView);\n            common_1.removeFrom(uiViews)(uiView);\n        };\n    };\n    ;\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(hof_1.prop(\"fqn\"));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(hof_1.prop(\"$config\")).map(hof_1.prop(\"name\"));\n    };\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = \"\"; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split(\"@\");\n        var uiViewName = viewAtContext[0] || \"$default\"; // default to unnamed view\n        var uiViewContextAnchor = predicates_1.isString(viewAtContext[1]) ? viewAtContext[1] : \"^\"; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = \"\"; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchor = uiViewContextAnchor.split(\".\").reduce((function (anchor, x) { return anchor.parent; }), context);\n            uiViewContextAnchor = anchor.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split(\".\");\n        var uivSegments = uiView.fqn.split(\".\");\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!common_1.equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = (1 - vcSegments.length) || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join(\".\");\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexports.ViewService = ViewService;\n//# sourceMappingURL=view.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/view/view.js\n// module id = 46\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @coreapi\n * @module core\n */ /** */\nvar stateParams_1 = require(\"./params/stateParams\");\nvar queue_1 = require(\"./common/queue\");\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new stateParams_1.StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new queue_1.Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new queue_1.Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexports.UIRouterGlobals = UIRouterGlobals;\n//# sourceMappingURL=globals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/globals.js\n// module id = 47\n// module chunks = 0","\"use strict\";\n/**\n * @coreapi\n * @module url\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar coreservices_1 = require(\"../common/coreservices\");\nvar common_1 = require(\"../common/common\");\n/** @hidden */\nvar makeStub = function (keys) {\n    return keys.reduce(function (acc, key) { return (acc[key] = coreservices_1.notImplemented(key), acc); }, { dispose: common_1.noop });\n};\n/** @hidden */ var locationServicesFns = [\"url\", \"path\", \"search\", \"hash\", \"onChange\"];\n/** @hidden */ var locationConfigFns = [\"port\", \"protocol\", \"host\", \"baseHref\", \"html5Mode\", \"hashPrefix\"];\n/** @hidden */ var umfFns = [\"type\", \"caseInsensitive\", \"strictMode\", \"defaultSquashPolicy\"];\n/** @hidden */ var rulesFns = [\"sort\", \"when\", \"initial\", \"otherwise\", \"rules\", \"rule\", \"removeRule\"];\n/** @hidden */ var syncFns = [\"deferIntercept\", \"listen\", \"sync\", \"match\"];\n/**\n * API for URL management\n */\nvar UrlService = (function () {\n    /** @hidden */\n    function UrlService(router, lateBind) {\n        if (lateBind === void 0) { lateBind = true; }\n        this.router = router;\n        this.rules = {};\n        this.config = {};\n        // proxy function calls from UrlService to the LocationService/LocationConfig\n        var locationServices = function () { return router.locationService; };\n        common_1.createProxyFunctions(locationServices, this, locationServices, locationServicesFns, lateBind);\n        var locationConfig = function () { return router.locationConfig; };\n        common_1.createProxyFunctions(locationConfig, this.config, locationConfig, locationConfigFns, lateBind);\n        var umf = function () { return router.urlMatcherFactory; };\n        common_1.createProxyFunctions(umf, this.config, umf, umfFns);\n        var urlRouter = function () { return router.urlRouter; };\n        common_1.createProxyFunctions(urlRouter, this.rules, urlRouter, rulesFns);\n        common_1.createProxyFunctions(urlRouter, this, urlRouter, syncFns);\n    }\n    UrlService.prototype.url = function (newurl, replace, state) { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.path = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.search = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.hash = function () { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.onChange = function (callback) { return; };\n    ;\n    /**\n     * Returns the current URL parts\n     *\n     * This method returns the current URL components as a [[UrlParts]] object.\n     *\n     * @returns the current url parts\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    UrlService.prototype.dispose = function () { };\n    /** @inheritdoc */\n    UrlService.prototype.sync = function (evt) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.listen = function (enabled) { return; };\n    ;\n    /** @inheritdoc */\n    UrlService.prototype.deferIntercept = function (defer) { return; };\n    /** @inheritdoc */\n    UrlService.prototype.match = function (urlParts) { return; };\n    /** @hidden */\n    UrlService.locationServiceStub = makeStub(locationServicesFns);\n    /** @hidden */\n    UrlService.locationConfigStub = makeStub(locationConfigFns);\n    return UrlService;\n}());\nexports.UrlService = UrlService;\n//# sourceMappingURL=urlService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/urlService.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === \"STATE\") {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition.entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return coreservices_1.services.$q.all(promises).then(retryTransition);\n};\nexports.registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nfunction lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return coreservices_1.services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] =\n            coreservices_1.services.$q.when(lazyLoadFn(transition, state))\n                .then(updateStateRegistry)\n                .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (state) { return transition.router.stateRegistry.register(state); });\n        }\n        return result;\n    }\n    return promise;\n}\nexports.lazyLoadState = lazyLoadState;\n//# sourceMappingURL=lazyLoad.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/lazyLoad.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transitionHook_1 = require(\"./transitionHook\");\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = (function () {\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = transitionHook_1.TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = transitionHook_1.TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexports.TransitionEventType = TransitionEventType;\n//# sourceMappingURL=transitionEventType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/transitionEventType.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = require(\"../common/index\");\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexports.$q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) { return new Promise(function (resolve, reject) { reject(val); }); },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (index_1.isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (index_1.isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises)\n                .map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return exports.$q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) { acc[tuple.key] = tuple.val; return acc; }, {});\n            });\n        }\n    }\n};\n//# sourceMappingURL=q.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/q.js\n// module id = 51\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar index_1 = require(\"../common/index\");\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexports.$injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return exports.$injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = index_1.extend({}, globals, locals || {});\n        var params = exports.$injector.annotate(fn);\n        var ensureExist = index_1.assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (index_1.isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!index_1.isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (index_1.isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    }\n};\n//# sourceMappingURL=injector.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/injector.js\n// module id = 52\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar utils_1 = require(\"./utils\");\nvar baseLocationService_1 = require(\"./baseLocationService\");\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        window.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return utils_1.trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.HashLocationService = HashLocationService;\n//# sourceMappingURL=hashLocationService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/hashLocationService.js\n// module id = 53\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar baseLocationService_1 = require(\"./baseLocationService\");\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.MemoryLocationService = MemoryLocationService;\n//# sourceMappingURL=memoryLocationService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/memoryLocationService.js\n// module id = 54\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nvar baseLocationService_1 = require(\"./baseLocationService\");\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        window.addEventListener(\"popstate\", _this._listener, false);\n        return _this;\n    }\n    ;\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = utils_1.splitQuery(search)[1]; // strip ? if found\n        hash = utils_1.splitHash(hash)[1]; // strip # if found\n        return pathname + (search ? \"?\" + search : \"\") + (hash ? \"$\" + search : \"\");\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var _a = this, _config = _a._config, _history = _a._history;\n        var fullUrl = _config.baseHref() + url;\n        if (replace) {\n            _history.replaceState(state, title, fullUrl);\n        }\n        else {\n            _history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        window.removeEventListener(\"popstate\", this._listener);\n    };\n    return PushStateLocationService;\n}(baseLocationService_1.BaseLocationServices));\nexports.PushStateLocationService = PushStateLocationService;\n//# sourceMappingURL=pushStateLocationService.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/pushStateLocationService.js\n// module id = 55\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar predicates_1 = require(\"../common/predicates\");\nvar common_1 = require(\"../common/common\");\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = \"http\";\n        this._host = \"localhost\";\n        this._hashPrefix = \"\";\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return predicates_1.isDefined(newval) ? _this._hashPrefix = newval : _this._hashPrefix; };\n        this.dispose = common_1.noop;\n    }\n    return MemoryLocationConfig;\n}());\nexports.MemoryLocationConfig = MemoryLocationConfig;\n//# sourceMappingURL=memoryLocationConfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/memoryLocationConfig.js\n// module id = 56\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar predicates_1 = require(\"../common/predicates\");\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = \"\";\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.host;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return predicates_1.isDefined(newprefix) ? this._hashPrefix = newprefix : this._hashPrefix;\n    };\n    ;\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        return predicates_1.isDefined(href) ? this._baseHref = href : this._baseHref || this.applyDocumentBaseHref();\n    };\n    BrowserLocationConfig.prototype.applyDocumentBaseHref = function () {\n        var baseTags = document.getElementsByTagName(\"base\");\n        return this._baseHref = baseTags.length ? baseTags[0].href.substr(location.origin.length) : \"\";\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexports.BrowserLocationConfig = BrowserLocationConfig;\n//# sourceMappingURL=browserLocationConfig.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/browserLocationConfig.js\n// module id = 57\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** for typedoc */\nvar core_1 = require(\"@uirouter/core\");\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        core_1.createProxyFunctions(core_1.val(StateProvider.prototype), this, core_1.val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (core_1.isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\nexports.StateProvider = StateProvider;\n//# sourceMappingURL=stateProvider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/stateProvider.js\n// module id = 58\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module url */ /** */\nvar core_1 = require(\"@uirouter/core\");\nvar core_2 = require(\"@uirouter/core\");\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @deprecated\n */\nvar UrlRouterProvider = (function () {\n    /** @hidden */\n    function UrlRouterProvider(router) {\n        this._router = router;\n        this._urlRouter = router.urlRouter;\n    }\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlRouter = this._urlRouter;\n        urlRouter.update(true);\n        if (!urlRouter.interceptDeferred)\n            urlRouter.listen();\n        return urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!core_2.isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () {\n            return ruleFn(core_2.services.$injector, _this._router.locationService);\n        };\n        var rule = new core_1.BaseUrlRule(match, core_2.identity);\n        this._urlRouter.rule(rule);\n        return this;\n    };\n    ;\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRouter = this._urlRouter;\n        if (core_2.isString(rule)) {\n            urlRouter.otherwise(rule);\n        }\n        else if (core_2.isFunction(rule)) {\n            urlRouter.otherwise(function () { return rule(core_2.services.$injector, _this._router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    ;\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (core_2.isArray(handler) || core_2.isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this._router, handler);\n        }\n        this._urlRouter.when(what, handler);\n        return this;\n    };\n    ;\n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) {\n            return core_2.services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\n        };\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this._urlRouter.deferIntercept(defer);\n    };\n    ;\n    return UrlRouterProvider;\n}());\nexports.UrlRouterProvider = UrlRouterProvider;\n//# sourceMappingURL=urlRouterProvider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/urlRouterProvider.js\n// module id = 59\n// module chunks = 0","import './style.scss';\r\n\r\nimport './jlg-layout/jlg-layout.js';\r\nimport './jlg-route/jlg-route.js';\r\n\r\nangular.module('main', [\r\n\t'jlg-layout',\r\n\t'jlg-route',\r\n]);\r\n\r\nrequire('./config.js');\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/main.js","import 'angular-sanitize';\r\nimport '../jlg-wordpress/jlg-wordpress.js';\r\nimport './jlg-layout.scss';\r\n\r\nconst app = angular.module('jlg-layout', [\r\n\t'ngSanitize',\r\n\t'jlg-wordpress',\r\n]);\r\n\r\nimport jlgHeaderUrl from './tmpl/jlg-header.html';\r\napp.component('jlgHeader', {\r\n\ttemplate: jlgHeaderUrl,\r\n\tcontroller: 'jlgWordpressCtrl'\r\n});\r\n\r\nimport jlgBodyUrl from './tmpl/jlg-body.html';\r\napp.component('jlgBody', {\r\n\ttemplate: jlgBodyUrl,\r\n\tcontroller: 'jlgWordpressCtrl'\r\n});\r\n\r\nimport jlgFooterUrl from './tmpl/jlg-footer.html';\r\napp.component('jlgFooter', {\r\n\ttemplate: jlgFooterUrl,\r\n\tcontroller: 'jlgWordpressCtrl'\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/jlg-layout/jlg-layout.js","/**\n * @license AngularJS v1.6.5\n * (c) 2010-2017 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n *     Any commits to this file should be reviewed with security in mind.  *\n *   Changes to this file can potentially create security vulnerabilities. *\n *          An approval from 2 Core members with history of modifying      *\n *                         this file is required.                          *\n *                                                                         *\n *  Does the change somehow allow for arbitrary javascript to be executed? *\n *    Or allows for someone to change the prototype of built-in objects?   *\n *     Or gives undesired access to variables likes document or window?    *\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nvar $sanitizeMinErr = angular.$$minErr('$sanitize');\nvar bind;\nvar extend;\nvar forEach;\nvar isDefined;\nvar lowercase;\nvar noop;\nvar nodeContains;\nvar htmlParser;\nvar htmlSanitizeWriter;\n\n/**\n * @ngdoc module\n * @name ngSanitize\n * @description\n *\n * # ngSanitize\n *\n * The `ngSanitize` module provides functionality to sanitize HTML.\n *\n *\n * <div doc-module-components=\"ngSanitize\"></div>\n *\n * See {@link ngSanitize.$sanitize `$sanitize`} for usage.\n */\n\n/**\n * @ngdoc service\n * @name $sanitize\n * @kind function\n *\n * @description\n *   Sanitizes an html string by stripping all potentially dangerous tokens.\n *\n *   The input is sanitized by parsing the HTML into tokens. All safe tokens (from a whitelist) are\n *   then serialized back to properly escaped html string. This means that no unsafe input can make\n *   it into the returned string.\n *\n *   The whitelist for URL sanitization of attribute values is configured using the functions\n *   `aHrefSanitizationWhitelist` and `imgSrcSanitizationWhitelist` of {@link ng.$compileProvider\n *   `$compileProvider`}.\n *\n *   The input may also contain SVG markup if this is enabled via {@link $sanitizeProvider}.\n *\n * @param {string} html HTML input.\n * @returns {string} Sanitized HTML.\n *\n * @example\n   <example module=\"sanitizeExample\" deps=\"angular-sanitize.js\" name=\"sanitize-service\">\n   <file name=\"index.html\">\n     <script>\n         angular.module('sanitizeExample', ['ngSanitize'])\n           .controller('ExampleController', ['$scope', '$sce', function($scope, $sce) {\n             $scope.snippet =\n               '<p style=\"color:blue\">an html\\n' +\n               '<em onmouseover=\"this.textContent=\\'PWN3D!\\'\">click here</em>\\n' +\n               'snippet</p>';\n             $scope.deliberatelyTrustDangerousSnippet = function() {\n               return $sce.trustAsHtml($scope.snippet);\n             };\n           }]);\n     </script>\n     <div ng-controller=\"ExampleController\">\n        Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <td>Directive</td>\n           <td>How</td>\n           <td>Source</td>\n           <td>Rendered</td>\n         </tr>\n         <tr id=\"bind-html-with-sanitize\">\n           <td>ng-bind-html</td>\n           <td>Automatically uses $sanitize</td>\n           <td><pre>&lt;div ng-bind-html=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind-html=\"snippet\"></div></td>\n         </tr>\n         <tr id=\"bind-html-with-trust\">\n           <td>ng-bind-html</td>\n           <td>Bypass $sanitize by explicitly trusting the dangerous value</td>\n           <td>\n           <pre>&lt;div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"&gt;\n&lt;/div&gt;</pre>\n           </td>\n           <td><div ng-bind-html=\"deliberatelyTrustDangerousSnippet()\"></div></td>\n         </tr>\n         <tr id=\"bind-default\">\n           <td>ng-bind</td>\n           <td>Automatically escapes</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br/>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n       </div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should sanitize the html snippet by default', function() {\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('<p>an html\\n<em>click here</em>\\nsnippet</p>');\n     });\n\n     it('should inline raw snippet if bound to a trusted value', function() {\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).\n         toBe(\"<p style=\\\"color:blue\\\">an html\\n\" +\n              \"<em onmouseover=\\\"this.textContent='PWN3D!'\\\">click here</em>\\n\" +\n              \"snippet</p>\");\n     });\n\n     it('should escape snippet without any filter', function() {\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).\n         toBe(\"&lt;p style=\\\"color:blue\\\"&gt;an html\\n\" +\n              \"&lt;em onmouseover=\\\"this.textContent='PWN3D!'\\\"&gt;click here&lt;/em&gt;\\n\" +\n              \"snippet&lt;/p&gt;\");\n     });\n\n     it('should update', function() {\n       element(by.model('snippet')).clear();\n       element(by.model('snippet')).sendKeys('new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-html-with-sanitize div')).getAttribute('innerHTML')).\n         toBe('new <b>text</b>');\n       expect(element(by.css('#bind-html-with-trust div')).getAttribute('innerHTML')).toBe(\n         'new <b onclick=\"alert(1)\">text</b>');\n       expect(element(by.css('#bind-default div')).getAttribute('innerHTML')).toBe(\n         \"new &lt;b onclick=\\\"alert(1)\\\"&gt;text&lt;/b&gt;\");\n     });\n   </file>\n   </example>\n */\n\n\n/**\n * @ngdoc provider\n * @name $sanitizeProvider\n * @this\n *\n * @description\n * Creates and configures {@link $sanitize} instance.\n */\nfunction $SanitizeProvider() {\n  var svgEnabled = false;\n\n  this.$get = ['$$sanitizeUri', function($$sanitizeUri) {\n    if (svgEnabled) {\n      extend(validElements, svgElements);\n    }\n    return function(html) {\n      var buf = [];\n      htmlParser(html, htmlSanitizeWriter(buf, function(uri, isImage) {\n        return !/^unsafe:/.test($$sanitizeUri(uri, isImage));\n      }));\n      return buf.join('');\n    };\n  }];\n\n\n  /**\n   * @ngdoc method\n   * @name $sanitizeProvider#enableSvg\n   * @kind function\n   *\n   * @description\n   * Enables a subset of svg to be supported by the sanitizer.\n   *\n   * <div class=\"alert alert-warning\">\n   *   <p>By enabling this setting without taking other precautions, you might expose your\n   *   application to click-hijacking attacks. In these attacks, sanitized svg elements could be positioned\n   *   outside of the containing element and be rendered over other elements on the page (e.g. a login\n   *   link). Such behavior can then result in phishing incidents.</p>\n   *\n   *   <p>To protect against these, explicitly setup `overflow: hidden` css rule for all potential svg\n   *   tags within the sanitized content:</p>\n   *\n   *   <br>\n   *\n   *   <pre><code>\n   *   .rootOfTheIncludedContent svg {\n   *     overflow: hidden !important;\n   *   }\n   *   </code></pre>\n   * </div>\n   *\n   * @param {boolean=} flag Enable or disable SVG support in the sanitizer.\n   * @returns {boolean|ng.$sanitizeProvider} Returns the currently configured value if called\n   *    without an argument or self for chaining otherwise.\n   */\n  this.enableSvg = function(enableSvg) {\n    if (isDefined(enableSvg)) {\n      svgEnabled = enableSvg;\n      return this;\n    } else {\n      return svgEnabled;\n    }\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n  // Private stuff\n  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n  bind = angular.bind;\n  extend = angular.extend;\n  forEach = angular.forEach;\n  isDefined = angular.isDefined;\n  lowercase = angular.lowercase;\n  noop = angular.noop;\n\n  htmlParser = htmlParserImpl;\n  htmlSanitizeWriter = htmlSanitizeWriterImpl;\n\n  nodeContains = window.Node.prototype.contains || /** @this */ function(arg) {\n    // eslint-disable-next-line no-bitwise\n    return !!(this.compareDocumentPosition(arg) & 16);\n  };\n\n  // Regular Expressions for parsing tags and attributes\n  var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g,\n    // Match everything outside of normal chars and \" (quote character)\n    NON_ALPHANUMERIC_REGEXP = /([^#-~ |!])/g;\n\n\n  // Good source of info about elements and attributes\n  // http://dev.w3.org/html5/spec/Overview.html#semantics\n  // http://simon.html5.org/html-elements\n\n  // Safe Void Elements - HTML5\n  // http://dev.w3.org/html5/spec/Overview.html#void-elements\n  var voidElements = toMap('area,br,col,hr,img,wbr');\n\n  // Elements that you can, intentionally, leave open (and which close themselves)\n  // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n  var optionalEndTagBlockElements = toMap('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),\n      optionalEndTagInlineElements = toMap('rp,rt'),\n      optionalEndTagElements = extend({},\n                                              optionalEndTagInlineElements,\n                                              optionalEndTagBlockElements);\n\n  // Safe Block Elements - HTML5\n  var blockElements = extend({}, optionalEndTagBlockElements, toMap('address,article,' +\n          'aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n          'h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,section,table,ul'));\n\n  // Inline Elements - HTML5\n  var inlineElements = extend({}, optionalEndTagInlineElements, toMap('a,abbr,acronym,b,' +\n          'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,' +\n          'samp,small,span,strike,strong,sub,sup,time,tt,u,var'));\n\n  // SVG Elements\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Elements\n  // Note: the elements animate,animateColor,animateMotion,animateTransform,set are intentionally omitted.\n  // They can potentially allow for arbitrary javascript to be executed. See #11290\n  var svgElements = toMap('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,' +\n          'hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,' +\n          'radialGradient,rect,stop,svg,switch,text,title,tspan');\n\n  // Blocked Elements (will be stripped)\n  var blockedElements = toMap('script,style');\n\n  var validElements = extend({},\n                                     voidElements,\n                                     blockElements,\n                                     inlineElements,\n                                     optionalEndTagElements);\n\n  //Attributes that have href and hence need to be sanitized\n  var uriAttrs = toMap('background,cite,href,longdesc,src,xlink:href');\n\n  var htmlAttrs = toMap('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,' +\n      'color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,' +\n      'ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,' +\n      'scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,' +\n      'valign,value,vspace,width');\n\n  // SVG attributes (without \"id\" and \"name\" attributes)\n  // https://wiki.whatwg.org/wiki/Sanitization_rules#svg_Attributes\n  var svgAttrs = toMap('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,' +\n      'baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,' +\n      'cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,' +\n      'font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,' +\n      'height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,' +\n      'marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,' +\n      'max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,' +\n      'path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,' +\n      'requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,' +\n      'stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,' +\n      'stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,' +\n      'stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,' +\n      'underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,' +\n      'width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,' +\n      'xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', true);\n\n  var validAttrs = extend({},\n                                  uriAttrs,\n                                  svgAttrs,\n                                  htmlAttrs);\n\n  function toMap(str, lowercaseKeys) {\n    var obj = {}, items = str.split(','), i;\n    for (i = 0; i < items.length; i++) {\n      obj[lowercaseKeys ? lowercase(items[i]) : items[i]] = true;\n    }\n    return obj;\n  }\n\n  /**\n   * Create an inert document that contains the dirty HTML that needs sanitizing\n   * Depending upon browser support we use one of three strategies for doing this.\n   * Support: Safari 10.x -> XHR strategy\n   * Support: Firefox -> DomParser strategy\n   */\n  var getInertBodyElement /* function(html: string): HTMLBodyElement */ = (function(window, document) {\n    var inertDocument;\n    if (document && document.implementation) {\n      inertDocument = document.implementation.createHTMLDocument('inert');\n    } else {\n      throw $sanitizeMinErr('noinert', 'Can\\'t create an inert html document');\n    }\n    var inertBodyElement = (inertDocument.documentElement || inertDocument.getDocumentElement()).querySelector('body');\n\n    // Check for the Safari 10.1 bug - which allows JS to run inside the SVG G element\n    inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (!inertBodyElement.querySelector('svg')) {\n      return getInertBodyElement_XHR;\n    } else {\n      // Check for the Firefox bug - which prevents the inner img JS from being sanitized\n      inertBodyElement.innerHTML = '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n      if (inertBodyElement.querySelector('svg img')) {\n        return getInertBodyElement_DOMParser;\n      } else {\n        return getInertBodyElement_InertDocument;\n      }\n    }\n\n    function getInertBodyElement_XHR(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        html = encodeURI(html);\n      } catch (e) {\n        return undefined;\n      }\n      var xhr = new window.XMLHttpRequest();\n      xhr.responseType = 'document';\n      xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n      xhr.send(null);\n      var body = xhr.response.body;\n      body.firstChild.remove();\n      return body;\n    }\n\n    function getInertBodyElement_DOMParser(html) {\n      // We add this dummy element to ensure that the rest of the content is parsed as expected\n      // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the `<head>` tag.\n      html = '<remove></remove>' + html;\n      try {\n        var body = new window.DOMParser().parseFromString(html, 'text/html').body;\n        body.firstChild.remove();\n        return body;\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    function getInertBodyElement_InertDocument(html) {\n      inertBodyElement.innerHTML = html;\n\n      // Support: IE 9-11 only\n      // strip custom-namespaced attributes on IE<=11\n      if (document.documentMode) {\n        stripCustomNsAttrs(inertBodyElement);\n      }\n\n      return inertBodyElement;\n    }\n  })(window, window.document);\n\n  /**\n   * @example\n   * htmlParser(htmlString, {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * });\n   *\n   * @param {string} html string\n   * @param {object} handler\n   */\n  function htmlParserImpl(html, handler) {\n    if (html === null || html === undefined) {\n      html = '';\n    } else if (typeof html !== 'string') {\n      html = '' + html;\n    }\n\n    var inertBodyElement = getInertBodyElement(html);\n    if (!inertBodyElement) return '';\n\n    //mXSS protection\n    var mXSSAttempts = 5;\n    do {\n      if (mXSSAttempts === 0) {\n        throw $sanitizeMinErr('uinput', 'Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      // trigger mXSS if it is going to happen by reading and writing the innerHTML\n      html = inertBodyElement.innerHTML;\n      inertBodyElement = getInertBodyElement(html);\n    } while (html !== inertBodyElement.innerHTML);\n\n    var node = inertBodyElement.firstChild;\n    while (node) {\n      switch (node.nodeType) {\n        case 1: // ELEMENT_NODE\n          handler.start(node.nodeName.toLowerCase(), attrToMap(node.attributes));\n          break;\n        case 3: // TEXT NODE\n          handler.chars(node.textContent);\n          break;\n      }\n\n      var nextNode;\n      if (!(nextNode = node.firstChild)) {\n        if (node.nodeType === 1) {\n          handler.end(node.nodeName.toLowerCase());\n        }\n        nextNode = getNonDescendant('nextSibling', node);\n        if (!nextNode) {\n          while (nextNode == null) {\n            node = getNonDescendant('parentNode', node);\n            if (node === inertBodyElement) break;\n            nextNode = getNonDescendant('nextSibling', node);\n            if (node.nodeType === 1) {\n              handler.end(node.nodeName.toLowerCase());\n            }\n          }\n        }\n      }\n      node = nextNode;\n    }\n\n    while ((node = inertBodyElement.firstChild)) {\n      inertBodyElement.removeChild(node);\n    }\n  }\n\n  function attrToMap(attrs) {\n    var map = {};\n    for (var i = 0, ii = attrs.length; i < ii; i++) {\n      var attr = attrs[i];\n      map[attr.name] = attr.value;\n    }\n    return map;\n  }\n\n\n  /**\n   * Escapes all potentially dangerous characters, so that the\n   * resulting string can be safely inserted into attribute or\n   * element text.\n   * @param value\n   * @returns {string} escaped text\n   */\n  function encodeEntities(value) {\n    return value.\n      replace(/&/g, '&amp;').\n      replace(SURROGATE_PAIR_REGEXP, function(value) {\n        var hi = value.charCodeAt(0);\n        var low = value.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n      }).\n      replace(NON_ALPHANUMERIC_REGEXP, function(value) {\n        return '&#' + value.charCodeAt(0) + ';';\n      }).\n      replace(/</g, '&lt;').\n      replace(/>/g, '&gt;');\n  }\n\n  /**\n   * create an HTML/XML writer which writes to buffer\n   * @param {Array} buf use buf.join('') to get out sanitized html string\n   * @returns {object} in the form of {\n   *     start: function(tag, attrs) {},\n   *     end: function(tag) {},\n   *     chars: function(text) {},\n   *     comment: function(text) {}\n   * }\n   */\n  function htmlSanitizeWriterImpl(buf, uriValidator) {\n    var ignoreCurrentElement = false;\n    var out = bind(buf, buf.push);\n    return {\n      start: function(tag, attrs) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && blockedElements[tag]) {\n          ignoreCurrentElement = tag;\n        }\n        if (!ignoreCurrentElement && validElements[tag] === true) {\n          out('<');\n          out(tag);\n          forEach(attrs, function(value, key) {\n            var lkey = lowercase(key);\n            var isImage = (tag === 'img' && lkey === 'src') || (lkey === 'background');\n            if (validAttrs[lkey] === true &&\n              (uriAttrs[lkey] !== true || uriValidator(value, isImage))) {\n              out(' ');\n              out(key);\n              out('=\"');\n              out(encodeEntities(value));\n              out('\"');\n            }\n          });\n          out('>');\n        }\n      },\n      end: function(tag) {\n        tag = lowercase(tag);\n        if (!ignoreCurrentElement && validElements[tag] === true && voidElements[tag] !== true) {\n          out('</');\n          out(tag);\n          out('>');\n        }\n        // eslint-disable-next-line eqeqeq\n        if (tag == ignoreCurrentElement) {\n          ignoreCurrentElement = false;\n        }\n      },\n      chars: function(chars) {\n        if (!ignoreCurrentElement) {\n          out(encodeEntities(chars));\n        }\n      }\n    };\n  }\n\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1' attribute to declare\n   * ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo'). This is undesirable since we don't want\n   * to allow any of these custom attributes. This method strips them all.\n   *\n   * @param node Root element to process\n   */\n  function stripCustomNsAttrs(node) {\n    while (node) {\n      if (node.nodeType === window.Node.ELEMENT_NODE) {\n        var attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          var attrNode = attrs[i];\n          var attrName = attrNode.name.toLowerCase();\n          if (attrName === 'xmlns:ns1' || attrName.lastIndexOf('ns1:', 0) === 0) {\n            node.removeAttributeNode(attrNode);\n            i--;\n            l--;\n          }\n        }\n      }\n\n      var nextNode = node.firstChild;\n      if (nextNode) {\n        stripCustomNsAttrs(nextNode);\n      }\n\n      node = getNonDescendant('nextSibling', node);\n    }\n  }\n\n  function getNonDescendant(propName, node) {\n    // An element is clobbered if its `propName` property points to one of its descendants\n    var nextNode = node[propName];\n    if (nextNode && nodeContains.call(node, nextNode)) {\n      throw $sanitizeMinErr('elclob', 'Failed to sanitize html because the element is clobbered: {0}', node.outerHTML || node.outerText);\n    }\n    return nextNode;\n  }\n}\n\nfunction sanitizeText(chars) {\n  var buf = [];\n  var writer = htmlSanitizeWriter(buf, noop);\n  writer.chars(chars);\n  return buf.join('');\n}\n\n\n// define ngSanitize module and register $sanitize service\nangular.module('ngSanitize', [])\n  .provider('$sanitize', $SanitizeProvider)\n  .info({ angularVersion: '1.6.5' });\n\n/**\n * @ngdoc filter\n * @name linky\n * @kind function\n *\n * @description\n * Finds links in text input and turns them into html links. Supports `http/https/ftp/mailto` and\n * plain email address links.\n *\n * Requires the {@link ngSanitize `ngSanitize`} module to be installed.\n *\n * @param {string} text Input text.\n * @param {string} target Window (`_blank|_self|_parent|_top`) or named frame to open links in.\n * @param {object|function(url)} [attributes] Add custom attributes to the link element.\n *\n *    Can be one of:\n *\n *    - `object`: A map of attributes\n *    - `function`: Takes the url as a parameter and returns a map of attributes\n *\n *    If the map of attributes contains a value for `target`, it overrides the value of\n *    the target parameter.\n *\n *\n * @returns {string} Html-linkified and {@link $sanitize sanitized} text.\n *\n * @usage\n   <span ng-bind-html=\"linky_expression | linky\"></span>\n *\n * @example\n   <example module=\"linkyExample\" deps=\"angular-sanitize.js\" name=\"linky-filter\">\n     <file name=\"index.html\">\n       <div ng-controller=\"ExampleController\">\n       Snippet: <textarea ng-model=\"snippet\" cols=\"60\" rows=\"3\"></textarea>\n       <table>\n         <tr>\n           <th>Filter</th>\n           <th>Source</th>\n           <th>Rendered</th>\n         </tr>\n         <tr id=\"linky-filter\">\n           <td>linky filter</td>\n           <td>\n             <pre>&lt;div ng-bind-html=\"snippet | linky\"&gt;<br>&lt;/div&gt;</pre>\n           </td>\n           <td>\n             <div ng-bind-html=\"snippet | linky\"></div>\n           </td>\n         </tr>\n         <tr id=\"linky-target\">\n          <td>linky target</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_blank'\"></div>\n          </td>\n         </tr>\n         <tr id=\"linky-custom-attributes\">\n          <td>linky custom attributes</td>\n          <td>\n            <pre>&lt;div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"&gt;<br>&lt;/div&gt;</pre>\n          </td>\n          <td>\n            <div ng-bind-html=\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\"></div>\n          </td>\n         </tr>\n         <tr id=\"escaped-html\">\n           <td>no filter</td>\n           <td><pre>&lt;div ng-bind=\"snippet\"&gt;<br>&lt;/div&gt;</pre></td>\n           <td><div ng-bind=\"snippet\"></div></td>\n         </tr>\n       </table>\n     </file>\n     <file name=\"script.js\">\n       angular.module('linkyExample', ['ngSanitize'])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.snippet =\n             'Pretty text with some links:\\n' +\n             'http://angularjs.org/,\\n' +\n             'mailto:us@somewhere.org,\\n' +\n             'another@somewhere.org,\\n' +\n             'and one more: ftp://127.0.0.1/.';\n           $scope.snippetWithSingleURL = 'http://angularjs.org/';\n         }]);\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should linkify the snippet with urls', function() {\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(4);\n       });\n\n       it('should not linkify snippet without the linky filter', function() {\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText()).\n             toBe('Pretty text with some links: http://angularjs.org/, mailto:us@somewhere.org, ' +\n                  'another@somewhere.org, and one more: ftp://127.0.0.1/.');\n         expect(element.all(by.css('#escaped-html a')).count()).toEqual(0);\n       });\n\n       it('should update', function() {\n         element(by.model('snippet')).clear();\n         element(by.model('snippet')).sendKeys('new http://link.');\n         expect(element(by.id('linky-filter')).element(by.binding('snippet | linky')).getText()).\n             toBe('new http://link.');\n         expect(element.all(by.css('#linky-filter a')).count()).toEqual(1);\n         expect(element(by.id('escaped-html')).element(by.binding('snippet')).getText())\n             .toBe('new http://link.');\n       });\n\n       it('should work with the target property', function() {\n        expect(element(by.id('linky-target')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_blank'\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-target a')).getAttribute('target')).toEqual('_blank');\n       });\n\n       it('should optionally add custom attributes', function() {\n        expect(element(by.id('linky-custom-attributes')).\n            element(by.binding(\"snippetWithSingleURL | linky:'_self':{rel: 'nofollow'}\")).getText()).\n            toBe('http://angularjs.org/');\n        expect(element(by.css('#linky-custom-attributes a')).getAttribute('rel')).toEqual('nofollow');\n       });\n     </file>\n   </example>\n */\nangular.module('ngSanitize').filter('linky', ['$sanitize', function($sanitize) {\n  var LINKY_URL_REGEXP =\n        /((ftp|https?):\\/\\/|(www\\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\\S*[^\\s.;,(){}<>\"\\u201d\\u2019]/i,\n      MAILTO_REGEXP = /^mailto:/i;\n\n  var linkyMinErr = angular.$$minErr('linky');\n  var isDefined = angular.isDefined;\n  var isFunction = angular.isFunction;\n  var isObject = angular.isObject;\n  var isString = angular.isString;\n\n  return function(text, target, attributes) {\n    if (text == null || text === '') return text;\n    if (!isString(text)) throw linkyMinErr('notstring', 'Expected string but received: {0}', text);\n\n    var attributesFn =\n      isFunction(attributes) ? attributes :\n      isObject(attributes) ? function getAttributesObject() {return attributes;} :\n      function getEmptyAttributesObject() {return {};};\n\n    var match;\n    var raw = text;\n    var html = [];\n    var url;\n    var i;\n    while ((match = raw.match(LINKY_URL_REGEXP))) {\n      // We can not end in these as they are sometimes found at the end of the sentence\n      url = match[0];\n      // if we did not match ftp/http/www/mailto then assume mailto\n      if (!match[2] && !match[4]) {\n        url = (match[3] ? 'http://' : 'mailto:') + url;\n      }\n      i = match.index;\n      addText(raw.substr(0, i));\n      addLink(url, match[0].replace(MAILTO_REGEXP, ''));\n      raw = raw.substring(i + match[0].length);\n    }\n    addText(raw);\n    return $sanitize(html.join(''));\n\n    function addText(text) {\n      if (!text) {\n        return;\n      }\n      html.push(sanitizeText(text));\n    }\n\n    function addLink(url, text) {\n      var key, linkAttributes = attributesFn(url);\n      html.push('<a ');\n\n      for (key in linkAttributes) {\n        html.push(key + '=\"' + linkAttributes[key] + '\" ');\n      }\n\n      if (isDefined(target) && !('target' in linkAttributes)) {\n        html.push('target=\"',\n                  target,\n                  '\" ');\n      }\n      html.push('href=\"',\n                url.replace(/\"/g, '&quot;'),\n                '\">');\n      addText(text);\n      html.push('</a>');\n    }\n  };\n}]);\n\n\n})(window, window.angular);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-sanitize/angular-sanitize.js\n// module id = 68\n// module chunks = 0","module.exports = \"<div ng-if=$ctrl.ready> <title ng-bind-html=$ctrl.post.title.rendered></title> <featured-media> <img ng-if=$ctrl.media ng-src={{$ctrl.media.source_url}}> <i ng-if=!$ctrl.media class=\\\"fa fa-picture-o\\\" aria-hidden=true></i> </featured-media> <excerpt ng-bind-html=$ctrl.excerpt> </excerpt> <a ui-sref=\\\"post({ id: $ctrl.post.id })\\\">Lire la suite</a> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-wordpress/tmpl/jlg-post-excerpt.html\n// module id = 70\n// module chunks = 0","module.exports = \"<div ng-if=$ctrl.ready> <title ng-bind-html=$ctrl.page.title></title> <content ng-bind-html=$ctrl.page.content.rendered> </content> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-wordpress/tmpl/jlg-page.html\n// module id = 71\n// module chunks = 0","module.exports = \"<site-id>{{$ctrl.jlgWordpress.info.name}}</site-id> <tagline ng-bind-html=$ctrl.jlgWordpress.info.description></tagline> <menu> <item><a ui-sref=home>Home</a></item> <item><a ui-sref=products>Products</a></item> <item><a ui-sref=services>Services</a></item> <item><a ui-sref=contact>Contact</a></item> </menu> <hr/> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-layout/tmpl/jlg-header.html\n// module id = 73\n// module chunks = 0","module.exports = \"<ui-view></ui-view> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-layout/tmpl/jlg-body.html\n// module id = 74\n// module chunks = 0","module.exports = \"<hr/> Footer <br/> Wordpress URL: <input ng-model=$ctrl.jlgWordpress.url><button ng-click=$ctrl.jlgWordpress.init()>Update</button><br/> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-layout/tmpl/jlg-footer.html\n// module id = 75\n// module chunks = 0","import '@uirouter/angularjs';\r\nimport '../jlg-wordpress/jlg-wordpress.js';\r\n\r\nconst app = angular.module('jlg-route', [\r\n\t'ui.router',\r\n\t'jlg-wordpress',\r\n]);\r\n\r\nimport jlgHomeUrl from './tmpl/jlg-home.html';\r\nimport jlgProductsUrl from './tmpl/jlg-products.html';\r\nimport jlgServicesUrl from './tmpl/jlg-services.html';\r\nimport jlgContactUrl from './tmpl/jlg-contact.html';\r\nimport jlgPostUrl from './tmpl/jlg-post.html';\r\n\r\napp.config(function ($locationProvider, $urlRouterProvider, $stateProvider) {\r\n\r\n\t$locationProvider\r\n\t\t.html5Mode(true);\r\n\r\n\t$stateProvider.state({\r\n\t\tname: 'home',\r\n\t\turl: '/',\r\n\t\ttemplate: jlgHomeUrl\r\n\t});\r\n\t$stateProvider.state({\r\n\t\tname: 'products',\r\n\t\turl: '/products',\r\n\t\ttemplate: jlgProductsUrl,\r\n\t});\r\n\t$stateProvider.state({\r\n\t\tname: 'services',\r\n\t\turl: '/services',\r\n\t\ttemplate: jlgServicesUrl\r\n\t});\r\n\t$stateProvider.state({\r\n\t\tname: 'contact',\r\n\t\turl: '/contact',\r\n\t\ttemplate: jlgContactUrl\r\n\t});\r\n\t$stateProvider.state({\r\n\t\tname: 'post',\r\n\t\turl: '/posts/{id}',\r\n\t\ttemplate: jlgPostUrl,\r\n\t\tcontroller: function PostCtrl($log, $stateParams, jlgWordpress) {\r\n\t\t\t'ngInject';\r\n\t\t\t$log.debug('PostCtrl', arguments);\r\n\t\t\tconst ctrl = this;\r\n\t\t\tjlgWordpress.ready().then(function() {\r\n\t\t\t\t$log.debug('PostCtrl ready', $stateParams, jlgWordpress.posts);\r\n\t\t\t\tctrl.post = jlgWordpress.posts.find(n => n.id === +$stateParams.id);\r\n\t\t\t\t$log.debug('ctrl.post', ctrl.post);\r\n\t\t\t\tctrl.media = jlgWordpress.medias.find(n => n.id === ctrl.post.featured_media);\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t},\r\n\t\tcontrollerAs: '$ctrl',\r\n\t});\r\n\r\n\t$urlRouterProvider.otherwise('/');\r\n});\n\n\n// WEBPACK FOOTER //\n// ./app/jlg-route/jlg-route.js","\"use strict\";\n/**\n * Main entry point for angular 1.x build\n * @module ng1\n */ /** */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./services\"));\n__export(require(\"./statebuilders/views\"));\n__export(require(\"./stateProvider\"));\n__export(require(\"./urlRouterProvider\"));\nrequire(\"./injectables\");\nrequire(\"./directives/stateDirectives\");\nrequire(\"./stateFilters\");\nrequire(\"./directives/viewDirective\");\nrequire(\"./viewScroll\");\nexports.default = \"ui.router\";\nvar core = require(\"@uirouter/core\");\nexports.core = core;\n__export(require(\"@uirouter/core\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/index.js\n// module id = 77\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./param\"));\n__export(require(\"./paramTypes\"));\n__export(require(\"./stateParams\"));\n__export(require(\"./paramType\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/params/index.js\n// module id = 78\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module path */ /** for typedoc */\n__export(require(\"./pathNode\"));\n__export(require(\"./pathFactory\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/path/index.js\n// module id = 79\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module resolve */ /** for typedoc */\n__export(require(\"./interface\"));\n__export(require(\"./resolvable\"));\n__export(require(\"./resolveContext\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/resolve/index.js\n// module id = 80\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./stateBuilder\"));\n__export(require(\"./stateObject\"));\n__export(require(\"./stateMatcher\"));\n__export(require(\"./stateQueueManager\"));\n__export(require(\"./stateRegistry\"));\n__export(require(\"./stateService\"));\n__export(require(\"./targetState\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/state/index.js\n// module id = 81\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** */\nvar transition_1 = require(\"../transition/transition\");\nvar router_1 = require(\"../router\");\nfunction addCoreResolvables(trans) {\n    trans.addResolvable({ token: router_1.UIRouter, deps: [], resolveFn: function () { return trans.router; }, data: trans.router }, \"\");\n    trans.addResolvable({ token: transition_1.Transition, deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$transition$', deps: [], resolveFn: function () { return trans; }, data: trans }, \"\");\n    trans.addResolvable({ token: '$stateParams', deps: [], resolveFn: function () { return trans.params(); }, data: trans.params() }, \"\");\n    trans.entering().forEach(function (state) {\n        trans.addResolvable({ token: '$state$', deps: [], resolveFn: function () { return state; }, data: state }, state);\n    });\n}\nexports.registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\n//# sourceMappingURL=coreResolvables.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/coreResolvables.js\n// module id = 82\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** */\nvar predicates_1 = require(\"../common/predicates\");\nvar coreservices_1 = require(\"../common/coreservices\");\nvar targetState_1 = require(\"../state/targetState\");\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof targetState_1.TargetState)\n            return result;\n        if (predicates_1.isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (predicates_1.isFunction(redirect)) {\n        return coreservices_1.services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexports.registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/redirectTo.js\n// module id = 83\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexports.registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexports.registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexports.registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/onEnterExitRetain.js\n// module id = 84\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */\n/** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar resolveContext_1 = require(\"../resolve/resolveContext\");\nvar hof_1 = require(\"../common/hof\");\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath);`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .resolvePath(\"EAGER\", trans)\n        .then(common_1.noop);\n};\nexports.registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: 1000 });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState);`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new resolveContext_1.ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath(\"LAZY\", trans)\n        .then(common_1.noop);\n};\nexports.registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: hof_1.val(true) }, lazyResolveState, { priority: 1000 });\n};\n//# sourceMappingURL=resolve.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/resolve.js\n// module id = 85\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module hooks */ /** for typedoc */\nvar common_1 = require(\"../common/common\");\nvar coreservices_1 = require(\"../common/coreservices\");\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = coreservices_1.services.$q;\n    var enteringViews = transition.views(\"entering\");\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(common_1.noop);\n};\nexports.registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views(\"entering\");\n    var exitingViews = transition.views(\"exiting\");\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexports.registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/views.js\n// module id = 86\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar common_1 = require(\"../common/common\");\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        common_1.copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexports.registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/updateGlobals.js\n// module id = 87\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexports.registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/url.js\n// module id = 88\n// module chunks = 0","\"use strict\";\n/** @module hooks */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar trace_1 = require(\"../common/trace\");\nvar rejectFactory_1 = require(\"../transition/rejectFactory\");\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace_1.trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return rejectFactory_1.Rejection.ignored().toPromise();\n}\nexports.registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/ignoredTransition.js\n// module id = 89\n// module chunks = 0","\"use strict\";\n/** @module hooks */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error());\n    }\n}\nexports.registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/hooks/invalidTransition.js\n// module id = 90\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Transition subsystem\n *\n * This module contains APIs related to a Transition.\n *\n * See:\n * - [[TransitionService]]\n * - [[Transition]]\n * - [[HookFn]], [[TransitionHookFn]], [[TransitionStateHookFn]], [[HookMatchCriteria]], [[HookResult]]\n *\n * @coreapi\n * @preferred\n * @module transition\n */ /** for typedoc */\n__export(require(\"./interface\"));\n__export(require(\"./hookBuilder\"));\n__export(require(\"./hookRegistry\"));\n__export(require(\"./rejectFactory\"));\n__export(require(\"./transition\"));\n__export(require(\"./transitionHook\"));\n__export(require(\"./transitionEventType\"));\n__export(require(\"./transitionService\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/transition/index.js\n// module id = 91\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./urlMatcher\"));\n__export(require(\"./urlMatcherFactory\"));\n__export(require(\"./urlRouter\"));\n__export(require(\"./urlRule\"));\n__export(require(\"./urlService\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/url/index.js\n// module id = 92\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./view\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/view/index.js\n// module id = 93\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\n__export(require(\"./vanilla/index\"));\n//# sourceMappingURL=vanilla.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla.js\n// module id = 94\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./q\"));\n__export(require(\"./injector\"));\n__export(require(\"./baseLocationService\"));\n__export(require(\"./hashLocationService\"));\n__export(require(\"./memoryLocationService\"));\n__export(require(\"./pushStateLocationService\"));\n__export(require(\"./memoryLocationConfig\"));\n__export(require(\"./browserLocationConfig\"));\n__export(require(\"./utils\"));\n__export(require(\"./plugins\"));\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/index.js\n// module id = 95\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @internalapi\n * @module vanilla\n */\n/** */\nvar browserLocationConfig_1 = require(\"./browserLocationConfig\");\nvar hashLocationService_1 = require(\"./hashLocationService\");\nvar utils_1 = require(\"./utils\");\nvar pushStateLocationService_1 = require(\"./pushStateLocationService\");\nvar memoryLocationService_1 = require(\"./memoryLocationService\");\nvar memoryLocationConfig_1 = require(\"./memoryLocationConfig\");\nvar injector_1 = require(\"./injector\");\nvar q_1 = require(\"./q\");\nvar coreservices_1 = require(\"../common/coreservices\");\nfunction servicesPlugin(router) {\n    coreservices_1.services.$injector = injector_1.$injector;\n    coreservices_1.services.$q = q_1.$q;\n    return { name: \"vanilla.services\", $q: q_1.$q, $injector: injector_1.$injector, dispose: function () { return null; } };\n}\nexports.servicesPlugin = servicesPlugin;\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexports.hashLocationPlugin = utils_1.locationPluginFactory('vanilla.hashBangLocation', false, hashLocationService_1.HashLocationService, browserLocationConfig_1.BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexports.pushStateLocationPlugin = utils_1.locationPluginFactory(\"vanilla.pushStateLocation\", true, pushStateLocationService_1.PushStateLocationService, browserLocationConfig_1.BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexports.memoryLocationPlugin = utils_1.locationPluginFactory(\"vanilla.memoryLocation\", false, memoryLocationService_1.MemoryLocationService, memoryLocationConfig_1.MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/vanilla/plugins.js\n// module id = 96\n// module chunks = 0","\"use strict\";\n/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @coreapi\n * @preferred\n * @module core\n */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internalapi */\nvar UIRouterPluginBase = (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\nexports.UIRouterPluginBase = UIRouterPluginBase;\n//# sourceMappingURL=interface.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/node_modules/@uirouter/core/lib/interface.js\n// module id = 97\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module view */\n/** for typedoc */\nvar angular_1 = require(\"./angular\");\nvar core_1 = require(\"@uirouter/core\");\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = angular_1.ng.version.minor < 3;\n        /** @hidden */ this.$get = ['$http', '$templateCache', '$injector', function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            }];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    ;\n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = \"<ui-view></ui-view>\";\n        var asTemplate = function (result) { return core_1.services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return core_1.services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return (core_1.isDefined(config.template) ? asTemplate(this.fromString(config.template, params)) :\n            core_1.isDefined(config.templateUrl) ? asTemplate(this.fromUrl(config.templateUrl, params)) :\n                core_1.isDefined(config.templateProvider) ? asTemplate(this.fromProvider(config.templateProvider, params, context)) :\n                    core_1.isDefined(config.component) ? asComponent(config.component) :\n                        core_1.isDefined(config.componentProvider) ? asComponent(this.fromComponentProvider(config.componentProvider, params, context)) :\n                            asTemplate(defaultTemplate));\n    };\n    ;\n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return core_1.isFunction(template) ? template(params) : template;\n    };\n    ;\n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (core_1.isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http.get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    ;\n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    ;\n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = core_1.services.$injector.annotate(provider);\n        var providerFn = core_1.isArray(provider) ? core_1.tail(provider) : provider;\n        var resolvable = new core_1.Resolvable(\"\", providerFn, deps);\n        return resolvable.get(context);\n    };\n    ;\n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = angular_1.ng.version.minor >= 3 ? \"::\" : \"\";\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = core_1.kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = fn && core_1.services.$injector.annotate(fn) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = core_1.isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(\",\") + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component).map(attributeTpl).join(\" \");\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    ;\n    return TemplateFactory;\n}());\nexports.TemplateFactory = TemplateFactory;\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = core_1.services.$injector.get(name + \"Directive\"); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(core_1.unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (core_1.isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) { return Object.keys(bindingsObj || {})\n    .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n    .filter(function (tuple) { return core_1.isDefined(tuple) && core_1.isArray(tuple[1]); })\n    .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); }); };\n//# sourceMappingURL=templateFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/templateFactory.js\n// module id = 98\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** */\nvar core_1 = require(\"@uirouter/core\");\nvar services_1 = require(\"../services\");\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n */\nexports.getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(state, parentFn) {\n        var hook = state[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new core_1.ResolveContext(trans.treeChanges(pathname));\n            var locals = core_1.extend(services_1.getLocals(resolveContext), { $state$: state, $transition$: trans });\n            return core_1.services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n//# sourceMappingURL=onEnterExitRetain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/statebuilders/onEnterExitRetain.js\n// module id = 99\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@uirouter/core\");\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n */\nvar Ng1LocationServices = (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = core_1.val($locationProvider);\n        core_1.createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return core_1.removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = core_1.isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (newUrl)\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on(\"$locationChangeSuccess\", function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = core_1.val($location);\n        var _browser = core_1.val($browser);\n        // Bind these LocationService functions to $location\n        core_1.createProxyFunctions(_loc, this, _loc, [\"replace\", \"path\", \"search\", \"hash\"]);\n        // Bind these LocationConfig functions to $location\n        core_1.createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n        // Bind these LocationConfig functions to $browser\n        core_1.createProxyFunctions(_browser, this, _browser, ['baseHref']);\n    };\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (val) {\n            return val != null ? val.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : val;\n        };\n        pathType.decode = function (val) {\n            return val != null ? val.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : val;\n        };\n    };\n    return Ng1LocationServices;\n}());\nexports.Ng1LocationServices = Ng1LocationServices;\n//# sourceMappingURL=locationServices.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/locationServices.js\n// module id = 100\n// module chunks = 0","\"use strict\";\n/**\n * # Angular 1 injectable services\n *\n * This is a list of the objects which can be injected using angular's injector.\n *\n * There are three different kind of injectable objects:\n *\n * ## **Provider** objects\n * #### injectable into a `.config()` block during configtime\n *\n * - [[$uiRouterProvider]]: The UI-Router instance\n * - [[$stateProvider]]: State registration\n * - [[$transitionsProvider]]: Transition hooks\n * - [[$urlServiceProvider]]: All URL related public APIs\n *\n * - [[$uiViewScrollProvider]]: Disable ui-router view scrolling\n * - [[$urlRouterProvider]]: (deprecated) Url matching rules\n * - [[$urlMatcherFactoryProvider]]: (deprecated) Url parsing config\n *\n * ## **Service** objects\n * #### injectable globally during runtime\n *\n * - [[$uiRouter]]: The UI-Router instance\n * - [[$trace]]: Enable transition trace/debug\n * - [[$transitions]]: Transition hooks\n * - [[$state]]: Imperative state related APIs\n * - [[$stateRegistry]]: State registration\n * - [[$urlService]]: All URL related public APIs\n * - [[$uiRouterGlobals]]: Global variables\n * - [[$uiViewScroll]]: Scroll an element into view\n *\n * - [[$stateParams]]: (deprecated) Global state param values\n * - [[$urlRouter]]: (deprecated) URL synchronization\n * - [[$urlMatcherFactory]]: (deprecated) URL parsing config\n *\n * ## **Per-Transition** objects\n *\n * - These kind of objects are injectable into:\n *   - Resolves ([[Ng1StateDeclaration.resolve]]),\n *   - Transition Hooks ([[TransitionService.onStart]], etc),\n *   - Routed Controllers ([[Ng1ViewDeclaration.controller]])\n *\n * #### Different instances are injected based on the [[Transition]]\n *\n * - [[$transition$]]: The current Transition object\n * - [[$stateParams]]: State param values for pending Transition (deprecated)\n * - Any resolve data defined using [[Ng1StateDeclaration.resolve]]\n *\n * @ng1api\n * @preferred\n * @module injectables\n */ /** */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * The current (or pending) State Parameters\n *\n * An injectable global **Service Object** which holds the state parameters for the latest **SUCCESSFUL** transition.\n *\n * The values are not updated until *after* a `Transition` successfully completes.\n *\n * **Also:** an injectable **Per-Transition Object** object which holds the pending state parameters for the pending `Transition` currently running.\n *\n * ### Deprecation warning:\n *\n * The value injected for `$stateParams` is different depending on where it is injected.\n *\n * - When injected into an angular service, the object injected is the global **Service Object** with the parameter values for the latest successful `Transition`.\n * - When injected into transition hooks, resolves, or view controllers, the object is the **Per-Transition Object** with the parameter values for the running `Transition`.\n *\n * Because of these confusing details, this service is deprecated.\n *\n * ### Instead of using the global `$stateParams` service object,\n * inject [[$uiRouterGlobals]] and use [[UIRouterGlobals.params]]\n *\n * ```js\n * MyService.$inject = ['$uiRouterGlobals'];\n * function MyService($uiRouterGlobals) {\n *   return {\n *     paramValues: function () {\n *       return $uiRouterGlobals.params;\n *     }\n *   }\n * }\n * ```\n *\n * ### Instead of using the per-transition `$stateParams` object,\n * inject the current `Transition` (as [[$transition$]]) and use [[Transition.params]]\n *\n * ```js\n * MyController.$inject = ['$transition$'];\n * function MyController($transition$) {\n *   var username = $transition$.params().username;\n *   // .. do something with username\n * }\n * ```\n *\n * ---\n *\n * This object can be injected into other services.\n *\n * #### Deprecated Example:\n * ```js\n * SomeService.$inject = ['$http', '$stateParams'];\n * function SomeService($http, $stateParams) {\n *   return {\n *     getUser: function() {\n *       return $http.get('/api/users/' + $stateParams.username);\n *     }\n *   }\n * };\n * angular.service('SomeService', SomeService);\n * ```\n * @deprecated\n */\nvar $stateParams;\n/**\n * Global UI-Router variables\n *\n * The router global state as a **Service Object** (injectable during runtime).\n *\n * This object contains globals such as the current state and current parameter values.\n */\nvar $uiRouterGlobals;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Service Object** (injectable during runtime).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouterProvider]] for injection during angular config time.\n */\nvar $uiRouter;\n/**\n * The UI-Router instance\n *\n * The [[UIRouter]] singleton (the router instance) as a **Provider Object** (injectable during config phase).\n *\n * This object is the UI-Router singleton instance, created by angular dependency injection during application bootstrap.\n * It has references to the other UI-Router services\n *\n * #### Note: This object is also exposed as [[$uiRouter]] for injection during runtime.\n */\nvar $uiRouterProvider;\n/**\n * Transition debug/tracing\n *\n * The [[Trace]] singleton as a **Service Object** (injectable during runtime).\n *\n * Enables or disables Transition tracing which can help to debug issues.\n */\nvar $trace;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitionsProvider]] for injection during the config phase.\n */\nvar $transitions;\n/**\n * The Transition Service\n *\n * The [[TransitionService]] singleton as a **Provider Object** (injectable during config phase)\n *\n * This angular service exposes the [[TransitionService]] singleton, which is primarily\n * used to register global transition hooks.\n *\n * #### Note: This object is also exposed as [[$transitions]] for injection during runtime.\n */\nvar $transitionsProvider;\n/**\n * The current [[Transition]] object\n *\n * The current [[Transition]] object as a **Per-Transition Object** (injectable into Resolve, Hooks, Controllers)\n *\n * This object returns information about the current transition, including:\n *\n * - To/from states\n * - To/from parameters\n * - Transition options\n * - States being entered, exited, and retained\n * - Resolve data\n * - A Promise for the transition\n * - Any transition failure information\n * - An injector for both Service and Per-Transition Objects\n */\nvar $transition$;\n/**\n * The State Service\n *\n * The [[StateService]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service used to manage and query information on registered states.\n * It exposes state related APIs including:\n *\n * - Start a [[Transition]]\n * - Imperatively lazy load states\n * - Check if a state is currently active\n * - Look up states by name\n * - Build URLs for a state+parameters\n * - Configure the global Transition error handler\n *\n * This angular service exposes the [[StateService]] singleton.\n */\nvar $state;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistryProvider]] for injection during the config phase.\n */\nvar $stateRegistry;\n/**\n * The State Registry\n *\n * The [[StateRegistry]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to register/deregister states.\n * It has state registration related APIs including:\n *\n * - Register/deregister states\n * - Listen for state registration/deregistration\n * - Get states by name\n * - Add state decorators (to customize the state creation process)\n *\n * #### Note: This object is also exposed as [[$stateRegistry]] for injection during runtime.\n */\nvar $stateRegistryProvider;\n/**\n * The View Scroll provider\n *\n * The [[UIViewScrollProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[UIViewScrollProvider]] singleton and is\n * used to disable UI-Router's scroll behavior.\n */\nvar $uiViewScrollProvider;\n/**\n * The View Scroll function\n *\n * The View Scroll function as a **Service Object** (injectable during runtime).\n *\n * This is a function that scrolls an element into view.\n * The element is scrolled after a `$timeout` so the DOM has time to refresh.\n *\n * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\n * this can be enabled by calling [[UIViewScrollProvider.useAnchorScroll]].\n *\n * Note: this function is used by the [[directives.uiView]] when the `autoscroll` expression evaluates to true.\n */\nvar $uiViewScroll;\n/**\n * The StateProvider\n *\n * An angular1-only [[StateProvider]] as a **Provider Object** (injectable during config time).\n *\n * This angular service exposes the [[StateProvider]] singleton.\n *\n * The `StateProvider` is primarily used to register states or add custom state decorators.\n *\n * ##### Note: This provider is a ng1 vestige.\n * It is a passthrough to [[$stateRegistry]] and [[$state]].\n */\nvar $stateProvider;\n/**\n * The URL Service Provider\n *\n * The [[UrlService]] singleton as a **Provider Object** (injectable during the angular config phase).\n *\n * A service used to configure and interact with the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during runtime as [[$urlService]].\n */\nvar $urlServiceProvider;\n/**\n * The URL Service\n *\n * The [[UrlService]] singleton as a **Service Object** (injectable during runtime).\n *\n * Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n *\n * Used to configure the URL.\n * It has URL related APIs including:\n *\n * - register custom Parameter types `UrlService.config.type` ([[UrlConfigApi.type]])\n * - add URL rules: `UrlService.rules.when` ([[UrlRulesApi.when]])\n * - configure behavior when no url matches: `UrlService.rules.otherwise` ([[UrlRulesApi.otherwise]])\n * - delay initial URL synchronization [[UrlService.deferIntercept]].\n * - get or set the current url: [[UrlService.url]]\n *\n * ##### Note: This service can also be injected during the config phase as [[$urlServiceProvider]].\n */\nvar $urlService;\n/**\n * The URL Router Provider\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlServiceProvider]] instead.\n *\n * The [[UrlRouter]] singleton as a **Provider Object** (injectable during config time).\n *\n * #### Note: This object is also exposed as [[$urlRouter]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlRouterProvider;\n/**\n * The Url Router\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlRouter]] singleton as a **Service Object** (injectable during runtime).\n *\n * #### Note: This object is also exposed as [[$urlRouterProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlRouter;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Service Object** (injectable during runtime).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactoryProvider]] for injection during angular config time.\n *\n * @deprecated\n */\nvar $urlMatcherFactory;\n/**\n * The URL Matcher Factory\n *\n * ### Deprecation warning: This object is now considered internal. Use [[$urlService]] instead.\n *\n * The [[UrlMatcherFactory]] singleton as a **Provider Object** (injectable during config time).\n *\n * This service is used to set url mapping options, define custom parameter types, and create [[UrlMatcher]] objects.\n *\n * #### Note: This object is also exposed as [[$urlMatcherFactory]] for injection during runtime.\n *\n * @deprecated\n */\nvar $urlMatcherFactoryProvider;\n//# sourceMappingURL=injectables.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/injectables.js\n// module id = 101\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @ng1api\n * @preferred\n * @module directives\n */ /** for typedoc */\nvar angular_1 = require(\"../angular\");\nvar core_1 = require(\"@uirouter/core\");\n/** @hidden */\nfunction parseStateRef(ref) {\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/), parsed;\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, \" \").match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = core_1.parse('$cfg.path')($uiView);\n    return path ? core_1.tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = core_1.extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === \"FORM\";\n    return {\n        attr: isForm ? \"action\" : (isSvg ? 'xlink:href' : 'href'),\n        isAnchor: el.prop(\"tagName\").toUpperCase() === \"A\",\n        clickable: !isForm\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition = $timeout(function () {\n                $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount-- <= 0)\n                    $timeout.cancel(transition);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: \"sref\"\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!core_1.isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSref;\nuiSref = ['$uiRouter', '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val) {\n                        rawDef.uiStateParams = core_1.extend({}, val);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = core_1.extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiState;\nuiState = ['$uiRouter', '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return (acc[attr] = core_1.noop, acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            }\n        };\n    }];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the <div> and <a> elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActive;\nuiSrefActive = ['$state', '$stateParams', '$interpolate', '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: \"A\",\n            controller: ['$scope', '$element', '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [], activeEqClass, uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    if (core_1.isObject(uiSrefActive)) {\n                        core_1.forEach(uiSrefActive, function (stateOrName, activeClass) {\n                            if (core_1.isString(stateOrName)) {\n                                var ref = parseStateRef(stateOrName);\n                                addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                            }\n                        });\n                    }\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (core_1.isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, core_1.noop);\n                    }\n                    $scope.$on('$stateChangeSuccess', update);\n                    $scope.$on('$destroy', $uiRouter.transitionService.onStart({}, updateAfterTransition));\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            core_1.removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) {\n                            return str.split(/\\s/).filter(core_1.identity);\n                        };\n                        var getClasses = function (stateList) {\n                            return stateList.map(function (x) { return x.activeClass; }).map(splitClasses).reduce(core_1.unnestR, []);\n                        };\n                        var allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(core_1.uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(core_1.uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !core_1.inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                }]\n        };\n    }];\nangular_1.ng.module('ui.router.state')\n    .directive('uiSref', uiSref)\n    .directive('uiSrefActive', uiSrefActive)\n    .directive('uiSrefActiveEq', uiSrefActive)\n    .directive('uiState', uiState);\n//# sourceMappingURL=stateDirectives.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/directives/stateDirectives.js\n// module id = 102\n// module chunks = 0","\"use strict\";\n/** @module ng1 */ /** for typedoc */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular_1 = require(\"./angular\");\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nfunction $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\nexports.$IsStateFilter = $IsStateFilter;\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nfunction $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nexports.$IncludedByStateFilter = $IncludedByStateFilter;\nangular_1.ng.module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n//# sourceMappingURL=stateFilters.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/stateFilters.js\n// module id = 103\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @ng1api\n * @module directives\n */ /** for typedoc */\nvar angular_1 = require(\"../angular\");\nvar angular_2 = require(\"angular\");\nvar core_1 = require(\"@uirouter/core\");\nvar views_1 = require(\"../statebuilders/views\");\nvar services_1 = require(\"../services\");\nexports.uiView = ['$view', '$animate', '$uiViewScroll', '$interpolate', '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (angular_1.ng.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (angular_1.ng.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                }\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {}\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var previousEl, currentEl, currentScope, unregister, onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), viewConfig = undefined, inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + \".\" + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            var fromParentTagConfig = core_1.parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = core_1.parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        }\n                    };\n                    core_1.trace.traceUIViewEvent(\"Linking\", activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof views_1.Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        core_1.trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on(\"$destroy\", function () {\n                        core_1.trace.traceUIViewEvent(\"Destroying/Unregistering\", activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            core_1.trace.traceUIViewEvent(\"Removing (previous) el\", previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            core_1.trace.traceUIViewEvent(\"Destroying scope\", activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            core_1.trace.traceUIViewEvent(\"Animate out\", _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if (core_1.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            }\n        };\n        return directive;\n    }];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = core_1.parse('viewDecl.controllerAs');\n    var getResolveAs = core_1.parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: angular_2.noop };\n                var resolveCtx = cfg.path && new core_1.ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                core_1.trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && services_1.getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = $controller(controller, core_1.extend({}, locals, { $scope: scope, $element: $element }));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (core_1.isString(cfg.viewDecl.component)) {\n                    var cmp_1 = cfg.viewDecl.component;\n                    var kebobName = core_1.kebobString(cmp_1);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", \"i\");\n                    var getComponentController = function () {\n                        var directiveEl = [].slice.call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && angular_1.ng.element(directiveEl).data(\"$\" + cmp_1 + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        }\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof angular_1.ng.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (core_1.isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = core_1.tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onParamsChange\n    if (core_1.isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new core_1.ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params(\"to\");\n            var fromParams = $transition$.params(\"from\");\n            var toSchema = $transition$.treeChanges().to.map(function (node) { return node.paramSchema; }).reduce(core_1.unnestR, []);\n            var fromSchema = $transition$.treeChanges().from.map(function (node) { return node.paramSchema; }).reduce(core_1.unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = core_1.filter(toParams, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (core_1.isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && (trans[cacheProp_1] && trans[cacheProp_1][id_1] === true || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise, ids = trans[cacheProp_1] = trans[cacheProp_1] || {};\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val) { return ids[id_1] = (val !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nangular_1.ng.module('ui.router.state').directive('uiView', exports.uiView);\nangular_1.ng.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n//# sourceMappingURL=viewDirective.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/directives/viewDirective.js\n// module id = 104\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @module ng1 */ /** */\nvar angular_1 = require(\"./angular\");\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = ['$anchorScroll', '$timeout', function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        }];\n}\nangular_1.ng.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n//# sourceMappingURL=viewScroll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@uirouter/angularjs/lib/viewScroll.js\n// module id = 105\n// module chunks = 0","module.exports = \"<h1>Tous les posts</h1> <jlg-post-excerpt id=post.id ng-repeat=\\\"post in $ctrl.jlgWordpress.posts\\\"></jlg-post-excerpt> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-route/tmpl/jlg-home.html\n// module id = 106\n// module chunks = 0","module.exports = \"<jlg-page title=\\\"'Produits'\\\"></jlg-page> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-route/tmpl/jlg-products.html\n// module id = 107\n// module chunks = 0","module.exports = \"<jlg-page title=$root.pages.services></jlg-page> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-route/tmpl/jlg-services.html\n// module id = 108\n// module chunks = 0","module.exports = \"<jlg-page title=$root.pages.contact></jlg-page> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-route/tmpl/jlg-contact.html\n// module id = 109\n// module chunks = 0","module.exports = \"<post> <title ng-bind-html=$ctrl.post.title.rendered></title> <img ng-if=$ctrl.media ng-src={{$ctrl.media.source_url}}> <content ng-bind-html=$ctrl.post.content.rendered></content> </post> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/jlg-route/tmpl/jlg-post.html\n// module id = 110\n// module chunks = 0","angular.module('main')\r\n\t.run(($rootScope, jlgWordpress) => {\r\n\t\t$rootScope.pages = {\r\n\t\t\tcontact: 'Contact',\r\n\t\t\tservices: 'Services',\r\n\t\t\tproducts: 'Produits',\r\n\t\t};\r\n\t\tjlgWordpress.url = 'https://jlg-consulting.com/wordpress/' + 'wp-json';\r\n\t\tjlgWordpress.init();\r\n\t});\r\n\n\n\n// WEBPACK FOOTER //\n// ./app/config.js"],"sourceRoot":""}